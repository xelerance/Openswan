./xf12-parentR2 ike_alg_register_enc(): Activating OAKLEY_AES_CBC: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_512: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-sha2-512: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_256: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-sha2-256: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_SHA1: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-sha1: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_MD5: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-md5: Ok (ret=0)
./xf12-parentR2 loading secrets from "../../libpluto/samples/jj.secrets"
./xf12-parentR2 loaded private key for keyid: PPK_RSA:AQOg5H7A4/2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
./xf12-parentR2 registered kernel encr algorithm aes_cbc [12, 128<=key<=512]
./xf12-parentR2 registered kernel encr algorithm 3des [3, 192<=key<=192]
./xf12-parentR2 registered kernel integ algorithm hmac_sha1_96 [2, 160<=key<=160]
./xf12-parentR2 registered kernel integ algorithm hmac_md5_96 [1, 128<=key<=128]
./xf12-parentR2 registered kernel integ algorithm hmac_sha2_256_128 [12, 256<=key<=256]
./xf12-parentR2 registered kernel integ algorithm hmac_sha2_512_256 [14, 256<=key<=256]
| processing whack message of size: A
./xf12-parentR2 loaded key: 2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
./xf12-parentR2 loaded key: 66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9
| Added new connection parker1--jj2 with policy RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
./xf12-parentR2 use keyid: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 / 2:<>
| counting wild cards for @jamesjohnson.emmjay.credil.org is 0
./xf12-parentR2 use keyid: 1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 / 2:<>
| counting wild cards for @parker01.emmjay.credil.org is 0
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 exact-match
| find_host_pair: concluded with <none>
| connect_to_host_pair: 132.213.238.7:500 %address 192.168.1.1:500 -> hp:none
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (exact)
|   concluded with <none>
./xf12-parentR2 adding connection: "parker1--jj2"
| fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96
| ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
RC=0 "parker1--jj2": fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96; unrouted; eroute owner: #0
RC=0 "parker1--jj2":     myip=unset; hisip=unset;
RC=0 "parker1--jj2":   keys: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 2:none...
RC=0 "parker1--jj2":        ....1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 2:none
RC=0 "parker1--jj2":   ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; firstmsgid: 0
RC=0 "parker1--jj2":   policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK; prio: 64,96; interface: eth0; kind=CK_PERMANENT
| installing kernel algorithm none (0)
| installing kernel algorithm hmac_md5_96 (1)
| installing kernel algorithm hmac_sha1_96 (2)
| installing kernel algorithm hmac_sha2_256_128 (12)
| installing kernel algorithm 252?? (252)
| installing kernel algorithm hmac_sha2_384_192 (13)
| installing kernel algorithm hmac_sha2_512_256 (14)
| installing kernel algorithm null (11)
| installing kernel algorithm 3des (3)
| installing kernel algorithm aes_cbc (12)
|   =========== input from pcap file parentI1.pcap ========
skipping: eth0:4500 float outside: 55045 <=> d: 500
picking: eth0:500  outside: 55044 <=> d: 500
| *received 652 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 8c  22 00 01 0c
|   02 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  02 00 00 05  03 00 00 08
|   03 00 00 0c  00 00 00 08  04 00 00 0e  02 00 00 2c
|   02 01 00 04  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 02
|   00 00 00 08  04 00 00 0e  02 00 00 2c  03 01 00 04
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 08
|   02 00 00 05  03 00 00 08  03 00 00 0c  00 00 00 08
|   04 00 00 05  02 00 00 2c  04 01 00 04  03 00 00 0c
|   01 00 00 0c  80 0e 00 80  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 2c  05 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  02 00 00 05  03 00 00 08
|   03 00 00 0c  00 00 00 08  04 00 00 0f  00 00 00 2c
|   06 01 00 04  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 02
|   00 00 00 08  04 00 00 0f  28 00 01 08  00 0e 00 00
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|   29 00 00 14  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08
|   d3 20 e9 e3  29 00 00 1c  00 00 40 04  ea 59 1e 1b
|   30 a3 e0 94  4c dc 91 5b  b0 95 3c 48  70 73 62 f1
|   2b 00 00 1c  00 00 40 05  cd bc 1b 74  02 d7 5e 4c
|   da 5b cd 1c  a1 08 87 2b  f9 7d c4 c2  00 00 00 10
|   4f 45 ab ab  ab ab ab ab  ab ab ab ab
|  processing version=2.0 packet with exchange type=ISAKMP_v2_SA_INIT (34), msgid: 00000000
| I am the IKE SA Responder
| I am this exchange's Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| considering state entry: 0
|   reject: received request, needs response message
| considering state entry: 1
|   reject: received request, needs response message
| considering state entry: 2
|   reject: received request, needs response message
| considering state entry: 3
| now proceed with state specific processing using state #3 responder-V2_init
| find_host_connection2 called from ikev2parent_inI1outR1, me=132.213.238.7:500 him=192.168.1.1:500 policy=IKEv2ALLOW/-
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 any-match
| find_host_pair: comparing to me=132.213.238.7:500 %address him=192.168.1.1:500
| find_host_pair: concluded with parker1--jj2
| found_host_pair_conn (find_host_connection2): 132.213.238.7:500 %address/192.168.1.1:500 -> hp:parker1--jj2
| searching for connection with policy = IKEv2ALLOW/-
| found policy = RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK (parker1--jj2)
| find_host_connection2 returns parker1--jj2 (ike=none/none)
./xf12-parentR2 tentatively considering connection: parker1--jj2
| creating state object #1 at Z
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #1 bucket: 28
| will not send/process a dcookie
| received a notify..
| processor 'responder-V2_init' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI1outR1: calculated ke+nonce, sending R1
| nat chunk  80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   c0 a8 01 01  01 f4
| processing v2N_NAT_DETECTION_SOURCE_IP
| received nat-t hash  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b  b0 95 3c 48
|   70 73 62 f1
| calculated nat-t  h  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b  b0 95 3c 48
|   70 73 62 f1
| nat-t payloads for v2N_NAT_DETECTION_SOURCE_IP match: no NAT
| nat chunk  80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   84 d5 ee 07  01 f4
| processing v2N_NAT_DETECTION_DESTINATION_IP
| received nat-t hash  cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2
| calculated nat-t  h  cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2
| nat-t payloads for v2N_NAT_DETECTION_DESTINATION_IP match: no NAT
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_SA_INIT
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 00
| ***emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_ike_add() ealg=12(128) aalg=12(0) prfalg_id=5 modp_id=14, cnt=1
| __alg_info_ike_add() ealg=18(128) aalg=12(0) prfalg_id=5 modp_id=14, cnt=2
| __alg_info_ike_add() ealg=12(128) aalg=2(0) prfalg_id=5 modp_id=14, cnt=3
| __alg_info_ike_add() ealg=18(128) aalg=2(0) prfalg_id=5 modp_id=14, cnt=4
| __alg_info_ike_add() ealg=12(128) aalg=12(0) prfalg_id=5 modp_id=5, cnt=5
| __alg_info_ike_add() ealg=18(128) aalg=12(0) prfalg_id=5 modp_id=5, cnt=6
| __alg_info_ike_add() ealg=12(128) aalg=2(0) prfalg_id=5 modp_id=5, cnt=7
| __alg_info_ike_add() ealg=18(128) aalg=2(0) prfalg_id=5 modp_id=5, cnt=8
| __alg_info_ike_add() ealg=12(128) aalg=12(0) prfalg_id=5 modp_id=15, cnt=9
| __alg_info_ike_add() ealg=18(128) aalg=12(0) prfalg_id=5 modp_id=15, cnt=10
| __alg_info_ike_add() ealg=12(128) aalg=2(0) prfalg_id=5 modp_id=15, cnt=11
| __alg_info_ike_add() ealg=18(128) aalg=2(0) prfalg_id=5 modp_id=15, cnt=12
| found algorithm: aes_cbc(12)_128-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP2048(14)
| not including aes_gcm_8(18)_128-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP2048(14) in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| found algorithm: aes_cbc(12)_128-hmac_sha1_96(2)-prfsha2_256(5)-MODP2048(14)
| not including aes_gcm_8(18)_128-hmac_sha1_96(2)-prfsha2_256(5)-MODP2048(14) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| found algorithm: aes_cbc(12)_128-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP1536(5)
| not including aes_gcm_8(18)_128-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP1536(5) in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| found algorithm: aes_cbc(12)_128-hmac_sha1_96(2)-prfsha2_256(5)-MODP1536(5)
| not including aes_gcm_8(18)_128-hmac_sha1_96(2)-prfsha2_256(5)-MODP1536(5) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| found algorithm: aes_cbc(12)_128-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP3072(15)
| not including aes_gcm_8(18)_128-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP3072(15) in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| found algorithm: aes_cbc(12)_128-hmac_sha1_96(2)-prfsha2_256(5)-MODP3072(15)
| not including aes_gcm_8(18)_128-hmac_sha1_96(2)-prfsha2_256(5)-MODP3072(15) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 44
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 1
|    transform ID: 12
| ******parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 2
|    transform ID: 5
| collect encr: 12<=1 integ: 0<=0 prf: 5<=1 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 3
|    transform ID: 12
| collect encr: 12<=1 integ: 12<=1 prf: 5<=1 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 4
|    transform ID: 14
| collect encr: 12<=1 integ: 12<=1 prf: 5<=1 dh: 14<=1
| encr: 0<=1 integ: 0<=1 prf: 0<=1 dh: 0<=1
| selected proposal 1 encr=aes_cbc[128] integ=hmac_sha2_256_128 prf=prf-hmac-sha2-256 modp=OAKLEY_GROUP_MODP2048
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 44
|    prop #: 2
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| ****emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ******emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 2
|    transform ID: 5
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 4
|    transform ID: 14
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 44
| emitting length of IKEv2 Security Association Payload: 48
| DH public value received:
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|    next-payload: ISAKMP_NEXT_v2KE [@28=0x22]
| ***emit IKEv2 Key Exchange Payload:
|    critical bit: none
|    transform type: 14
| emitting 256 raw bytes of ikev2 g^x into IKEv2 Key Exchange Payload
| ikev2 g^x  bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
| emitting length of IKEv2 Key Exchange Payload: 264
|    next-payload: ISAKMP_NEXT_v2Ni [@76=0x28]
| ***emit IKEv2 Nonce Payload:
|    critical bit: none
| emitting 16 raw bytes of IKEv2 nonce into IKEv2 Nonce Payload
| IKEv2 nonce  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| emitting length of IKEv2 Nonce Payload: 20
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   84 d5 ee 07  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@340=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe
| emitting length of IKEv2 Notify Payload: 28
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   c0 a8 01 01  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@360=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  81 b5 74 15  c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab
|   25 31 bf 62
| emitting length of IKEv2 Notify Payload: 28
| Thinking about sending a certificate request (CERTREQ)
|   my policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   my next payload will not be a certificate request
| I did not send a certificate request (CERTREQ) because
|  has a preloaded a public for that end in st
|   no known CA for the other end
|   no CA certs available for validation
|    next-payload: ISAKMP_NEXT_v2V [@388=0x2b]
| ***emit ISAKMP Vendor ID Payload:
| emitting 12 raw bytes of Vendor ID into ISAKMP Vendor ID Payload
| Vendor ID  4f 45 ab ab  ab ab ab ab  ab ab ab ab
| emitting length of ISAKMP Vendor ID Payload: 16
| emitting length of ISAKMP Message: 432
| #1 complete v2 state transition with STF_OK
./xf12-parentR2 transition from state STATE_IKEv2_START to state STATE_PARENT_R1
| v2_state_transition: st is #1; pst is #0; transition_st is #1
./xf12-parentR2 STATE_PARENT_R1: received v2I1, sent v2R1 (msgid: 00000000/00000000)
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 432 bytes for STATE_IKEv2_START through eth0:500 [93.184.216.34:55044] to 192.168.1.1:500 (using #1)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 01 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 0c  03 00 00 08
|   02 00 00 05  00 00 00 08  04 00 00 0e  28 00 01 08
|   00 0e 00 00  bd 48 18 9c  9e 03 70 f2  55 ce 45 22
|   9f c7 c9 48  43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3
|   06 43 f0 0a  e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e
|   f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17
|   af 6c b8 31  08 d7 19 5a  7b c4 54 c2  13 47 98 c2
|   cc d2 16 29  75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2
|   f3 f2 49 2c  f6 06 73 c1  96 1e ce 58  81 01 1c cb
|   16 dc f9 fc  c7 93 08 75  58 16 57 71  69 96 66 b7
|   a9 81 7f f7  37 4d 7c 41  38 62 a6 39  00 81 ca 3d
|   1d fc f7 b5  08 38 d4 34  70 22 6c 21  d2 5b 20 a1
|   d2 ba 2a d1  89 f3 20 79  ce ac 1e c2  ec 7d ae 76
|   94 40 39 a0  3d a6 6a 81  e2 92 09 be  18 4f a0 1e
|   5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53  5d 17 6a be
|   1b c5 70 ab  34 47 bc 09  14 7c aa 91  9c 8f 81 dc
|   1e f9 87 cd  6a ec fa f3  a5 9e 37 bc  ac 3d fd e1
|   32 8e e8 b3  fe d3 8b f4  7b 50 34 13  33 7a 93 ea
|   e9 3c 0e 8b  29 00 00 14  20 98 9d 37  a8 14 a6 4d
|   8f f0 7c 08  d3 20 e9 e3  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 ab ab  ab ab ab ab  ab ab ab ab
1: output to OUTPUT/xf12-parentR2.pcap
|   =========== input from pcap file parentI2.pcap ========
skipping: eth0:4500 float outside: 55045 <=> d: 500
picking: eth0:500  outside: 55044 <=> d: 500
| *received 544 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 20  23 00 02 04
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   35 74 2f cc  14 4b 82 96  7b 84 c4 9e  dd 42 f3 c3
|   2c 46 4e 29  0c de 0c cc  5c 07 93 b6  81 00 3e 7a
|   fa ff 75 1d  f3 5d e0 25  1f 9c bc a1  66 91 c7 18
|   d9 fb 74 cd  50 44 ab a8  74 f2 20 6e  8f 97 c2 78
|   5c cb dd f4  5f 69 90 0d  a9 b6 ba 12  fe 2e 1a 42
|   e6 ac d0 39  7c a0 f7 93  99 4e c5 6b  24 78 89 f2
|   ee 0d 74 ad  05 33 79 7a  d3 53 9d 5d  d7 91 2b e6
|   a6 a6 9e 6b  df 45 cb 1d  86 d3 ab 3f  db 9d b5 55
|   2f 4e 81 f5  a2 a8 fb 99  43 d0 40 9a  8d c8 9b 49
|   e5 58 de 08  cf d3 21 22  33 f6 28 b6  5a e4 a1 46
|   31 96 46 f5  0a 07 69 e4  3a 4f 99 9d  83 08 b8 ee
|   35 7f 59 d6  0d 8f 31 d2  90 ca f7 13  94 55 ee 8c
|   be 61 e9 51  69 a6 4c a5  29 e6 18 32  75 cf d2 05
|   77 f4 a7 ba  1b ee 94 d3  71 14 15 51  df 51 93 f2
|   14 0e 36 78  b9 d5 8a 13  28 1f 8e f4  83 51 4b 96
|   e8 e7 e5 82  0c 3a 74 4e  c2 f4 8d b3  95 a7 f4 24
|   a5 d5 84 ab  bf 88 a2 ab  bc c3 af 50  94 c1 67 74
|   36 15 a0 3f  74 cf e5 bd  81 93 4c 7f  69 2e f1 9c
|   df 8b f8 c2  7c 70 d7 1a  4d 8a fb d5  b8 50 fb 68
|   57 57 0c cc  41 98 a6 80  8f 63 9b e8  be 3a 3e d0
|   50 ac 99 86  72 df 63 04  02 e1 bf 26  8d 5b f9 52
|   8b ac 05 53  70 b9 4a 52  22 70 32 dd  16 13 6d 3a
|   b3 e7 44 96  38 d0 ca 19  b9 b4 6e 8e  43 ae 24 5a
|   63 ba 32 27  24 fd 0e 42  f0 98 4f aa  19 14 c0 29
|   99 d9 10 4e  11 7d 3d c4  67 7b 9f 65  ab 03 b8 84
|   14 af 2e 52  f3 1d bd a1  37 90 8a 8a  0e 1a 0e 17
|   39 f9 21 4a  3e fc ce 56  2b 74 51 5e  1e 02 21 61
|   17 30 fc f2  d2 f2 b8 fc  0b e0 51 e0  8f 79 bf 95
|   8d 04 d5 23  77 56 70 96  67 4a f9 bf  9d 9d e9 2a
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35), msgid: 00000001
| I am the IKE SA Responder
| I am this exchange's Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 peer and cookies match on #1
| v2 state object #1 (parker1--jj2) found, in STATE_PARENT_R1
| state found and its state is:STATE_PARENT_R1 msgid: 00001
| considering state entry: 0
|   reject: received request, needs response message
| considering state entry: 1
|   reject: received request, needs response message
| considering state entry: 2
|   reject: received request, needs response message
| considering state entry: 3
|   reject:state unneeded and state available
| considering state entry: 4
| now proceed with state specific processing using state #4 responder-auth-process
| ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
| processor 'responder-auth-process' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI2outR2: calculating g^{xy}, sending R2
| ikev2 parent SA details
| ikev2 I 0x8001020304050607 0xdebc583a8f40d0cf sha256:0x4ea8e662b07cdd430f6944c6723e4b822e053c7e128712992e053c7e12871299 aes128:0x3f44bf47cafd8150591deb088199fcbf
| ikev2 R 0x8001020304050607 0xdebc583a8f40d0cf sha256:0x515b0bd22e6d76b34fdb760aa7bfad802e053c7e128712992e053c7e12871299 aes128:0xbedb67ec7dc3d00cccac42e70cd63bde
| decrypting as RESPONDER, using INITIATOR keys
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 20  23 00 02 04
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   35 74 2f cc  14 4b 82 96  7b 84 c4 9e  dd 42 f3 c3
|   2c 46 4e 29  0c de 0c cc  5c 07 93 b6  81 00 3e 7a
|   fa ff 75 1d  f3 5d e0 25  1f 9c bc a1  66 91 c7 18
|   d9 fb 74 cd  50 44 ab a8  74 f2 20 6e  8f 97 c2 78
|   5c cb dd f4  5f 69 90 0d  a9 b6 ba 12  fe 2e 1a 42
|   e6 ac d0 39  7c a0 f7 93  99 4e c5 6b  24 78 89 f2
|   ee 0d 74 ad  05 33 79 7a  d3 53 9d 5d  d7 91 2b e6
|   a6 a6 9e 6b  df 45 cb 1d  86 d3 ab 3f  db 9d b5 55
|   2f 4e 81 f5  a2 a8 fb 99  43 d0 40 9a  8d c8 9b 49
|   e5 58 de 08  cf d3 21 22  33 f6 28 b6  5a e4 a1 46
|   31 96 46 f5  0a 07 69 e4  3a 4f 99 9d  83 08 b8 ee
|   35 7f 59 d6  0d 8f 31 d2  90 ca f7 13  94 55 ee 8c
|   be 61 e9 51  69 a6 4c a5  29 e6 18 32  75 cf d2 05
|   77 f4 a7 ba  1b ee 94 d3  71 14 15 51  df 51 93 f2
|   14 0e 36 78  b9 d5 8a 13  28 1f 8e f4  83 51 4b 96
|   e8 e7 e5 82  0c 3a 74 4e  c2 f4 8d b3  95 a7 f4 24
|   a5 d5 84 ab  bf 88 a2 ab  bc c3 af 50  94 c1 67 74
|   36 15 a0 3f  74 cf e5 bd  81 93 4c 7f  69 2e f1 9c
|   df 8b f8 c2  7c 70 d7 1a  4d 8a fb d5  b8 50 fb 68
|   57 57 0c cc  41 98 a6 80  8f 63 9b e8  be 3a 3e d0
|   50 ac 99 86  72 df 63 04  02 e1 bf 26  8d 5b f9 52
|   8b ac 05 53  70 b9 4a 52  22 70 32 dd  16 13 6d 3a
|   b3 e7 44 96  38 d0 ca 19  b9 b4 6e 8e  43 ae 24 5a
|   63 ba 32 27  24 fd 0e 42  f0 98 4f aa  19 14 c0 29
|   99 d9 10 4e  11 7d 3d c4  67 7b 9f 65  ab 03 b8 84
|   14 af 2e 52  f3 1d bd a1  37 90 8a 8a  0e 1a 0e 17
|   39 f9 21 4a  3e fc ce 56  2b 74 51 5e  1e 02 21 61
|   17 30 fc f2  d2 f2 b8 fc  0b e0 51 e0  8f 79 bf 95
| R2 calculated auth:  8d 04 d5 23  77 56 70 96  67 4a f9 bf  9d 9d e9 2a
| R2  provided  auth:  8d 04 d5 23  77 56 70 96  67 4a f9 bf  9d 9d e9 2a
| authenticator matched, np=35
| data before decryption:
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   35 74 2f cc  14 4b 82 96  7b 84 c4 9e  dd 42 f3 c3
|   2c 46 4e 29  0c de 0c cc  5c 07 93 b6  81 00 3e 7a
|   fa ff 75 1d  f3 5d e0 25  1f 9c bc a1  66 91 c7 18
|   d9 fb 74 cd  50 44 ab a8  74 f2 20 6e  8f 97 c2 78
|   5c cb dd f4  5f 69 90 0d  a9 b6 ba 12  fe 2e 1a 42
|   e6 ac d0 39  7c a0 f7 93  99 4e c5 6b  24 78 89 f2
|   ee 0d 74 ad  05 33 79 7a  d3 53 9d 5d  d7 91 2b e6
|   a6 a6 9e 6b  df 45 cb 1d  86 d3 ab 3f  db 9d b5 55
|   2f 4e 81 f5  a2 a8 fb 99  43 d0 40 9a  8d c8 9b 49
|   e5 58 de 08  cf d3 21 22  33 f6 28 b6  5a e4 a1 46
|   31 96 46 f5  0a 07 69 e4  3a 4f 99 9d  83 08 b8 ee
|   35 7f 59 d6  0d 8f 31 d2  90 ca f7 13  94 55 ee 8c
|   be 61 e9 51  69 a6 4c a5  29 e6 18 32  75 cf d2 05
|   77 f4 a7 ba  1b ee 94 d3  71 14 15 51  df 51 93 f2
|   14 0e 36 78  b9 d5 8a 13  28 1f 8e f4  83 51 4b 96
|   e8 e7 e5 82  0c 3a 74 4e  c2 f4 8d b3  95 a7 f4 24
|   a5 d5 84 ab  bf 88 a2 ab  bc c3 af 50  94 c1 67 74
|   36 15 a0 3f  74 cf e5 bd  81 93 4c 7f  69 2e f1 9c
|   df 8b f8 c2  7c 70 d7 1a  4d 8a fb d5  b8 50 fb 68
|   57 57 0c cc  41 98 a6 80  8f 63 9b e8  be 3a 3e d0
|   50 ac 99 86  72 df 63 04  02 e1 bf 26  8d 5b f9 52
|   8b ac 05 53  70 b9 4a 52  22 70 32 dd  16 13 6d 3a
|   b3 e7 44 96  38 d0 ca 19  b9 b4 6e 8e  43 ae 24 5a
|   63 ba 32 27  24 fd 0e 42  f0 98 4f aa  19 14 c0 29
|   99 d9 10 4e  11 7d 3d c4  67 7b 9f 65  ab 03 b8 84
|   14 af 2e 52  f3 1d bd a1  37 90 8a 8a  0e 1a 0e 17
|   39 f9 21 4a  3e fc ce 56  2b 74 51 5e  1e 02 21 61
|   17 30 fc f2  d2 f2 b8 fc  0b e0 51 e0  8f 79 bf 95
| decrypted payload:  27 00 00 22  02 00 00 00  70 61 72 6b  65 72 30 31
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67 21 00  01 08 01 00  00 00 66 fd  e5 e8 8d 84
|   d9 7e a9 7c  70 3f 24 5f  15 6f 6d d3  32 e2 c0 55
|   e8 e8 8e 84  b9 6b 20 ba  0f 20 5b 93  bd ef c5 5d
|   cd 29 24 a2  98 1c ba cf  71 65 95 c9  22 bd ca 07
|   87 d5 50 1c  44 45 c7 4e  f9 18 0d 5e  96 2b 99 b5
|   74 a4 49 40  65 3b c5 87  49 41 21 63  0f 2c 8f 9e
|   ca 13 6c e9  13 58 bc e6  66 0d 30 9f  94 0f 8c e0
|   7d c5 c1 95  6a 5c 06 ec  e2 f7 fb d7  75 93 0e d0
|   30 eb 3d 02  e1 c5 65 e6  c5 fb b8 ab  2e e6 3b 65
|   03 b1 96 61  1d e2 fc 7e  e3 2b ab 4c  ab 08 4b 32
|   5e be a6 87  23 26 9f 9d  b9 5b b5 8f  04 14 5e 6c
|   8f b2 ec 5e  f7 2a 79 fd  8d 8a e4 10  9c 31 b6 36
|   49 05 50 d7  7e 22 cb ff  5c a1 57 11  d0 de 7b 41
|   cc ec 7b c3  f4 98 44 5a  83 89 61 2f  f2 d8 b8 cd
|   de 38 24 73  e1 e9 95 44  7f bf 00 b8  57 d6 77 74
|   5d b9 52 49  8d df 19 e4  4a f9 83 9b  20 4c 3e 99
|   ad eb 1e d2  70 77 3f 2e  78 c7 2c 00  00 54 02 00
|   00 28 01 03  04 03 12 34  56 78 03 00  00 0c 01 00
|   00 0c 80 0e  00 80 03 00  00 08 03 00  00 0c 00 00
|   00 08 05 00  00 00 00 00  00 28 02 03  04 03 12 34
|   56 78 03 00  00 0c 01 00  00 0c 80 0e  00 80 03 00
|   00 08 03 00  00 02 00 00  00 08 05 00  00 00 2d 00
|   00 30 01 00  00 00 08 00  00 28 00 00  ff ff fd 68
|   c9 f9 41 57  00 02 00 00  00 01 00 00  00 00 fd 68
|   c9 f9 41 57  00 02 00 00  00 01 ff ff  ff ff 00 00
|   00 30 01 00  00 00 08 00  00 28 00 00  ff ff fd 68
|   c9 f9 41 57  00 00 00 00  00 00 00 00  00 00 fd 68
|   c9 f9 41 57  00 00 ff ff  ff ff ff ff  ff ff 00 01
| striping 2 bytes as pad
| **parse IKEv2 Identification Payload:
|    critical bit: none
|    length: 34
|    id_type: ID_FQDN
| processing payload: ISAKMP_NEXT_v2IDi (len=34)
| **parse IKEv2 Authentication Payload:
|    critical bit: none
|    length: 264
|    auth method: v2_AUTH_RSA
| processing payload: ISAKMP_NEXT_v2AUTH (len=264)
| **parse IKEv2 Security Association Payload:
|    critical bit: none
|    length: 84
| processing payload: ISAKMP_NEXT_v2SA (len=84)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSi (len=48)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSr (len=48)
./xf12-parentR2 IKEv2 mode peer ID is ID_FQDN: '@parker01.emmjay.credil.org'
| find_ID_host_pair: looking for me=(none) him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|    match_id a=@parker01.emmjay.credil.org
|             b=@parker01.emmjay.credil.org
|    results  matched
|   concluded with parker1--jj2 [wildcard: 0]
| parent SA IDi pi verify
|   cc 07 97 44  b4 a3 4e 8a  0d 2f 27 8b  ee 06 6d 07
|   2e 05 3c 7e  12 87 12 99  2e 05 3c 7e  12 87 12 99
| parent SA I2 idhash verify
|   02 00 00 00  70 61 72 6b  65 72 30 31  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| calculate sighash
| inputs to hash1 (first packet)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 8c  22 00 01 0c
|   02 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  02 00 00 05  03 00 00 08
|   03 00 00 0c  00 00 00 08  04 00 00 0e  02 00 00 2c
|   02 01 00 04  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 02
|   00 00 00 08  04 00 00 0e  02 00 00 2c  03 01 00 04
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 08
|   02 00 00 05  03 00 00 08  03 00 00 0c  00 00 00 08
|   04 00 00 05  02 00 00 2c  04 01 00 04  03 00 00 0c
|   01 00 00 0c  80 0e 00 80  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 2c  05 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  02 00 00 05  03 00 00 08
|   03 00 00 0c  00 00 00 08  04 00 00 0f  00 00 00 2c
|   06 01 00 04  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 02
|   00 00 00 08  04 00 00 0f  28 00 01 08  00 0e 00 00
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|   29 00 00 14  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08
|   d3 20 e9 e3  29 00 00 1c  00 00 40 04  ea 59 1e 1b
|   30 a3 e0 94  4c dc 91 5b  b0 95 3c 48  70 73 62 f1
|   2b 00 00 1c  00 00 40 05  cd bc 1b 74  02 d7 5e 4c
|   da 5b cd 1c  a1 08 87 2b  f9 7d c4 c2  00 00 00 10
|   4f 45 ab ab  ab ab ab ab  ab ab ab ab
| inputs to hash2 (responder nonce)
|   20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| pidhash len: 32
| idhash  5e b3 b0 23  4a ae f7 20  6a 65 24 eb  73 1f 7c 1a
|   dd 85 9d 42  dd 8f e2 1a  f9 35 f1 43  b4 12 11 ee
| v2rsa calculated octets (sans ASN.1)
|   6f 34 67 6a  ed c2 af 84  32 d7 50 34  84 79 d2 b7
|   04 7a d5 40
| IKEv2 Authentication Payload
|   21 00 01 08  01 00 00 00
| key issuer CA is '%any'
| verify_sh decrypted SIG1:
|   00 01 ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  00 30 21 30
|   09 06 05 2b  0e 03 02 1a  05 00 04 14  6f 34 67 6a
|   ed c2 af 84  32 d7 50 34  84 79 d2 b7  04 7a d5 40
| pad_len calculated: 218 hash_len: 35
| v2rsa decrypted SIG:
|   6f 34 67 6a  ed c2 af 84  32 d7 50 34  84 79 d2 b7
|   04 7a d5 40
| v2rsa computed hash:
|   6f 34 67 6a  ed c2 af 84  32 d7 50 34  84 79 d2 b7
|   04 7a d5 40
| an RSA Sig check passed with *AQN7wUerV [preloaded key]
| PARENT SA now authenticated, building child and reply
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 01
|    next-payload: ISAKMP_NEXT_v2E [@16=0x2e]
| ***emit IKEv2 Encryption Payload:
|    critical bit: none
| emitting 16 zero bytes of iv into IKEv2 Encryption Payload
| IKEv2 thinking whether to send my certificate:
|  my policy has  RSASIG, the policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|  sendcert: CERT_SENDIFASKED and I did not get a certificate request
|  so do not send cert.
| I did not send a certificate because I do not have one.
|    next-payload: ISAKMP_NEXT_v2IDr [@-20=0x24]
| *****emit IKEv2 Identification Payload:
|    critical bit: none
|    id_type: ID_FQDN
| emitting 26 raw bytes of my identity into IKEv2 Identification Payload
| my identity  70 61 72 6b  65 72 30 31  2e 65 6d 6d  6a 61 79 2e
|   63 72 65 64  69 6c 2e 6f  72 67
| emitting length of IKEv2 Identification Payload: 34
| idhash calc pr  e9 00 11 7e  41 d4 31 62  40 b8 63 22  bf 06 9f bc
|   2e 05 3c 7e  12 87 12 99  2e 05 3c 7e  12 87 12 99
| idhash calc R2  02 00 00 00  70 61 72 6b  65 72 30 31  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| assembled IDr payload -- CERT next
| CHILD SA proposals received
| going to assemble AUTH payload
|    next-payload: ISAKMP_NEXT_v2AUTH [@0=0x27]
| *****emit IKEv2 Authentication Payload:
|    critical bit: none
|    auth method: v2_AUTH_RSA
| started looking for secret for @jamesjohnson.emmjay.credil.org->@parker01.emmjay.credil.org of kind PPK_RSA
| actually looking for secret for @jamesjohnson.emmjay.credil.org->@parker01.emmjay.credil.org of kind PPK_RSA
| line 1: key type PPK_RSA(@jamesjohnson.emmjay.credil.org) to type PPK_RSA
| 1: compared key (none) to @jamesjohnson.emmjay.credil.org / @parker01.emmjay.credil.org -> 2
| 2: compared key (none) to @jamesjohnson.emmjay.credil.org / @parker01.emmjay.credil.org -> 2
| line 1: match=16
| best_match 0>16 line=1
| concluding with best_match=16 lineno=1
| rsa key AQOg5H7A4 found
| calculate sighash
| inputs to hash1 (first packet)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 01 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 0c  03 00 00 08
|   02 00 00 05  00 00 00 08  04 00 00 0e  28 00 01 08
|   00 0e 00 00  bd 48 18 9c  9e 03 70 f2  55 ce 45 22
|   9f c7 c9 48  43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3
|   06 43 f0 0a  e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e
|   f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17
|   af 6c b8 31  08 d7 19 5a  7b c4 54 c2  13 47 98 c2
|   cc d2 16 29  75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2
|   f3 f2 49 2c  f6 06 73 c1  96 1e ce 58  81 01 1c cb
|   16 dc f9 fc  c7 93 08 75  58 16 57 71  69 96 66 b7
|   a9 81 7f f7  37 4d 7c 41  38 62 a6 39  00 81 ca 3d
|   1d fc f7 b5  08 38 d4 34  70 22 6c 21  d2 5b 20 a1
|   d2 ba 2a d1  89 f3 20 79  ce ac 1e c2  ec 7d ae 76
|   94 40 39 a0  3d a6 6a 81  e2 92 09 be  18 4f a0 1e
|   5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53  5d 17 6a be
|   1b c5 70 ab  34 47 bc 09  14 7c aa 91  9c 8f 81 dc
|   1e f9 87 cd  6a ec fa f3  a5 9e 37 bc  ac 3d fd e1
|   32 8e e8 b3  fe d3 8b f4  7b 50 34 13  33 7a 93 ea
|   e9 3c 0e 8b  29 00 00 14  20 98 9d 37  a8 14 a6 4d
|   8f f0 7c 08  d3 20 e9 e3  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 ab ab  ab ab ab ab  ab ab ab ab
| inputs to hash2 (initiator nonce)
|   20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| pidhash len: 32
| idhash  a4 55 2c 41  1b 86 93 f8  b9 da 15 1a  d4 0c 38 cd
|   fe 79 69 e3  bb ef 9e e3  4f 71 cf fe  e5 f0 86 c4
| v2rsa octets  30 21 30 09  06 05 2b 0e  03 02 1a 05  00 04 14 a6
|   ea 5b 31 11  40 e3 54 30  2c 4b 9e 7f  18 51 7c ac
|   7c ec fd
| signing hash with RSA Key *AQOg5H7A4
| emitting 274 raw bytes of rsa signature into IKEv2 Authentication Payload
| rsa signature  02 b6 0a 2a  dd 8a 52 65  2d be fa 47  b1 9d 85 9f
|   93 78 5a 1a  d1 9c 75 6f  de d5 78 3f  c7 15 33 c5
|   e1 9e 09 7a  2f 30 a2 df  ea c0 9d 01  a6 14 19 c5
|   39 63 43 57  63 52 de ba  ba f7 8d 2d  02 56 54 53
|   d3 80 b6 40  f0 cf 54 3e  60 ec 96 d1  eb 27 18 90
|   25 b8 73 00  75 ce 9a d2  96 68 b1 b6  64 0e c4 ec
|   b3 37 72 4e  26 03 03 77  af 6f 33 c8  84 c9 58 ad
|   2d 4c 3a 22  9f 66 9d 38  1c b1 62 a2  9d 97 39 8d
|   69 f5 41 39  0c 9c ec fe  51 08 3c 53  3e c5 7f 67
|   02 de ea 5c  a2 71 4e cb  9a 17 de ed  d4 56 43 c5
|   b7 60 7a 7a  72 97 be 32  ad 6c 63 11  40 1d 95 bb
|   9c b1 45 88  3d 81 f2 82  bd 5f e5 c2  40 27 f3 2f
|   18 62 b9 4b  27 01 1d 1b  d5 0a 53 90  03 08 ed bf
|   d7 03 71 0f  69 f6 0b 93  13 21 6f 25  fd e5 7a b8
|   dc 39 e9 b7  45 04 0b 69  95 0c 0f c0  da c7 c2 4a
|   00 4a 80 45  ca 1b 44 c8  a6 75 f5 35  2f 9e 3b d3
|   90 1c 6c 7a  a2 80 83 2f  51 4d 1a a7  87 c9 ef 1f
|   b0 8b
| emitting length of IKEv2 Authentication Payload: 282
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| ikev2_child_ts_evaluate, evaluating base fit for parker1--jj2 against tsi=1,tsr=1 traffic selectors
|   ikev2_evaluate_connection_fit evaluating our I=parker1--jj2:fd68:c9f9:4157:2:0:1::/96:0/0 R=fd68:c9f9:4157::/64:0/0  to their:
|     tsi[0]=fd68:c9f9:4157:2:0:1::/fd68:c9f9:4157:2:0:1:ffff:ffff proto=0 portrange 0-65535
|     tsr[0]=fd68:c9f9:4157::/fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto=0 portrange 0-65535
| ei->port 0  tsi[tsi_ni].startport 0  tsi[tsi_ni].endport 65535
|       has ts_range1=32 maskbits1=96 ts_range2=64 maskbits2=64 fitbits=32896 <> -1
| bfit_n=ikev2_evaluate_connection_fit found better fit c parker1--jj2
|     evaluate_connection_port_fit tsi_n[1], best=-1
|    tsi[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0], range_i=65536 best=-1
|    tsr[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0] tsr_n[0], range=65536/65536 best=-1
|     best ports fit so far: tsi[0] fitrange_i 65536, tsr[0] fitrange_r 65536, matchiness 131072
|     port_fitness 131072
| ikev2_evaluate_connection_port_fit found better fit c parker1--jj2, tsi[0],tsr[0]
| ikev2_evaluate_connection_fit, concluded with parker1--jj2
| duplicating state object #1
| creating state object #2 at Z
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #2 bucket: 28
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157::
|   ip high: fd68:c9f9:4157:0:ffff:ffff:ffff:ffff
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157:2:0:1::
|   ip high: fd68:c9f9:4157:2:0:1:ffff:ffff
|    next-payload: ISAKMP_NEXT_v2SA [@34=0x21]
| *****emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_esp_add() ealg=12/128bit aalg=12/0bit cnt=1
| __alg_info_esp_add() ealg=12/128bit aalg=2/0bit cnt=2
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 1
|    transform ID: 12
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 3
|    transform ID: 12
| collect encr: 12<=1 integ: 12<=1 prf: 0<=0 dh: 0<=0
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 5
|    transform ID: 0
| collect encr: 12<=1 integ: 12<=1 prf: 0<=0 dh: 0<=0
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 2
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ******emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| emitting 4 raw bytes of our spi into IKEv2 Proposal Substructure Payload
| our spi  12 34 56 78
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ********emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 5
|    transform ID: 0
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 40
| emitting length of IKEv2 Security Association Payload: 44
|    next-payload: ISAKMP_NEXT_v2TSi [@316=0x2c]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
|    next-payload: ISAKMP_NEXT_v2TSr [@360=0x2d]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
| ikev2_derive_child_keys: using prf-hmac-sha2-256 for prf+ (SA #2 cloned from #1)
| childsacalc.ni  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| childsacalc.nr  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| ikev2_derive_child_keys: my role is RESPONDER
| prf+[1]:  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
|   78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
| prf+[2]:  fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
|   36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
| prf+[3]:  9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
| our  keymat  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
|   78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
|   fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
| peer keymat  36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
|   9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
| state #2: install_ipsec_sa() for inbound and outbound
| route owner of "parker1--jj2" unrouted: NULL; eroute owner: NULL
| could_route called for parker1--jj2 (kind=CK_PERMANENT)
| ESP enckey:  36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
| ESP authkey:  9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
writing netlink for esp.12345678@192.168.1.1
0000: b4 01 00 00  10 00 05 00  00 00 00 00  00 00 00 00
0040: 00 00 00 00  00 00 00 00  c0 a8 01 01  00 00 00 00
0050: 00 00 00 00  00 00 00 00  12 34 56 78  32 00 00 00
0060: 84 d5 ee 07  00 00 00 00  00 00 00 00  00 00 00 00
0070: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0080: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
00e0: 01 40 00 00  02 00 01 20  20 00 00 00  00 00 00 00
00f0: 6c 00 14 00  73 68 61 32  35 36 00 00  00 00 00 00
0130: 00 00 00 00  00 01 00 00  80 00 00 00  9d e0 a0 3a
0140: b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70  ef 67 05 70
0150: 8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13  58 00 02 00
0160: 61 65 73 00  35 36 00 00  00 00 00 00  00 00 00 00
01a0: 80 00 00 00  36 99 5c dd  82 37 91 bd  af 84 94 1e
01b0: fd 34 cd 52
| ESP enckey:  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
| ESP authkey:  78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
|   fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
writing netlink for esp.12345678@132.213.238.7
0000: b4 01 00 00  1a 00 05 00  00 00 00 00  00 00 00 00
0040: 00 00 00 00  00 00 00 00  84 d5 ee 07  00 00 00 00
0050: 00 00 00 00  00 00 00 00  12 34 56 78  32 00 00 00
0060: c0 a8 01 01  00 00 00 00  00 00 00 00  00 00 00 00
0070: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0080: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
00e0: 01 40 00 00  02 00 01 20  20 00 00 00  00 00 00 00
00f0: 6c 00 14 00  73 68 61 32  35 36 00 00  00 00 00 00
0130: 00 00 00 00  00 01 00 00  80 00 00 00  78 9d 67 25
0140: ba a5 bf 18  27 62 68 08  85 2d 47 12  fe 7f a4 85
0150: 4c 77 99 8e  bd 38 73 a0  58 50 d5 9d  58 00 02 00
0160: 61 65 73 00  35 36 00 00  00 00 00 00  00 00 00 00
01a0: 80 00 00 00  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c
01b0: 38 9d 1a 41
writing netlink policy for tun.10000@132.213.238.7
0000: 08 01 00 00  19 00 05 00  00 00 00 00  00 00 00 00
0010: fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
0020: fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
0030: 00 00 00 00  00 00 00 00  0a 00 40 60  00 00 00 00
0040: 00 00 00 00  00 00 00 00  ff ff ff ff  ff ff ff ff
0050: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0060: ff ff ff ff  ff ff ff ff  00 00 00 00  00 00 00 00
00a0: 00 00 00 00  00 00 00 00  a0 64 00 00  00 00 00 00
00b0: 00 00 00 00  00 00 00 00  44 00 05 00  84 d5 ee 07
00d0: 32 00 00 00  02 00 00 00  c0 a8 01 01  00 00 00 00
00e0: 00 00 00 00  00 00 00 00  01 40 00 00  01 00 00 00
00f0: ff ff ff ff  ff ff ff ff  ff ff ff ff  0c 00 15 00
0100: 02 00 00 00  ff ff ff ff
./xf12-parentR2 add inbound eroute fd68:c9f9:4157:2:0:1::/96:0 --0-> fd68:c9f9:4157::/64:0 => tun.10000@132.213.238.7 succeeded
| sr for #2: unrouted (eroute_owner: #0)
| route owner of "parker1--jj2" unrouted: NULL; eroute owner: NULL
| route_and_eroute with c: parker1--jj2 (next: none) ero:null esr:{(nil)} ro:null rosr:{(nil)} and state: 2
writing netlink policy for tun.0@192.168.1.1
0000: 08 01 00 00  19 00 05 00  00 00 00 00  00 00 00 00
0010: fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
0020: fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
0030: 00 00 00 00  00 00 00 00  0a 00 60 40  00 00 00 00
0040: 00 00 00 00  00 00 00 00  ff ff ff ff  ff ff ff ff
0050: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0060: ff ff ff ff  ff ff ff ff  00 00 00 00  00 00 00 00
00a0: 00 00 00 00  00 00 00 00  a0 64 00 00  00 00 00 00
00b0: 01 00 00 00  00 00 00 00  44 00 05 00  c0 a8 01 01
00d0: 32 00 00 00  02 00 00 00  84 d5 ee 07  00 00 00 00
00e0: 00 00 00 00  00 00 00 00  01 40 00 00  01 00 00 00
00f0: ff ff ff ff  ff ff ff ff  ff ff ff ff  0c 00 15 00
0100: 02 00 00 00  ff ff ff ff
./xf12-parentR2 eroute_connection add eroute fd68:c9f9:4157::/64:0 --0-> fd68:c9f9:4157:2:0:1::/96:0 => tun.0@192.168.1.1 succeeded
| command executing up-client
| executing up
| route_and_eroute: firewall_notified: true
| command executing prepare-client
| executing prepare
| command executing route-client
| executing route
| route_and_eroute: instance "parker1--jj2", setting eroute_owner to #2 (was #0) (newest_ipsec_sa=#0)
| emitting 8 raw bytes of padding and length into cleartext
| padding and length  00 01 02 03  04 05 06 07
| emitting 16 zero bytes of length of truncated HMAC into IKEv2 Encryption Payload
| emitting length of IKEv2 Encryption Payload: 500
| emitting length of ISAKMP Message: 528
| encrypting as RESPONDER, parent SA #1
| data before encryption:
|   27 00 00 22  02 00 00 00  70 61 72 6b  65 72 30 31
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67 21 00  01 1a 01 00  00 00 02 b6  0a 2a dd 8a
|   52 65 2d be  fa 47 b1 9d  85 9f 93 78  5a 1a d1 9c
|   75 6f de d5  78 3f c7 15  33 c5 e1 9e  09 7a 2f 30
|   a2 df ea c0  9d 01 a6 14  19 c5 39 63  43 57 63 52
|   de ba ba f7  8d 2d 02 56  54 53 d3 80  b6 40 f0 cf
|   54 3e 60 ec  96 d1 eb 27  18 90 25 b8  73 00 75 ce
|   9a d2 96 68  b1 b6 64 0e  c4 ec b3 37  72 4e 26 03
|   03 77 af 6f  33 c8 84 c9  58 ad 2d 4c  3a 22 9f 66
|   9d 38 1c b1  62 a2 9d 97  39 8d 69 f5  41 39 0c 9c
|   ec fe 51 08  3c 53 3e c5  7f 67 02 de  ea 5c a2 71
|   4e cb 9a 17  de ed d4 56  43 c5 b7 60  7a 7a 72 97
|   be 32 ad 6c  63 11 40 1d  95 bb 9c b1  45 88 3d 81
|   f2 82 bd 5f  e5 c2 40 27  f3 2f 18 62  b9 4b 27 01
|   1d 1b d5 0a  53 90 03 08  ed bf d7 03  71 0f 69 f6
|   0b 93 13 21  6f 25 fd e5  7a b8 dc 39  e9 b7 45 04
|   0b 69 95 0c  0f c0 da c7  c2 4a 00 4a  80 45 ca 1b
|   44 c8 a6 75  f5 35 2f 9e  3b d3 90 1c  6c 7a a2 80
|   83 2f 51 4d  1a a7 87 c9  ef 1f b0 8b  2c 00 00 2c
|   00 00 00 28  01 03 04 03  12 34 56 78  03 00 00 0c
|   01 00 00 0c  80 0e 00 80  03 00 00 08  03 00 00 0c
|   00 00 00 08  05 00 00 00  2d 00 00 30  01 00 00 00
|   08 00 00 28  00 00 ff ff  fd 68 c9 f9  41 57 00 02
|   00 00 00 01  00 00 00 00  fd 68 c9 f9  41 57 00 02
|   00 00 00 01  ff ff ff ff  00 00 00 30  01 00 00 00
|   08 00 00 28  00 00 ff ff  fd 68 c9 f9  41 57 00 00
|   00 00 00 00  00 00 00 00  fd 68 c9 f9  41 57 00 00
|   ff ff ff ff  ff ff ff ff  00 01 02 03  04 05 06 07
| data after encryption:
|   7c e4 85 e3  bc 16 3d bf  3d d0 a4 14  22 cf 88 39
|   2e 1b b8 11  01 52 4b d1  60 ee cd ec  d9 96 86 9d
|   d2 76 4b ba  84 e0 5b 32  2e 35 e4 56  85 59 07 cc
|   07 b8 60 26  68 e0 c0 37  3f 51 93 cf  30 e0 1a a1
|   a7 a4 17 0a  af fd 51 a5  eb b9 93 1f  f0 fb 7d fc
|   a9 5c 57 0c  f1 ed c0 19  1d 3a 24 9e  0e 8c b7 62
|   e7 de fd 3f  3f ad a2 39  8d d2 ae 03  bb f2 17 d5
|   84 9b 8e 82  a9 af d9 3b  8c af cf 37  ca 9e 9f 74
|   e2 eb c2 f7  c3 7f 26 ec  37 d2 c2 ef  68 69 8e 10
|   93 fc 11 f5  49 89 35 34  26 62 5b c5  fe ca f9 00
|   63 af 40 52  b8 bc 41 9f  fa 47 4c c6  7c e6 f6 f9
|   d5 53 32 06  bd 66 f9 37  b4 c0 26 15  f2 f8 db 8c
|   01 a2 3a 4a  8e 91 3d 8d  83 a9 de a5  ec 8a 46 2c
|   bf 36 e5 a6  1c 6a 1b a6  a0 04 d0 b5  97 0f 22 21
|   36 60 f4 50  29 77 56 3a  da f1 c0 81  71 be ba 03
|   75 ef 4c e4  cc 54 74 05  c5 cd 3c 66  72 bf 3c 99
|   fb 4d 8d 2e  2f 96 6a c6  9a 7c b7 62  69 ca 62 4c
|   08 68 e0 6c  61 f0 47 99  3c d3 c6 2c  3e ba 24 16
|   0c 56 cf fb  0a 1f 7d 1d  7e c9 81 b9  de 5c 42 b6
|   b9 1b 88 76  43 55 16 84  ec 19 c1 a4  96 1a 7b d0
|   f1 29 a4 32  e1 4a 04 97  0b 10 b0 4c  59 4f b9 a6
|   bf ae 03 d9  d8 06 6b f6  62 c1 73 39  51 4e ff 34
|   03 b0 40 94  a2 de 4b aa  06 6b 47 86  0e 11 25 22
|   be f3 79 f6  82 54 2c fb  34 0d 01 53  23 27 be ea
|   e2 40 34 0f  ca 64 cf 75  68 f7 d0 c9  f5 90 89 4a
|   fc 0f df 77  dc 66 8b 9b  6b 5b d2 65  f6 89 b9 f9
|   c9 13 b3 78  b0 cc 27 65  72 63 ed 0f  81 76 89 17
|   99 56 12 66  38 e6 b6 02  d8 77 31 86  43 73 63 6d
|   de ef 24 00  e3 28 1e 17  98 4a a1 94  2a e5 1e 8e
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 02 10  24 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   7c e4 85 e3  bc 16 3d bf  3d d0 a4 14  22 cf 88 39
|   2e 1b b8 11  01 52 4b d1  60 ee cd ec  d9 96 86 9d
|   d2 76 4b ba  84 e0 5b 32  2e 35 e4 56  85 59 07 cc
|   07 b8 60 26  68 e0 c0 37  3f 51 93 cf  30 e0 1a a1
|   a7 a4 17 0a  af fd 51 a5  eb b9 93 1f  f0 fb 7d fc
|   a9 5c 57 0c  f1 ed c0 19  1d 3a 24 9e  0e 8c b7 62
|   e7 de fd 3f  3f ad a2 39  8d d2 ae 03  bb f2 17 d5
|   84 9b 8e 82  a9 af d9 3b  8c af cf 37  ca 9e 9f 74
|   e2 eb c2 f7  c3 7f 26 ec  37 d2 c2 ef  68 69 8e 10
|   93 fc 11 f5  49 89 35 34  26 62 5b c5  fe ca f9 00
|   63 af 40 52  b8 bc 41 9f  fa 47 4c c6  7c e6 f6 f9
|   d5 53 32 06  bd 66 f9 37  b4 c0 26 15  f2 f8 db 8c
|   01 a2 3a 4a  8e 91 3d 8d  83 a9 de a5  ec 8a 46 2c
|   bf 36 e5 a6  1c 6a 1b a6  a0 04 d0 b5  97 0f 22 21
|   36 60 f4 50  29 77 56 3a  da f1 c0 81  71 be ba 03
|   75 ef 4c e4  cc 54 74 05  c5 cd 3c 66  72 bf 3c 99
|   fb 4d 8d 2e  2f 96 6a c6  9a 7c b7 62  69 ca 62 4c
|   08 68 e0 6c  61 f0 47 99  3c d3 c6 2c  3e ba 24 16
|   0c 56 cf fb  0a 1f 7d 1d  7e c9 81 b9  de 5c 42 b6
|   b9 1b 88 76  43 55 16 84  ec 19 c1 a4  96 1a 7b d0
|   f1 29 a4 32  e1 4a 04 97  0b 10 b0 4c  59 4f b9 a6
|   bf ae 03 d9  d8 06 6b f6  62 c1 73 39  51 4e ff 34
|   03 b0 40 94  a2 de 4b aa  06 6b 47 86  0e 11 25 22
|   be f3 79 f6  82 54 2c fb  34 0d 01 53  23 27 be ea
|   e2 40 34 0f  ca 64 cf 75  68 f7 d0 c9  f5 90 89 4a
|   fc 0f df 77  dc 66 8b 9b  6b 5b d2 65  f6 89 b9 f9
|   c9 13 b3 78  b0 cc 27 65  72 63 ed 0f  81 76 89 17
|   99 56 12 66  38 e6 b6 02  d8 77 31 86  43 73 63 6d
|   de ef 24 00  e3 28 1e 17  98 4a a1 94  2a e5 1e 8e
| out calculated auth:
|   d9 82 b8 26  30 75 e9 52  95 3a fa 70  78 81 b7 4b
| #2 complete v2 state transition with STF_OK
./xf12-parentR2 transition from state STATE_PARENT_R1 to state STATE_PARENT_R2
| v2_state_transition: st is #2; pst is #1; transition_st is #1
./xf12-parentR2 STATE_PARENT_R2: received v2I2, PARENT SA established {auth=IKEv2 oursig=AQOg5H7A4 theirsig=AQN7wUerV cipher=aes_128 integ=sha256_128 prf=prf-hmac-sha2-256 group=modp2048} (msgid: 00000001/00000001)
./xf12-parentR2 negotiated tunnel [fd68:c9f9:4157::,fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto:0 port:0-65535] -> [fd68:c9f9:4157:2:0:1::,fd68:c9f9:4157:2:0:1:ffff:ffff proto:0 port:0-65535]
./xf12-parentR2 STATE_CHILD_C1_KEYED: CHILD SA established tunnel mode {ESP=>0x12345678 <0x12345678 xfrm=aes_cbc_128-hmac_sha2_256_128 NATOA=none NATD=none DPD=none}
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 528 bytes for STATE_PARENT_R1 through eth0:500 [93.184.216.34:55044] to 192.168.1.1:500 (using #2)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 02 10  24 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   7c e4 85 e3  bc 16 3d bf  3d d0 a4 14  22 cf 88 39
|   2e 1b b8 11  01 52 4b d1  60 ee cd ec  d9 96 86 9d
|   d2 76 4b ba  84 e0 5b 32  2e 35 e4 56  85 59 07 cc
|   07 b8 60 26  68 e0 c0 37  3f 51 93 cf  30 e0 1a a1
|   a7 a4 17 0a  af fd 51 a5  eb b9 93 1f  f0 fb 7d fc
|   a9 5c 57 0c  f1 ed c0 19  1d 3a 24 9e  0e 8c b7 62
|   e7 de fd 3f  3f ad a2 39  8d d2 ae 03  bb f2 17 d5
|   84 9b 8e 82  a9 af d9 3b  8c af cf 37  ca 9e 9f 74
|   e2 eb c2 f7  c3 7f 26 ec  37 d2 c2 ef  68 69 8e 10
|   93 fc 11 f5  49 89 35 34  26 62 5b c5  fe ca f9 00
|   63 af 40 52  b8 bc 41 9f  fa 47 4c c6  7c e6 f6 f9
|   d5 53 32 06  bd 66 f9 37  b4 c0 26 15  f2 f8 db 8c
|   01 a2 3a 4a  8e 91 3d 8d  83 a9 de a5  ec 8a 46 2c
|   bf 36 e5 a6  1c 6a 1b a6  a0 04 d0 b5  97 0f 22 21
|   36 60 f4 50  29 77 56 3a  da f1 c0 81  71 be ba 03
|   75 ef 4c e4  cc 54 74 05  c5 cd 3c 66  72 bf 3c 99
|   fb 4d 8d 2e  2f 96 6a c6  9a 7c b7 62  69 ca 62 4c
|   08 68 e0 6c  61 f0 47 99  3c d3 c6 2c  3e ba 24 16
|   0c 56 cf fb  0a 1f 7d 1d  7e c9 81 b9  de 5c 42 b6
|   b9 1b 88 76  43 55 16 84  ec 19 c1 a4  96 1a 7b d0
|   f1 29 a4 32  e1 4a 04 97  0b 10 b0 4c  59 4f b9 a6
|   bf ae 03 d9  d8 06 6b f6  62 c1 73 39  51 4e ff 34
|   03 b0 40 94  a2 de 4b aa  06 6b 47 86  0e 11 25 22
|   be f3 79 f6  82 54 2c fb  34 0d 01 53  23 27 be ea
|   e2 40 34 0f  ca 64 cf 75  68 f7 d0 c9  f5 90 89 4a
|   fc 0f df 77  dc 66 8b 9b  6b 5b d2 65  f6 89 b9 f9
|   c9 13 b3 78  b0 cc 27 65  72 63 ed 0f  81 76 89 17
|   99 56 12 66  38 e6 b6 02  d8 77 31 86  43 73 63 6d
|   de ef 24 00  e3 28 1e 17  98 4a a1 94  2a e5 1e 8e
|   d9 82 b8 26  30 75 e9 52  95 3a fa 70  78 81 b7 4b
| releasing whack for #X (sock=Y)
| releasing whack for #X (sock=Y)
| freeing state object #1
./xf12-parentR2 leak: reply packet, item size: X
./xf12-parentR2 leak: skeyseed_t1, item size: X
./xf12-parentR2 leak: responder keys, item size: X
./xf12-parentR2 leak: initiator keys, item size: X
./xf12-parentR2 leak: alg_info_esp, item size: X
./xf12-parentR2 leak: db_context->attrs, item size: X
./xf12-parentR2 leak: db_context->trans, item size: X
./xf12-parentR2 leak: db_context->conj, item size: X
./xf12-parentR2 leak: db_context, item size: X
./xf12-parentR2 leak: v2 policy database, item size: X
./xf12-parentR2 leak: st_nr in duplicate_state, item size: X
./xf12-parentR2 leak: st_ni in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_pr in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_pi in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_er in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_ei in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_ar in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_ai in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_d in duplicate_state, item size: X
./xf12-parentR2 leak: st_skeyseed in duplicate_state, item size: X
./xf12-parentR2 leak: st_enc_key in duplicate_state, item size: X
./xf12-parentR2 leak: struct state in new_state(), item size: X
./xf12-parentR2 leak: ikev2_inI2outR2 KE, item size: X
./xf12-parentR2 leak: alg_info_ike, item size: X
./xf12-parentR2 leak: ikev2_inI1outR1 KE, item size: X
./xf12-parentR2 leak: msg_digest, item size: X
./xf12-parentR2 leak: 2 * keep id name, item size: X
./xf12-parentR2 leak: ID host_pair, item size: X
./xf12-parentR2 leak: host_pair, item size: X
./xf12-parentR2 leak: host ip, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: host ip, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: connection name, item size: X
./xf12-parentR2 leak: struct connection, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: pubkey entry, item size: X
./xf12-parentR2 leak: rfc3110 format of public key, item size: X
./xf12-parentR2 leak: pubkey, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: pubkey entry, item size: X
./xf12-parentR2 leak: rfc3110 format of public key, item size: X
./xf12-parentR2 leak: pubkey, item size: X
./xf12-parentR2 leak: 2 * id list, item size: X
./xf12-parentR2 leak: rfc3110 format of public key [created], item size: X
./xf12-parentR2 leak: pubkey, item size: X
./xf12-parentR2 leak: secret, item size: X
./xf12-parentR2 leak: 4 * hasher name, item size: X
./xf12-parentR2 leak: 10 * group description, item size: X
./xf12-parentR2 leak detective found Z leaks, total size X
