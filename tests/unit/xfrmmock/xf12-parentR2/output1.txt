./xf12-parentR2 ike_alg_register_enc(): Activating OAKLEY_AES_CBC: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_512: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-sha2-512: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_256: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-sha2-256: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_SHA1: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-sha1: Ok (ret=0)
./xf12-parentR2 ike_alg_register_prf(): Activating prf-hmac-md5: Ok (ret=0)
./xf12-parentR2 ike_alg_register_hash(): Activating OAKLEY_MD5: Ok (ret=0)
./xf12-parentR2 loading secrets from "../../libpluto/samples/jj.secrets"
./xf12-parentR2 loaded private key for keyid: PPK_RSA:AQOg5H7A4/2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
./xf12-parentR2 registed kernel encr algorithm aes_cbc [12, 128<=key<=512]
./xf12-parentR2 registed kernel encr algorithm 3des [3, 192<=key<=192]
./xf12-parentR2 registed kernel integ algorithm hmac_sha1_96 [2, 160<=key<=160]
./xf12-parentR2 registed kernel integ algorithm hmac_md5_96 [1, 128<=key<=128]
./xf12-parentR2 registed kernel integ algorithm hmac_sha2_256_128 [12, 256<=key<=256]
./xf12-parentR2 registed kernel integ algorithm hmac_sha2_512_256 [14, 256<=key<=256]
| processing whack message of size: A
| processing whack message of size: A
processing whack msg time: X size: Y
./xf12-parentR2 loaded key: 2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
| processing whack message of size: A
processing whack msg time: X size: Y
./xf12-parentR2 loaded key: 66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9
| processing whack message of size: A
processing whack msg time: X size: Y
| Added new connection parker1--jj2 with policy RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
./xf12-parentR2 use keyid: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 / 2:<>
| counting wild cards for @jamesjohnson.emmjay.credil.org is 0
./xf12-parentR2 use keyid: 1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 / 2:<>
| counting wild cards for @parker01.emmjay.credil.org is 0
| orient parker1--jj2 reference sr#1 this: addr:132.213.238.7 that: addr:192.168.1.1
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 exact-match
| find_host_pair: concluded with <none>
| connect_to_host_pair: 132.213.238.7:500 %address 192.168.1.1:500 -> hp:none
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (exact)
|   concluded with <none>
./xf12-parentR2 adding connection: "parker1--jj2"
| fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96
| ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
RC=0 "parker1--jj2": fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96; unrouted; eroute owner: #0
RC=0 "parker1--jj2":     myip=unset; hisip=unset;
RC=0 "parker1--jj2":   keys: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 2:none...
RC=0 "parker1--jj2":        ....1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 2:none
RC=0 "parker1--jj2":   ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0
RC=0 "parker1--jj2":   policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK; prio: 64,96; interface: eth0; kind=CK_PERMANENT
| installing kernel algorithm none (0)
| installing kernel algorithm hmac_md5_96 (1)
| installing kernel algorithm hmac_sha1_96 (2)
| installing kernel algorithm hmac_sha2_256_128 (12)
| installing kernel algorithm 252?? (252)
| installing kernel algorithm hmac_sha2_384_192 (13)
| installing kernel algorithm hmac_sha2_512_256 (14)
| installing kernel algorithm null (11)
| installing kernel algorithm 3des (3)
| installing kernel algorithm aes_cbc (12)
0: input from parentI1.pcap
|   =========== input from pcap file parentI1.pcap ========
skipping: eth0:4500 float outside: 55045 <=> d: 500
picking: eth0:500  outside: 55044 <=> d: 500
| *received 628 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 74  22 00 00 f4
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0e  02 00 00 28  02 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0e
|   02 00 00 28  03 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 05  02 00 00 28  04 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 28  05 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0f  00 00 00 28  06 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0f
|   28 00 01 08  00 0e 00 00  3d a6 6a 81  e2 92 09 be
|   18 4f a0 1e  5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53
|   5d 17 6a be  1b c5 70 ab  34 47 bc 09  14 7c aa 91
|   9c 8f 81 dc  1e f9 87 cd  6a ec fa f3  a5 9e 37 bc
|   ac 3d fd e1  32 8e e8 b3  fe d3 8b f4  7b 50 34 13
|   33 7a 93 ea  e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2
|   55 ce 45 22  9f c7 c9 48  43 a3 e2 64  b5 5d 43 38
|   c8 fe f1 d3  06 43 f0 0a  e8 6d 61 8c  60 78 d9 98
|   d3 1b 3b 5e  f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62
|   b2 3e 0b 17  af 6c b8 31  08 d7 19 5a  7b c4 54 c2
|   13 47 98 c2  cc d2 16 29  75 6c 03 fb  1e 9c 9d 21
|   0c a1 e6 c2  f3 f2 49 2c  f6 06 73 c1  96 1e ce 58
|   81 01 1c cb  16 dc f9 fc  c7 93 08 75  58 16 57 71
|   69 96 66 b7  a9 81 7f f7  37 4d 7c 41  38 62 a6 39
|   00 81 ca 3d  1d fc f7 b5  08 38 d4 34  70 22 6c 21
|   d2 5b 20 a1  d2 ba 2a d1  89 f3 20 79  ce ac 1e c2
|   ec 7d ae 76  94 40 39 a0  29 00 00 14  20 98 9d 37
|   a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3  29 00 00 1c
|   00 00 40 04  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b
|   b0 95 3c 48  70 73 62 f1  2b 00 00 1c  00 00 40 05
|   cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2  00 00 00 10  4f 45 70 6c  75 74 6f 75
|   6e 69 74 30
|  processing version=2.0 packet with exchange type=ISAKMP_v2_SA_INIT (34), msgid: 00000000
| I am IKE SA Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| considering state entry: 0
|   reject:state needed and state unavailable
| considering state entry: 1
|   reject:state needed and state unavailable
| considering state entry: 2
|   reject:state needed and state unavailable
| considering state entry: 3
| now proceed with state specific processing using state #3 responder-V2_init
| find_host_connection2 called from ikev2parent_inI1outR1, me=132.213.238.7:500 him=192.168.1.1:500 policy=IKEv2ALLOW/-
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 any-match
| find_host_pair: comparing to me=132.213.238.7:500 %address him=192.168.1.1:500
| find_host_pair: concluded with parker1--jj2
| found_host_pair_conn (find_host_connection2): 132.213.238.7:500 %address/192.168.1.1:500 -> hp:parker1--jj2
| searching for connection with policy = IKEv2ALLOW/-
| found policy = RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK (parker1--jj2)
| find_host_connection2 returns parker1--jj2 (ike=none/none)
./xf12-parentR2 tentatively considering connection: parker1--jj2
| creating state object #1 at Z
| orient parker1--jj2 reference sr#1 this: addr:132.213.238.7 that: addr:192.168.1.1
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #1 bucket: 28
| inserting event EVENT_SO_DISCARD, timeout in 0 seconds for #1
| will not send/process a dcookie
| received a notify..
| processor 'responder-V2_init' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI1outR1: calculated ke+nonce, sending R1
| nat chunk  80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   c0 a8 01 01  01 f4
| processing v2N_NAT_DETECTION_SOURCE_IP
| received nat-t hash  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b  b0 95 3c 48
|   70 73 62 f1
| calculated nat-t  h  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b  b0 95 3c 48
|   70 73 62 f1
| nat-t payloads for v2N_NAT_DETECTION_SOURCE_IP match: no NAT
| nat chunk  80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   84 d5 ee 07  01 f4
| processing v2N_NAT_DETECTION_DESTINATION_IP
| received nat-t hash  cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2
| calculated nat-t  h  cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2
| nat-t payloads for v2N_NAT_DETECTION_DESTINATION_IP match: no NAT
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_SA_INIT
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 00
| ***emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_ike_add() ealg=12 aalg=12 prfalg_id=5 modp_id=14, cnt=1
| __alg_info_ike_add() ealg=18 aalg=12 prfalg_id=5 modp_id=14, cnt=2
| __alg_info_ike_add() ealg=12 aalg=2 prfalg_id=5 modp_id=14, cnt=3
| __alg_info_ike_add() ealg=18 aalg=2 prfalg_id=5 modp_id=14, cnt=4
| __alg_info_ike_add() ealg=12 aalg=12 prfalg_id=5 modp_id=5, cnt=5
| __alg_info_ike_add() ealg=18 aalg=12 prfalg_id=5 modp_id=5, cnt=6
| __alg_info_ike_add() ealg=12 aalg=2 prfalg_id=5 modp_id=5, cnt=7
| __alg_info_ike_add() ealg=18 aalg=2 prfalg_id=5 modp_id=5, cnt=8
| __alg_info_ike_add() ealg=12 aalg=12 prfalg_id=5 modp_id=15, cnt=9
| __alg_info_ike_add() ealg=18 aalg=12 prfalg_id=5 modp_id=15, cnt=10
| __alg_info_ike_add() ealg=12 aalg=2 prfalg_id=5 modp_id=15, cnt=11
| __alg_info_ike_add() ealg=18 aalg=2 prfalg_id=5 modp_id=15, cnt=12
| not including aes_gcm_8(18)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP2048(14 in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| not including aes_gcm_8(18)-hmac_sha1_96(2)-prfsha2_256(5)-MODP2048(14) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| not including aes_gcm_8(18)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP1536(5) in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| not including aes_gcm_8(18)-hmac_sha1_96(2)-prfsha2_256(5)-MODP1536(5) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| not including aes_gcm_8(18)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP3072(15 in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| not including aes_gcm_8(18)-hmac_sha1_96(2)-prfsha2_256(5)-MODP3072(15) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 1
|    transform ID: 12
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 2
|    transform ID: 5
| collect encr: 12<=1 integ: 0<=0 prf: 5<=1 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 3
|    transform ID: 12
| collect encr: 12<=1 integ: 12<=1 prf: 5<=1 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 4
|    transform ID: 14
| collect encr: 12<=1 integ: 12<=1 prf: 5<=1 dh: 14<=1
| encr: 0<=1 integ: 0<=1 prf: 0<=1 dh: 0<=1
| selected proposal 1 encr=aes_cbc[-1] integ=hmac_sha2_256_128 prf=prf-hmac-sha2-256 modp=OAKLEY_GROUP_MODP2048
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 2
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| ****emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ******emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 2
|    transform ID: 5
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 4
|    transform ID: 14
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 44
| emitting length of IKEv2 Security Association Payload: 48
| DH public value received:
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|    next-payload: ISAKMP_NEXT_v2KE [@28=0x22]
| ***emit IKEv2 Key Exchange Payload:
|    critical bit: none
|    transform type: 14
| emitting 256 raw bytes of ikev2 g^x into IKEv2 Key Exchange Payload
| ikev2 g^x  3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
| emitting length of IKEv2 Key Exchange Payload: 264
|    next-payload: ISAKMP_NEXT_v2Ni [@76=0x28]
| ***emit IKEv2 Nonce Payload:
|    critical bit: none
| emitting 16 raw bytes of IKEv2 nonce into IKEv2 Nonce Payload
| IKEv2 nonce  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| emitting length of IKEv2 Nonce Payload: 20
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   84 d5 ee 07  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@340=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe
| emitting length of IKEv2 Notify Payload: 28
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   c0 a8 01 01  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@360=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  81 b5 74 15  c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab
|   25 31 bf 62
| emitting length of IKEv2 Notify Payload: 28
|    next-payload: ISAKMP_NEXT_v2V [@388=0x2b]
| ***emit ISAKMP Vendor ID Payload:
| emitting 12 raw bytes of Vendor ID into ISAKMP Vendor ID Payload
| Vendor ID  4f 45 70 6c  75 74 6f 75  6e 69 74 30
| emitting length of ISAKMP Vendor ID Payload: 16
| emitting length of ISAKMP Message: 432
| inserting event EVENT_SO_DISCARD, timeout in 300 seconds for #1
| #1 complete v2 state transition with STF_OK
./xf12-parentR2 transition from state STATE_IKEv2_START to state STATE_PARENT_R1
| v2_state_transition: st is #1; pst is #0; transition_st is #1
./xf12-parentR2 STATE_PARENT_R1: received v2I1, sent v2R1 (msgid: 00000000/00000000)
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 432 bytes for STATE_IKEv2_START through eth0:500 [93.184.216.34:55044] to 192.168.1.1:500 (using #1)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 01 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 0c  03 00 00 08
|   02 00 00 05  00 00 00 08  04 00 00 0e  28 00 01 08
|   00 0e 00 00  3d a6 6a 81  e2 92 09 be  18 4f a0 1e
|   5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53  5d 17 6a be
|   1b c5 70 ab  34 47 bc 09  14 7c aa 91  9c 8f 81 dc
|   1e f9 87 cd  6a ec fa f3  a5 9e 37 bc  ac 3d fd e1
|   32 8e e8 b3  fe d3 8b f4  7b 50 34 13  33 7a 93 ea
|   e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2  55 ce 45 22
|   9f c7 c9 48  43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3
|   06 43 f0 0a  e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e
|   f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17
|   af 6c b8 31  08 d7 19 5a  7b c4 54 c2  13 47 98 c2
|   cc d2 16 29  75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2
|   f3 f2 49 2c  f6 06 73 c1  96 1e ce 58  81 01 1c cb
|   16 dc f9 fc  c7 93 08 75  58 16 57 71  69 96 66 b7
|   a9 81 7f f7  37 4d 7c 41  38 62 a6 39  00 81 ca 3d
|   1d fc f7 b5  08 38 d4 34  70 22 6c 21  d2 5b 20 a1
|   d2 ba 2a d1  89 f3 20 79  ce ac 1e c2  ec 7d ae 76
|   94 40 39 a0  29 00 00 14  20 98 9d 37  a8 14 a6 4d
|   8f f0 7c 08  d3 20 e9 e3  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 70 6c  75 74 6f 75  6e 69 74 30
1: output to OUTPUT/xf12-parentR2.pcap
1: input from parentI2.pcap
|   =========== input from pcap file parentI2.pcap ========
skipping: eth0:4500 float outside: 55045 <=> d: 500
picking: eth0:500  outside: 55044 <=> d: 500
| *received 528 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 10  23 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   2e 1e aa 9a  0a cb 62 f8  81 4a 2c 1d  e2 a7 17 78
|   aa 25 4e d7  ae 63 b7 bd  ca ed f2 49  c4 f7 f6 03
|   69 5e 8d 4b  86 e9 48 0b  88 03 d8 24  b6 4e e9 42
|   43 5c 6c 32  79 5e f8 e4  1b ce 99 19  fc b4 48 9b
|   fb 78 af db  a2 69 4f b6  9e 27 4f a5  95 33 a0 11
|   63 9e 5f 13  07 b8 7e 02  9a 2a 1d 78  0b 8e ed 47
|   45 45 ac 50  63 96 aa e9  93 10 fc fd  45 f0 57 80
|   a0 d2 9b 41  7f c8 43 a4  a5 2e 8a 23  29 59 d3 a9
|   23 e7 8a 27  c4 10 6e 86  e9 06 cf aa  c2 72 03 09
|   44 7a c8 5c  83 4f f1 79  40 ee f4 b1  9c e6 5a 50
|   5b fe fe 11  d7 2a a0 97  7b 6f 46 58  af 68 f7 f9
|   55 1b 0d 1c  96 3f f0 46  0f ca 53 14  13 17 d5 45
|   39 c5 83 3c  5e c5 80 87  59 7c e1 c7  57 25 46 95
|   4d 35 bd 06  c7 be b4 3f  d6 3d ba 56  a5 ff b9 7b
|   4a 42 fc 24  74 34 3b f6  69 91 1a a7  f3 78 fd 95
|   16 f3 b1 6f  53 50 dd 13  ce 4c 05 0c  19 3a 82 4b
|   ce f6 c5 de  0f a8 ad a0  1c 1a d7 4f  07 21 31 b1
|   1f 65 70 b6  f9 e8 c3 37  c1 41 0f 6f  5c ff 4c 45
|   e4 0f 86 86  42 68 3e f5  5c 06 fa 46  95 2f 17 6e
|   5e 0e 50 14  48 bb a2 61  a0 ba 47 a2  3c c7 93 6b
|   19 07 3c 72  39 ae 5d 1f  9c 8d 9b f2  37 b6 a4 51
|   5c 34 a7 6f  d7 76 5b 26  80 01 f9 42  04 25 eb a9
|   d1 45 c6 46  5c 5d 43 f3  81 e6 39 67  21 5d 58 ad
|   cc fb 4f 10  22 d3 7c d7  60 08 00 e1  1a 22 4f 46
|   e9 d6 db fb  3f 29 11 9a  a8 09 be 80  dd 18 46 53
|   87 d4 e6 66  00 0c 2d e4  39 b1 0d 62  3f ba 27 39
|   01 87 cb 58  a3 6e 69 0d  33 83 11 db  3d 37 98 2e
|   fa ae bc 43  46 25 4b 70  fc 2c fd fa  0d 55 e3 53
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35), msgid: 00000001
| I am IKE SA Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 peer and cookies match on #1
| v2 state object #1 (parker1--jj2) found, in STATE_PARENT_R1
| state found and its state is:STATE_PARENT_R1 msgid: 00001
| considering state entry: 0
|   reject: in state: STATE_PARENT_R1, needs STATE_PARENT_I1
| considering state entry: 1
|   reject: in state: STATE_PARENT_R1, needs STATE_PARENT_I1
| considering state entry: 2
|   reject: in state: STATE_PARENT_R1, needs STATE_CHILD_C0_KEYING
| considering state entry: 3
|   reject:state unneeded and state available
| considering state entry: 4
| now proceed with state specific processing using state #4 responder-auth-process
| ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
| processor 'responder-auth-process' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI2outR2: calculating g^{xy}, sending R2
| ikev2 parent SA details
| ikev2 I 0x8001020304050607 0xdebc583a8f40d0cf sha256:0x4ea8e662b07cdd430f6944c6723e4b822e053c7e128712992e053c7e12871299 aes128:0x3f44bf47cafd8150591deb088199fcbf
| ikev2 R 0x8001020304050607 0xdebc583a8f40d0cf sha256:0x515b0bd22e6d76b34fdb760aa7bfad802e053c7e128712992e053c7e12871299 aes128:0xbedb67ec7dc3d00cccac42e70cd63bde
| decrypting as RESPONDER, using INITIATOR keys
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 10  23 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   2e 1e aa 9a  0a cb 62 f8  81 4a 2c 1d  e2 a7 17 78
|   aa 25 4e d7  ae 63 b7 bd  ca ed f2 49  c4 f7 f6 03
|   69 5e 8d 4b  86 e9 48 0b  88 03 d8 24  b6 4e e9 42
|   43 5c 6c 32  79 5e f8 e4  1b ce 99 19  fc b4 48 9b
|   fb 78 af db  a2 69 4f b6  9e 27 4f a5  95 33 a0 11
|   63 9e 5f 13  07 b8 7e 02  9a 2a 1d 78  0b 8e ed 47
|   45 45 ac 50  63 96 aa e9  93 10 fc fd  45 f0 57 80
|   a0 d2 9b 41  7f c8 43 a4  a5 2e 8a 23  29 59 d3 a9
|   23 e7 8a 27  c4 10 6e 86  e9 06 cf aa  c2 72 03 09
|   44 7a c8 5c  83 4f f1 79  40 ee f4 b1  9c e6 5a 50
|   5b fe fe 11  d7 2a a0 97  7b 6f 46 58  af 68 f7 f9
|   55 1b 0d 1c  96 3f f0 46  0f ca 53 14  13 17 d5 45
|   39 c5 83 3c  5e c5 80 87  59 7c e1 c7  57 25 46 95
|   4d 35 bd 06  c7 be b4 3f  d6 3d ba 56  a5 ff b9 7b
|   4a 42 fc 24  74 34 3b f6  69 91 1a a7  f3 78 fd 95
|   16 f3 b1 6f  53 50 dd 13  ce 4c 05 0c  19 3a 82 4b
|   ce f6 c5 de  0f a8 ad a0  1c 1a d7 4f  07 21 31 b1
|   1f 65 70 b6  f9 e8 c3 37  c1 41 0f 6f  5c ff 4c 45
|   e4 0f 86 86  42 68 3e f5  5c 06 fa 46  95 2f 17 6e
|   5e 0e 50 14  48 bb a2 61  a0 ba 47 a2  3c c7 93 6b
|   19 07 3c 72  39 ae 5d 1f  9c 8d 9b f2  37 b6 a4 51
|   5c 34 a7 6f  d7 76 5b 26  80 01 f9 42  04 25 eb a9
|   d1 45 c6 46  5c 5d 43 f3  81 e6 39 67  21 5d 58 ad
|   cc fb 4f 10  22 d3 7c d7  60 08 00 e1  1a 22 4f 46
|   e9 d6 db fb  3f 29 11 9a  a8 09 be 80  dd 18 46 53
|   87 d4 e6 66  00 0c 2d e4  39 b1 0d 62  3f ba 27 39
|   01 87 cb 58  a3 6e 69 0d  33 83 11 db  3d 37 98 2e
| R2 calculated auth:  fa ae bc 43  46 25 4b 70  fc 2c fd fa  0d 55 e3 53
| R2  provided  auth:  fa ae bc 43  46 25 4b 70  fc 2c fd fa  0d 55 e3 53
| authenticator matched, np=35
| data before decryption:
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   2e 1e aa 9a  0a cb 62 f8  81 4a 2c 1d  e2 a7 17 78
|   aa 25 4e d7  ae 63 b7 bd  ca ed f2 49  c4 f7 f6 03
|   69 5e 8d 4b  86 e9 48 0b  88 03 d8 24  b6 4e e9 42
|   43 5c 6c 32  79 5e f8 e4  1b ce 99 19  fc b4 48 9b
|   fb 78 af db  a2 69 4f b6  9e 27 4f a5  95 33 a0 11
|   63 9e 5f 13  07 b8 7e 02  9a 2a 1d 78  0b 8e ed 47
|   45 45 ac 50  63 96 aa e9  93 10 fc fd  45 f0 57 80
|   a0 d2 9b 41  7f c8 43 a4  a5 2e 8a 23  29 59 d3 a9
|   23 e7 8a 27  c4 10 6e 86  e9 06 cf aa  c2 72 03 09
|   44 7a c8 5c  83 4f f1 79  40 ee f4 b1  9c e6 5a 50
|   5b fe fe 11  d7 2a a0 97  7b 6f 46 58  af 68 f7 f9
|   55 1b 0d 1c  96 3f f0 46  0f ca 53 14  13 17 d5 45
|   39 c5 83 3c  5e c5 80 87  59 7c e1 c7  57 25 46 95
|   4d 35 bd 06  c7 be b4 3f  d6 3d ba 56  a5 ff b9 7b
|   4a 42 fc 24  74 34 3b f6  69 91 1a a7  f3 78 fd 95
|   16 f3 b1 6f  53 50 dd 13  ce 4c 05 0c  19 3a 82 4b
|   ce f6 c5 de  0f a8 ad a0  1c 1a d7 4f  07 21 31 b1
|   1f 65 70 b6  f9 e8 c3 37  c1 41 0f 6f  5c ff 4c 45
|   e4 0f 86 86  42 68 3e f5  5c 06 fa 46  95 2f 17 6e
|   5e 0e 50 14  48 bb a2 61  a0 ba 47 a2  3c c7 93 6b
|   19 07 3c 72  39 ae 5d 1f  9c 8d 9b f2  37 b6 a4 51
|   5c 34 a7 6f  d7 76 5b 26  80 01 f9 42  04 25 eb a9
|   d1 45 c6 46  5c 5d 43 f3  81 e6 39 67  21 5d 58 ad
|   cc fb 4f 10  22 d3 7c d7  60 08 00 e1  1a 22 4f 46
|   e9 d6 db fb  3f 29 11 9a  a8 09 be 80  dd 18 46 53
|   87 d4 e6 66  00 0c 2d e4  39 b1 0d 62  3f ba 27 39
|   01 87 cb 58  a3 6e 69 0d  33 83 11 db  3d 37 98 2e
| decrypted payload:  27 00 00 22  02 00 00 00  70 61 72 6b  65 72 30 31
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67 21 00  01 08 01 00  00 00 1c 12  c8 e8 dd c0
|   b7 a9 c6 91  b3 5f 15 b7  37 ee f7 5a  18 3f ab 9b
|   1a 73 bb 01  b5 22 d9 e5  58 08 87 c6  04 4e ba db
|   c6 dc d5 a5  96 24 2d 7d  e3 bb c8 85  04 1f 99 8c
|   a6 7f 2a 11  b9 86 03 16  73 a8 03 26  1f 15 f3 7c
|   92 d1 ad 62  de d0 1d 8e  b1 d8 56 17  81 67 2d 67
|   91 90 45 9c  ae 7b bf f0  a7 41 00 15  82 0f ff 26
|   7b 42 0c 51  df 73 c6 8f  ed fd b2 69  6c 21 c0 97
|   d0 24 df 90  43 11 67 67  25 24 85 e4  4b 14 36 cc
|   e9 df 88 1d  7a cd 2e 17  77 45 82 c9  14 13 b3 95
|   ce 08 7c 53  ab 1c d6 3d  86 66 45 40  bd 32 49 2f
|   49 86 f7 50  05 20 6f 6a  ba 39 90 6a  34 ec 1d 18
|   fd ad 9a bc  ec aa 0e c8  d8 4c 25 db  80 16 11 5f
|   da df 5e 48  e2 7a cd 00  be 03 c1 01  5d 31 b6 e1
|   aa b4 c0 90  c1 19 b5 7a  e4 3f 94 20  9c 39 7a 09
|   1e 6d 19 53  84 ff 4c 73  9d 33 45 36  3b db 2a 39
|   a2 81 1c 4f  91 51 75 00  52 c2 2c 00  00 44 02 00
|   00 20 01 03  04 02 12 34  56 78 03 00  00 08 01 00
|   00 0c 00 00  00 0c 03 00  00 0c 80 0e  00 80 00 00
|   00 20 02 03  04 02 12 34  56 78 03 00  00 08 01 00
|   00 0c 00 00  00 0c 03 00  00 02 80 0e  00 80 2d 00
|   00 30 01 00  00 00 08 00  00 28 00 00  ff ff fd 68
|   c9 f9 41 57  00 02 00 00  00 01 00 00  00 00 fd 68
|   c9 f9 41 57  00 02 00 00  00 01 ff ff  ff ff 00 00
|   00 30 01 00  00 00 08 00  00 28 00 00  ff ff fd 68
|   c9 f9 41 57  00 00 00 00  00 00 00 00  00 00 fd 68
|   c9 f9 41 57  00 00 ff ff  ff ff ff ff  ff ff 00 01
| striping 2 bytes as pad
| **parse IKEv2 Identification Payload:
|    critical bit: none
|    length: 34
|    id_type: ID_FQDN
| processing payload: ISAKMP_NEXT_v2IDi (len=34)
| **parse IKEv2 Authentication Payload:
|    critical bit: none
|    length: 264
|    auth method: v2_AUTH_RSA
| processing payload: ISAKMP_NEXT_v2AUTH (len=264)
| **parse IKEv2 Security Association Payload:
|    critical bit: none
|    length: 68
| processing payload: ISAKMP_NEXT_v2SA (len=68)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSi (len=48)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSr (len=48)
./xf12-parentR2 IKEv2 mode peer ID is ID_FQDN: '@parker01.emmjay.credil.org'
| find_ID_host_pair: looking for me=(none) him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|   concluded with parker1--jj2
| parent SA IDi pi verify
|   cc 07 97 44  b4 a3 4e 8a  0d 2f 27 8b  ee 06 6d 07
|   2e 05 3c 7e  12 87 12 99  2e 05 3c 7e  12 87 12 99
| parent SA I2 idhash verify
|   02 00 00 00  70 61 72 6b  65 72 30 31  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| calculate sighash
| inputs to hash1 (first packet)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 74  22 00 00 f4
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0e  02 00 00 28  02 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0e
|   02 00 00 28  03 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 05  02 00 00 28  04 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 28  05 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0f  00 00 00 28  06 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0f
|   28 00 01 08  00 0e 00 00  3d a6 6a 81  e2 92 09 be
|   18 4f a0 1e  5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53
|   5d 17 6a be  1b c5 70 ab  34 47 bc 09  14 7c aa 91
|   9c 8f 81 dc  1e f9 87 cd  6a ec fa f3  a5 9e 37 bc
|   ac 3d fd e1  32 8e e8 b3  fe d3 8b f4  7b 50 34 13
|   33 7a 93 ea  e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2
|   55 ce 45 22  9f c7 c9 48  43 a3 e2 64  b5 5d 43 38
|   c8 fe f1 d3  06 43 f0 0a  e8 6d 61 8c  60 78 d9 98
|   d3 1b 3b 5e  f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62
|   b2 3e 0b 17  af 6c b8 31  08 d7 19 5a  7b c4 54 c2
|   13 47 98 c2  cc d2 16 29  75 6c 03 fb  1e 9c 9d 21
|   0c a1 e6 c2  f3 f2 49 2c  f6 06 73 c1  96 1e ce 58
|   81 01 1c cb  16 dc f9 fc  c7 93 08 75  58 16 57 71
|   69 96 66 b7  a9 81 7f f7  37 4d 7c 41  38 62 a6 39
|   00 81 ca 3d  1d fc f7 b5  08 38 d4 34  70 22 6c 21
|   d2 5b 20 a1  d2 ba 2a d1  89 f3 20 79  ce ac 1e c2
|   ec 7d ae 76  94 40 39 a0  29 00 00 14  20 98 9d 37
|   a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3  29 00 00 1c
|   00 00 40 04  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b
|   b0 95 3c 48  70 73 62 f1  2b 00 00 1c  00 00 40 05
|   cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2  00 00 00 10  4f 45 70 6c  75 74 6f 75
|   6e 69 74 30
| inputs to hash2 (responder nonce)
|   20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| pidhash len: 32
| idhash  5e b3 b0 23  4a ae f7 20  6a 65 24 eb  73 1f 7c 1a
|   dd 85 9d 42  dd 8f e2 1a  f9 35 f1 43  b4 12 11 ee
| v2rsa calculated octets (sans ASN.1)
|   49 26 de 42  fb 3d 8e a0  17 22 af 95  f1 b5 37 0f
|   24 9f 87 b2
| IKEv2 Authentication Payload
|   21 00 01 08  01 00 00 00
| key issuer CA is '%any'
| verify_sh decrypted SIG1:
|   00 01 ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
|   ff ff ff ff  ff ff ff ff  ff ff ff ff  00 30 21 30
|   09 06 05 2b  0e 03 02 1a  05 00 04 14  49 26 de 42
|   fb 3d 8e a0  17 22 af 95  f1 b5 37 0f  24 9f 87 b2
| pad_len calculated: 218 hash_len: 35
| v2rsa decrypted SIG:
|   49 26 de 42  fb 3d 8e a0  17 22 af 95  f1 b5 37 0f
|   24 9f 87 b2
| v2rsa computed hash:
|   49 26 de 42  fb 3d 8e a0  17 22 af 95  f1 b5 37 0f
|   24 9f 87 b2
| an RSA Sig check passed with *AQN7wUerV [preloaded key]
./xf12-parentR2 PARENT SA now authenticated. Send R2 and considering Child-SA
| inserting event EVENT_SA_REPLACE, timeout in 3600 seconds for #1
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 01
|    next-payload: ISAKMP_NEXT_v2E [@16=0x2e]
| ***emit IKEv2 Encryption Payload:
|    critical bit: none
| emitting 16 zero bytes of iv into IKEv2 Encryption Payload
| IKEv2 thinking whether to send my certificate:
|  my policy has  RSASIG, the policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|  sendcert: CERT_SENDIFASKED and I did not get a certificate request
|  so do not send cert.
| I did not send a certificate because I do not have one.
|    next-payload: ISAKMP_NEXT_v2IDr [@-20=0x24]
| *****emit IKEv2 Identification Payload:
|    critical bit: none
|    id_type: ID_FQDN
| emitting 30 raw bytes of my identity into IKEv2 Identification Payload
| my identity  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| emitting length of IKEv2 Identification Payload: 38
| idhash calc pr  e9 00 11 7e  41 d4 31 62  40 b8 63 22  bf 06 9f bc
|   2e 05 3c 7e  12 87 12 99  2e 05 3c 7e  12 87 12 99
| idhash calc R2  02 00 00 00  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67
| assembled IDr payload -- CERT next
| CHILD SA proposals received
| going to assemble AUTH payload
|    next-payload: ISAKMP_NEXT_v2AUTH [@0=0x27]
| *****emit IKEv2 Authentication Payload:
|    critical bit: none
|    auth method: v2_AUTH_RSA
| started looking for secret for @jamesjohnson.emmjay.credil.org->@parker01.emmjay.credil.org of kind PPK_RSA
| actually looking for secret for @jamesjohnson.emmjay.credil.org->@parker01.emmjay.credil.org of kind PPK_RSA
| line 1: key type PPK_RSA(@jamesjohnson.emmjay.credil.org) to type PPK_RSA
| 1: compared key (none) to @jamesjohnson.emmjay.credil.org / @parker01.emmjay.credil.org -> 2
| 2: compared key (none) to @jamesjohnson.emmjay.credil.org / @parker01.emmjay.credil.org -> 2
| line 1: match=16
| best_match 0>16 line=1
| concluding with best_match=16 lineno=1
| rsa key AQOg5H7A4 found
| calculate sighash
| inputs to hash1 (first packet)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 01 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 0c  03 00 00 08
|   02 00 00 05  00 00 00 08  04 00 00 0e  28 00 01 08
|   00 0e 00 00  3d a6 6a 81  e2 92 09 be  18 4f a0 1e
|   5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53  5d 17 6a be
|   1b c5 70 ab  34 47 bc 09  14 7c aa 91  9c 8f 81 dc
|   1e f9 87 cd  6a ec fa f3  a5 9e 37 bc  ac 3d fd e1
|   32 8e e8 b3  fe d3 8b f4  7b 50 34 13  33 7a 93 ea
|   e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2  55 ce 45 22
|   9f c7 c9 48  43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3
|   06 43 f0 0a  e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e
|   f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17
|   af 6c b8 31  08 d7 19 5a  7b c4 54 c2  13 47 98 c2
|   cc d2 16 29  75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2
|   f3 f2 49 2c  f6 06 73 c1  96 1e ce 58  81 01 1c cb
|   16 dc f9 fc  c7 93 08 75  58 16 57 71  69 96 66 b7
|   a9 81 7f f7  37 4d 7c 41  38 62 a6 39  00 81 ca 3d
|   1d fc f7 b5  08 38 d4 34  70 22 6c 21  d2 5b 20 a1
|   d2 ba 2a d1  89 f3 20 79  ce ac 1e c2  ec 7d ae 76
|   94 40 39 a0  29 00 00 14  20 98 9d 37  a8 14 a6 4d
|   8f f0 7c 08  d3 20 e9 e3  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 70 6c  75 74 6f 75  6e 69 74 30
| inputs to hash2 (initiator nonce)
|   20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| pidhash len: 32
| idhash  a1 dc 6a 30  a9 8b a7 50  c4 03 5c f8  fc 24 19 cb
|   08 6a 96 6b  dd b4 2f c1  f1 ac 92 fc  57 ae 21 24
| v2rsa octets (with ASN1):
|   30 21 30 09  06 05 2b 0e  03 02 1a 05  00 04 14 56
|   e3 ed 4b 7a  33 cf 69 05  97 77 bf 14  26 27 c2 86
|   7f e8 ca
| signing hash with RSA Key *AQOg5H7A4
| emitting 274 raw bytes of rsa signature into IKEv2 Authentication Payload
| rsa signature  98 03 d0 5b  98 38 59 cf  ec 01 bb ff  76 a7 47 e7
|   3c 3d 87 df  37 dc cf ae  80 10 bb 06  8a 18 a3 b8
|   92 35 45 da  e7 09 76 8f  a1 0a f8 a8  0d f6 a7 04
|   d1 92 14 28  b6 bf cd b2  cb 28 05 d5  cd 2f 80 26
|   79 cb 30 4f  1c 68 bc ce  46 e5 a4 53  da 38 08 be
|   6e 40 63 b8  c4 78 fb df  35 4b 5c db  d3 65 8e 93
|   4b 94 98 4b  05 ea 10 ae  0d 14 02 ca  c9 4c 62 7a
|   39 1c e6 f2  1a 1b 4c b5  7f 25 3d f3  b8 b3 06 fe
|   b0 f7 4d 2b  b8 ea 36 1a  51 c3 59 62  8a 63 8a c0
|   f6 a2 e1 37  a5 ef fb 8e  4e 40 ac b7  7b 05 b6 0c
|   76 c8 61 1a  c5 3e 80 3e  1d 72 bd 16  56 8d fd 8f
|   0d bd 0b e1  9a 26 c0 8b  cd 58 7d 95  73 d4 30 71
|   d5 53 d3 3c  ad 46 54 b4  61 aa f1 d7  96 ce 42 e5
|   58 e4 08 14  2b ac 8b 48  60 c2 e1 8e  94 23 d4 21
|   1c 87 d2 b4  73 d5 45 ea  1e 33 45 ad  3b 56 9d 97
|   b7 5f 08 59  5a 12 e7 53  5a 53 ac f8  3d 23 22 58
|   4b cf 03 c3  53 fe 2d c6  81 5a cb 5a  1b ae cb 00
|   81 4a
| emitting length of IKEv2 Authentication Payload: 282
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| ikev2_child_ts_evaluate, evaluating base fit for parker1--jj2 against tsi=1,tsr=1 traffic selectors
|   ikev2_evaluate_connection_fit evaluating our I=parker1--jj2:fd68:c9f9:4157:2:0:1::/96:0/0 R=fd68:c9f9:4157::/64:0/0  to their:
|     tsi[0]=fd68:c9f9:4157:2:0:1::/fd68:c9f9:4157:2:0:1:ffff:ffff proto=0 portrange 0-65535
|     tsr[0]=fd68:c9f9:4157::/fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto=0 portrange 0-65535
| ei->port 0  tsi[tsi_ni].startport 0  tsi[tsi_ni].endport 65535
|       has ts_range1=32 maskbits1=96 ts_range2=64 maskbits2=64 fitbits=32896 <> -1
| bfit_n=ikev2_evaluate_connection_fit found better fit c parker1--jj2
|     evaluate_connection_port_fit tsi_n[1], best=-1
|    tsi[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0], range_i=65536 best=-1
|    tsr[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0] tsr_n[0], range=65536/65536 best=-1
|     best ports fit so far: tsi[0] fitrange_i 65536, tsr[0] fitrange_r 65536, matchiness 131072
|     port_fitness 131072
| ikev2_evaluate_connection_port_fit found better fit c parker1--jj2, tsi[0],tsr[0]
| ikev2_evaluate_connection_fit, concluded with parker1--jj2
| duplicating state object #1
| creating state object #2 at Z
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #2 bucket: 28
| inserting event EVENT_SO_DISCARD, timeout in 0 seconds for #2
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157::
|   ip high: fd68:c9f9:4157:0:ffff:ffff:ffff:ffff
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157:2:0:1::
|   ip high: fd68:c9f9:4157:2:0:1:ffff:ffff
|    next-payload: ISAKMP_NEXT_v2SA [@38=0x21]
| *****emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_esp_add() ealg=12 aalg=12 cnt=1
| __alg_info_esp_add() ealg=12 aalg=2 cnt=2
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 32
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 2
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 1
|    transform ID: 12
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| ****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 3
|    transform ID: 12
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| collect encr: 12<=1 integ: 12<=1 prf: 0<=0 dh: 0<=0
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 32
|    prop #: 2
|    proto ID: 3
|    spi size: 4
|    # transforms: 2
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ******emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| emitting 4 raw bytes of our spi into IKEv2 Proposal Substructure Payload
| our spi  12 34 56 78
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ********emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 5
|    transform ID: 0
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 40
| emitting length of IKEv2 Security Association Payload: 44
|    next-payload: ISAKMP_NEXT_v2TSi [@320=0x2c]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
|    next-payload: ISAKMP_NEXT_v2TSr [@364=0x2d]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
| ikev2_derive_child_keys: using prf-hmac-sha2-256 for prf+ (SA #2 cloned from #1)
| childsacalc.ni  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| childsacalc.nr  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| ikev2_derive_child_keys: my role is RESPONDER
| prf+[1]:  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
|   78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
| prf+[2]:  fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
|   36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
| prf+[3]:  9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
| our  keymat  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
|   78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
|   fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
| peer keymat  36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
|   9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
| state #2: install_ipsec_sa() for inbound and outbound
| route owner of "parker1--jj2" unrouted: NULL; eroute owner: NULL
| could_route called for parker1--jj2 (kind=CK_PERMANENT)
| ESP enckey:  36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
| ESP authkey:  9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
writing netlink for esp.12345678@192.168.1.1
0000: b4 01 00 00  10 00 05 00  00 00 00 00  00 00 00 00
0040: 00 00 00 00  00 00 00 00  c0 a8 01 01  00 00 00 00
0050: 00 00 00 00  00 00 00 00  12 34 56 78  32 00 00 00
0060: 84 d5 ee 07  00 00 00 00  00 00 00 00  00 00 00 00
0070: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0080: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
00e0: 01 40 00 00  02 00 01 20  20 00 00 00  00 00 00 00
00f0: 6c 00 14 00  73 68 61 32  35 36 00 00  00 00 00 00
0130: 00 00 00 00  00 01 00 00  80 00 00 00  9d e0 a0 3a
0140: b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70  ef 67 05 70
0150: 8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13  58 00 02 00
0160: 61 65 73 00  35 36 00 00  00 00 00 00  00 00 00 00
01a0: 80 00 00 00  36 99 5c dd  82 37 91 bd  af 84 94 1e
01b0: fd 34 cd 52
| ESP enckey:  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
| ESP authkey:  78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
|   fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
writing netlink for esp.12345678@132.213.238.7
0000: b4 01 00 00  1a 00 05 00  00 00 00 00  00 00 00 00
0040: 00 00 00 00  00 00 00 00  84 d5 ee 07  00 00 00 00
0050: 00 00 00 00  00 00 00 00  12 34 56 78  32 00 00 00
0060: c0 a8 01 01  00 00 00 00  00 00 00 00  00 00 00 00
0070: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0080: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
00e0: 01 40 00 00  02 00 01 20  20 00 00 00  00 00 00 00
00f0: 6c 00 14 00  73 68 61 32  35 36 00 00  00 00 00 00
0130: 00 00 00 00  00 01 00 00  80 00 00 00  78 9d 67 25
0140: ba a5 bf 18  27 62 68 08  85 2d 47 12  fe 7f a4 85
0150: 4c 77 99 8e  bd 38 73 a0  58 50 d5 9d  58 00 02 00
0160: 61 65 73 00  35 36 00 00  00 00 00 00  00 00 00 00
01a0: 80 00 00 00  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c
01b0: 38 9d 1a 41
writing netlink policy for tun.10000@132.213.238.7
0000: fc 00 00 00  19 00 05 00  00 00 00 00  00 00 00 00
0010: fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
0020: fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
0030: 00 00 00 00  00 00 00 00  0a 00 40 60  00 00 00 00
0040: 00 00 00 00  00 00 00 00  ff ff ff ff  ff ff ff ff
0050: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0060: ff ff ff ff  ff ff ff ff  00 00 00 00  00 00 00 00
00a0: 00 00 00 00  00 00 00 00  a0 64 00 00  00 00 00 00
00b0: 00 00 00 00  00 00 00 00  44 00 05 00  84 d5 ee 07
00d0: 32 00 00 00  02 00 00 00  c0 a8 01 01  00 00 00 00
00e0: 00 00 00 00  00 00 00 00  01 40 00 00  01 00 00 00
00f0: ff ff ff ff  ff ff ff ff  ff ff ff ff
writing netlink policy for tun.10000@132.213.238.7
0000: fc 00 00 00  19 00 05 00  00 00 00 00  00 00 00 00
0010: fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
0020: fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
0030: 00 00 00 00  00 00 00 00  0a 00 40 60  00 00 00 00
0040: 00 00 00 00  00 00 00 00  ff ff ff ff  ff ff ff ff
0050: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0060: ff ff ff ff  ff ff ff ff  00 00 00 00  00 00 00 00
00a0: 00 00 00 00  00 00 00 00  a0 64 00 00  00 00 00 00
00b0: 02 00 00 00  00 00 00 00  44 00 05 00  84 d5 ee 07
00d0: 32 00 00 00  02 00 00 00  c0 a8 01 01  00 00 00 00
00e0: 00 00 00 00  00 00 00 00  01 40 00 00  01 00 00 00
00f0: ff ff ff ff  ff ff ff ff  ff ff ff ff
./xf12-parentR2 add inbound eroute fd68:c9f9:4157:2:0:1::/96:0 --0-> fd68:c9f9:4157::/64:0 => tun.10000@132.213.238.7 succeeded
| sr for #2: unrouted (eroute_owner: #0)
| route owner of "parker1--jj2" unrouted: NULL; eroute owner: NULL
| route_and_eroute with c: parker1--jj2 (next: none) ero:null esr:{(nil)} ro:null rosr:{(nil)} and state: 2
writing netlink policy for tun.0@192.168.1.1
0000: fc 00 00 00  19 00 05 00  00 00 00 00  00 00 00 00
0010: fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
0020: fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
0030: 00 00 00 00  00 00 00 00  0a 00 60 40  00 00 00 00
0040: 00 00 00 00  00 00 00 00  ff ff ff ff  ff ff ff ff
0050: ff ff ff ff  ff ff ff ff  ff ff ff ff  ff ff ff ff
0060: ff ff ff ff  ff ff ff ff  00 00 00 00  00 00 00 00
00a0: 00 00 00 00  00 00 00 00  a0 64 00 00  00 00 00 00
00b0: 01 00 00 00  00 00 00 00  44 00 05 00  c0 a8 01 01
00d0: 32 00 00 00  02 00 00 00  84 d5 ee 07  00 00 00 00
00e0: 00 00 00 00  00 00 00 00  01 40 00 00  01 00 00 00
00f0: ff ff ff ff  ff ff ff ff  ff ff ff ff
./xf12-parentR2 eroute_connection add eroute fd68:c9f9:4157::/64:0 --0-> fd68:c9f9:4157:2:0:1::/96:0 => tun.0@192.168.1.1 succeeded
| command executing up-client
| executing up
| route_and_eroute: firewall_notified: true
| command executing prepare-client
| executing prepare
| command executing route-client
| executing route
| route_and_eroute: instance "parker1--jj2", setting eroute_owner to #2 (was #0) (newest_ipsec_sa=#0)
| emitting 4 raw bytes of padding and length into cleartext
| padding and length  00 01 02 03
| emitting 16 zero bytes of length of truncated HMAC into IKEv2 Encryption Payload
| emitting length of IKEv2 Encryption Payload: 500
| emitting length of ISAKMP Message: 528
| encrypting as RESPONDER, parent SA #1
| data before encryption:
|   27 00 00 26  02 00 00 00  6a 61 6d 65  73 6a 6f 68
|   6e 73 6f 6e  2e 65 6d 6d  6a 61 79 2e  63 72 65 64
|   69 6c 2e 6f  72 67 21 00  01 1a 01 00  00 00 98 03
|   d0 5b 98 38  59 cf ec 01  bb ff 76 a7  47 e7 3c 3d
|   87 df 37 dc  cf ae 80 10  bb 06 8a 18  a3 b8 92 35
|   45 da e7 09  76 8f a1 0a  f8 a8 0d f6  a7 04 d1 92
|   14 28 b6 bf  cd b2 cb 28  05 d5 cd 2f  80 26 79 cb
|   30 4f 1c 68  bc ce 46 e5  a4 53 da 38  08 be 6e 40
|   63 b8 c4 78  fb df 35 4b  5c db d3 65  8e 93 4b 94
|   98 4b 05 ea  10 ae 0d 14  02 ca c9 4c  62 7a 39 1c
|   e6 f2 1a 1b  4c b5 7f 25  3d f3 b8 b3  06 fe b0 f7
|   4d 2b b8 ea  36 1a 51 c3  59 62 8a 63  8a c0 f6 a2
|   e1 37 a5 ef  fb 8e 4e 40  ac b7 7b 05  b6 0c 76 c8
|   61 1a c5 3e  80 3e 1d 72  bd 16 56 8d  fd 8f 0d bd
|   0b e1 9a 26  c0 8b cd 58  7d 95 73 d4  30 71 d5 53
|   d3 3c ad 46  54 b4 61 aa  f1 d7 96 ce  42 e5 58 e4
|   08 14 2b ac  8b 48 60 c2  e1 8e 94 23  d4 21 1c 87
|   d2 b4 73 d5  45 ea 1e 33  45 ad 3b 56  9d 97 b7 5f
|   08 59 5a 12  e7 53 5a 53  ac f8 3d 23  22 58 4b cf
|   03 c3 53 fe  2d c6 81 5a  cb 5a 1b ae  cb 00 81 4a
|   2c 00 00 2c  00 00 00 28  01 03 04 03  12 34 56 78
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 08
|   03 00 00 0c  00 00 00 08  05 00 00 00  2d 00 00 30
|   01 00 00 00  08 00 00 28  00 00 ff ff  fd 68 c9 f9
|   41 57 00 02  00 00 00 01  00 00 00 00  fd 68 c9 f9
|   41 57 00 02  00 00 00 01  ff ff ff ff  00 00 00 30
|   01 00 00 00  08 00 00 28  00 00 ff ff  fd 68 c9 f9
|   41 57 00 00  00 00 00 00  00 00 00 00  fd 68 c9 f9
|   41 57 00 00  ff ff ff ff  ff ff ff ff  00 01 02 03
| data after encryption:
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   0d 39 ca f1  4a 9a 6d 17  11 40 8c 28  ed 28 b0 52
|   c6 b7 88 4f  9e c2 6d 06  17 a7 d2 c3  fb 8d 36 26
|   bb d9 05 2b  d8 8c dc 9c  81 23 e1 b0  ee e0 3b 5c
|   ca 68 f8 dd  09 e8 1f ea  12 54 74 fd  fd 4b b0 37
|   db ec 30 5f  c2 ce 82 a6  ce 2a 97 3c  4e 03 25 0c
|   b8 25 dd 9b  2a 5b 1f ad  04 69 a2 58  a9 81 12 7c
|   15 04 69 96  7d 54 67 74  d8 a9 50 c4  3d a9 56 0e
|   25 60 18 dc  e6 93 43 f2  a3 ac 53 a7  88 c3 d8 16
|   13 fc 52 f9  ea 6a 62 35  6f 16 e0 8a  7a a1 1b 63
|   7a 55 b1 23  04 fc 8b fd  e1 b9 6f 13  bc b9 92 19
|   e8 e8 d6 bb  bb 5e 50 99  4b 7a b2 52  95 b6 9f a2
|   3f 54 f5 91  a4 25 ce 3d  4e 66 52 9d  36 9d a6 79
|   80 db df 1f  94 69 5d 1d  2d fc d7 06  70 2b c0 e6
|   90 e3 69 0b  6a 75 0e cf  a0 7e ad 0d  82 f1 73 f7
|   f1 54 1a ee  83 33 e8 0a  92 78 56 c0  51 24 ea 29
|   c3 f6 df 06  42 2c 35 e1  80 d2 13 80  68 c6 ff 74
|   c9 07 9e 29  0e 99 65 6f  dc d1 1c 9f  8c b4 47 27
|   58 4b e7 9c  c5 d0 01 0b  34 71 3f 28  08 c0 b6 fd
|   96 69 d7 f4  94 57 ff 18  e5 16 9b 2e  85 fe d6 e9
|   4f e6 95 30  67 1a 7c af  b6 1b 88 78  9f 76 33 f3
|   a2 c9 50 1d  69 42 24 65  ce b0 c8 b2  91 e9 09 cb
|   a8 d2 57 19  ad a1 fb 0d  fe 8f f9 f3  59 c9 6e 79
|   97 f2 03 21  b6 b9 e2 15  15 2e ca b6  a4 51 dd f3
|   e9 db 36 4f  89 6f c2 eb  8b 3f 7a ee  48 69 2f f6
|   09 fc c5 1d  79 14 c1 95  7b 3b 14 32  80 2a ba 17
|   a6 74 85 6d  06 19 89 76  cc 7a c3 27  3e ee af e0
|   12 ba 80 3e  66 5b f3 1a  14 d1 60 33  b6 f1 79 28
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 02 10  24 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   0d 39 ca f1  4a 9a 6d 17  11 40 8c 28  ed 28 b0 52
|   c6 b7 88 4f  9e c2 6d 06  17 a7 d2 c3  fb 8d 36 26
|   bb d9 05 2b  d8 8c dc 9c  81 23 e1 b0  ee e0 3b 5c
|   ca 68 f8 dd  09 e8 1f ea  12 54 74 fd  fd 4b b0 37
|   db ec 30 5f  c2 ce 82 a6  ce 2a 97 3c  4e 03 25 0c
|   b8 25 dd 9b  2a 5b 1f ad  04 69 a2 58  a9 81 12 7c
|   15 04 69 96  7d 54 67 74  d8 a9 50 c4  3d a9 56 0e
|   25 60 18 dc  e6 93 43 f2  a3 ac 53 a7  88 c3 d8 16
|   13 fc 52 f9  ea 6a 62 35  6f 16 e0 8a  7a a1 1b 63
|   7a 55 b1 23  04 fc 8b fd  e1 b9 6f 13  bc b9 92 19
|   e8 e8 d6 bb  bb 5e 50 99  4b 7a b2 52  95 b6 9f a2
|   3f 54 f5 91  a4 25 ce 3d  4e 66 52 9d  36 9d a6 79
|   80 db df 1f  94 69 5d 1d  2d fc d7 06  70 2b c0 e6
|   90 e3 69 0b  6a 75 0e cf  a0 7e ad 0d  82 f1 73 f7
|   f1 54 1a ee  83 33 e8 0a  92 78 56 c0  51 24 ea 29
|   c3 f6 df 06  42 2c 35 e1  80 d2 13 80  68 c6 ff 74
|   c9 07 9e 29  0e 99 65 6f  dc d1 1c 9f  8c b4 47 27
|   58 4b e7 9c  c5 d0 01 0b  34 71 3f 28  08 c0 b6 fd
|   96 69 d7 f4  94 57 ff 18  e5 16 9b 2e  85 fe d6 e9
|   4f e6 95 30  67 1a 7c af  b6 1b 88 78  9f 76 33 f3
|   a2 c9 50 1d  69 42 24 65  ce b0 c8 b2  91 e9 09 cb
|   a8 d2 57 19  ad a1 fb 0d  fe 8f f9 f3  59 c9 6e 79
|   97 f2 03 21  b6 b9 e2 15  15 2e ca b6  a4 51 dd f3
|   e9 db 36 4f  89 6f c2 eb  8b 3f 7a ee  48 69 2f f6
|   09 fc c5 1d  79 14 c1 95  7b 3b 14 32  80 2a ba 17
|   a6 74 85 6d  06 19 89 76  cc 7a c3 27  3e ee af e0
|   12 ba 80 3e  66 5b f3 1a  14 d1 60 33  b6 f1 79 28
| out calculated auth:
|   b7 e8 df a2  ba b3 45 62  d5 f5 fc 63  4f 39 61 81
| #2 complete v2 state transition with STF_OK
./xf12-parentR2 transition from state STATE_PARENT_R1 to state STATE_PARENT_R2
| v2_state_transition: st is #2; pst is #1; transition_st is #1
./xf12-parentR2 STATE_PARENT_R2: received v2I2, PARENT SA established {auth=IKEv2 oursig=AQOg5H7A4 theirsig=AQN7wUerV cipher=aes_128 integ=sha256_128 prf=prf-hmac-sha2-256 group=modp2048} (msgid: 00000001/00000001)
./xf12-parentR2 negotiated tunnel [fd68:c9f9:4157::,fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto:0 port:0-65535] -> [fd68:c9f9:4157:2:0:1::,fd68:c9f9:4157:2:0:1:ffff:ffff proto:0 port:0-65535]
./xf12-parentR2 STATE_CHILD_C1_KEYED: CHILD SA established tunnel mode {ESP=>0x12345678 <0x12345678 xfrm=aes_cbc_128-hmac_sha2_256_128 NATOA=none NATD=none DPD=none}
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 528 bytes for STATE_PARENT_R1 through eth0:500 [93.184.216.34:55044] to 192.168.1.1:500 (using #2)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 02 10  24 00 01 f4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   0d 39 ca f1  4a 9a 6d 17  11 40 8c 28  ed 28 b0 52
|   c6 b7 88 4f  9e c2 6d 06  17 a7 d2 c3  fb 8d 36 26
|   bb d9 05 2b  d8 8c dc 9c  81 23 e1 b0  ee e0 3b 5c
|   ca 68 f8 dd  09 e8 1f ea  12 54 74 fd  fd 4b b0 37
|   db ec 30 5f  c2 ce 82 a6  ce 2a 97 3c  4e 03 25 0c
|   b8 25 dd 9b  2a 5b 1f ad  04 69 a2 58  a9 81 12 7c
|   15 04 69 96  7d 54 67 74  d8 a9 50 c4  3d a9 56 0e
|   25 60 18 dc  e6 93 43 f2  a3 ac 53 a7  88 c3 d8 16
|   13 fc 52 f9  ea 6a 62 35  6f 16 e0 8a  7a a1 1b 63
|   7a 55 b1 23  04 fc 8b fd  e1 b9 6f 13  bc b9 92 19
|   e8 e8 d6 bb  bb 5e 50 99  4b 7a b2 52  95 b6 9f a2
|   3f 54 f5 91  a4 25 ce 3d  4e 66 52 9d  36 9d a6 79
|   80 db df 1f  94 69 5d 1d  2d fc d7 06  70 2b c0 e6
|   90 e3 69 0b  6a 75 0e cf  a0 7e ad 0d  82 f1 73 f7
|   f1 54 1a ee  83 33 e8 0a  92 78 56 c0  51 24 ea 29
|   c3 f6 df 06  42 2c 35 e1  80 d2 13 80  68 c6 ff 74
|   c9 07 9e 29  0e 99 65 6f  dc d1 1c 9f  8c b4 47 27
|   58 4b e7 9c  c5 d0 01 0b  34 71 3f 28  08 c0 b6 fd
|   96 69 d7 f4  94 57 ff 18  e5 16 9b 2e  85 fe d6 e9
|   4f e6 95 30  67 1a 7c af  b6 1b 88 78  9f 76 33 f3
|   a2 c9 50 1d  69 42 24 65  ce b0 c8 b2  91 e9 09 cb
|   a8 d2 57 19  ad a1 fb 0d  fe 8f f9 f3  59 c9 6e 79
|   97 f2 03 21  b6 b9 e2 15  15 2e ca b6  a4 51 dd f3
|   e9 db 36 4f  89 6f c2 eb  8b 3f 7a ee  48 69 2f f6
|   09 fc c5 1d  79 14 c1 95  7b 3b 14 32  80 2a ba 17
|   a6 74 85 6d  06 19 89 76  cc 7a c3 27  3e ee af e0
|   12 ba 80 3e  66 5b f3 1a  14 d1 60 33  b6 f1 79 28
|   b7 e8 df a2  ba b3 45 62  d5 f5 fc 63  4f 39 61 81
| releasing whack for #X (sock=Y)
| releasing whack for #X (sock=Y)
| inserting event EVENT_SA_REPLACE, timeout in 28530 seconds for #2
now look at the resulting SAs produced.
RC=0 #2: "parker1--jj2":500 IKEv2.0 STATE_CHILD_C1_KEYED (CHILD SA established); none in -1s; newest IPSEC; eroute owner; nodpd; msgid=0; idle; import:respond to friend
RC=0 #1: "parker1--jj2":500 IKEv2.0 STATE_PARENT_R2 (received v2I2, PARENT SA established); none in -1s; newest ISAKMP; nodpd; retranscnt=0,outorder=0,last=-1,next=1,recv=1; msgid=0; idle; import:respond to friend
| freeing state object #1
./xf12-parentR2 leak: reply packet, item size: X
./xf12-parentR2 leak: skeyseed_t1, item size: X
./xf12-parentR2 leak: responder keys, item size: X
./xf12-parentR2 leak: initiator keys, item size: X
./xf12-parentR2 leak: alg_info_esp, item size: X
./xf12-parentR2 leak: db_context->attrs, item size: X
./xf12-parentR2 leak: db_context->trans, item size: X
./xf12-parentR2 leak: 2 * db_context->conj, item size: X
./xf12-parentR2 leak: v2 policy database, item size: X
./xf12-parentR2 leak: st_nr in duplicate_state, item size: X
./xf12-parentR2 leak: st_ni in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_pr in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_pi in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_er in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_ei in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_ar in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_ai in duplicate_state, item size: X
./xf12-parentR2 leak: st_skey_d in duplicate_state, item size: X
./xf12-parentR2 leak: st_skeyseed in duplicate_state, item size: X
./xf12-parentR2 leak: st_enc_key in duplicate_state, item size: X
./xf12-parentR2 leak: struct state in new_state(), item size: X
./xf12-parentR2 leak: ikev2_inI2outR2 KE, item size: X
./xf12-parentR2 leak: alg_info_ike, item size: X
./xf12-parentR2 leak: ikev2_inI1outR1 KE, item size: X
./xf12-parentR2 leak: msg_digest, item size: X
./xf12-parentR2 leak: 2 * keep id name, item size: X
./xf12-parentR2 leak: ID host_pair, item size: X
./xf12-parentR2 leak: host_pair, item size: X
./xf12-parentR2 leak: host ip, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: host ip, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: connection name, item size: X
./xf12-parentR2 leak: struct connection, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: pubkey entry, item size: X
./xf12-parentR2 leak: rfc3110 format of public key, item size: X
./xf12-parentR2 leak: pubkey, item size: X
./xf12-parentR2 leak: keep id name, item size: X
./xf12-parentR2 leak: pubkey entry, item size: X
./xf12-parentR2 leak: rfc3110 format of public key, item size: X
./xf12-parentR2 leak: pubkey, item size: X
./xf12-parentR2 leak: 2 * id list, item size: X
./xf12-parentR2 leak: rfc3110 format of public key [created], item size: X
./xf12-parentR2 leak: pubkey, item size: X
./xf12-parentR2 leak: secret, item size: X
./xf12-parentR2 leak: 4 * hasher name, item size: X
./xf12-parentR2 leak: 10 * group description, item size: X
./xf12-parentR2 leak: policies path, item size: X
./xf12-parentR2 leak: ocspcerts path, item size: X
./xf12-parentR2 leak: aacerts path, item size: X
./xf12-parentR2 leak: certs path, item size: X
./xf12-parentR2 leak: private path, item size: X
./xf12-parentR2 leak: crls path, item size: X
./xf12-parentR2 leak: cacert path, item size: X
./xf12-parentR2 leak: acert path, item size: X
./xf12-parentR2 leak: default conf var_dir, item size: X
./xf12-parentR2 leak: default conf conffile, item size: X
./xf12-parentR2 leak: default conf ipsecd_dir, item size: X
./xf12-parentR2 leak: default conf ipsec_conf_dir, item size: X
./xf12-parentR2 leak detective found Z leaks, total size X
Pre-amble (offset: X): #!-pluto-whack-file- recorded on FOO
