./rekeyikev2-R1 ike_alg_register_enc(): Activating OAKLEY_AES_CBC: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_hash(): Activating OAKLEY_SHA2_512: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_prf(): Activating prf-hmac-sha2-512: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_hash(): Activating OAKLEY_SHA2_256: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_prf(): Activating prf-hmac-sha2-256: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_hash(): Activating OAKLEY_SHA1: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_prf(): Activating prf-hmac-sha1: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_hash(): Activating OAKLEY_MD5: Ok (ret=0)
./rekeyikev2-R1 ike_alg_register_prf(): Activating prf-hmac-md5: Ok (ret=0)
./rekeyikev2-R1 loading secrets from "../samples/jj.secrets"
./rekeyikev2-R1 loaded private key for keyid: PPK_RSA:AQOg5H7A4/2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
./rekeyikev2-R1 registed kernel encr algorithm aes_cbc [12, 128<=key<=512]
./rekeyikev2-R1 registed kernel encr algorithm 3des [3, 192<=key<=192]
./rekeyikev2-R1 registed kernel integ algorithm hmac_sha1_96 [2, 160<=key<=160]
./rekeyikev2-R1 registed kernel integ algorithm hmac_md5_96 [1, 128<=key<=128]
./rekeyikev2-R1 registed kernel integ algorithm hmac_sha2_256_128 [12, 256<=key<=256]
./rekeyikev2-R1 registed kernel integ algorithm hmac_sha2_512_256 [14, 256<=key<=256]
| processing whack message of size: A
| processing whack message of size: A
processing whack msg time: X size: Y
./rekeyikev2-R1 loaded key: 2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
| processing whack message of size: A
processing whack msg time: X size: Y
./rekeyikev2-R1 loaded key: 66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9
| processing whack message of size: A
processing whack msg time: X size: Y
| Added new connection parker1--jj2 with policy RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
./rekeyikev2-R1 use keyid: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 / 2:<>
| counting wild cards for @jamesjohnson.emmjay.credil.org is 0
./rekeyikev2-R1 use keyid: 1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 / 2:<>
| counting wild cards for @parker01.emmjay.credil.org is 0
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 exact-match
| find_host_pair: concluded with <none>
| connect_to_host_pair: 132.213.238.7:500 %address 192.168.1.1:500 -> hp:none
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (exact)
|   concluded with <none>
./rekeyikev2-R1 adding connection: "parker1--jj2"
| fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96
| ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
RC=0 "parker1--jj2": fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96; unrouted; eroute owner: #0
RC=0 "parker1--jj2":     myip=unset; hisip=unset;
RC=0 "parker1--jj2":   keys: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 2:none...
RC=0 "parker1--jj2":        ....1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 2:none
RC=0 "parker1--jj2":   ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; firstmsgid: 0
RC=0 "parker1--jj2":   policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK; prio: 64,96; interface: eth0; kind=CK_PERMANENT
|   =========== input from pcap file ../lp12-parentR2/parentI1.pcap ========
| *received 628 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 74  22 00 00 f4
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0e  02 00 00 28  02 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0e
|   02 00 00 28  03 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 05  02 00 00 28  04 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 05
|   02 00 00 28  05 01 00 04  03 00 00 08  01 00 00 0c
|   03 00 00 08  02 00 00 05  03 00 00 08  03 00 00 0c
|   00 00 00 08  04 00 00 0f  00 00 00 28  06 01 00 04
|   03 00 00 08  01 00 00 0c  03 00 00 08  02 00 00 05
|   03 00 00 08  03 00 00 02  00 00 00 08  04 00 00 0f
|   28 00 01 08  00 0e 00 00  3d a6 6a 81  e2 92 09 be
|   18 4f a0 1e  5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53
|   5d 17 6a be  1b c5 70 ab  34 47 bc 09  14 7c aa 91
|   9c 8f 81 dc  1e f9 87 cd  6a ec fa f3  a5 9e 37 bc
|   ac 3d fd e1  32 8e e8 b3  fe d3 8b f4  7b 50 34 13
|   33 7a 93 ea  e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2
|   55 ce 45 22  9f c7 c9 48  43 a3 e2 64  b5 5d 43 38
|   c8 fe f1 d3  06 43 f0 0a  e8 6d 61 8c  60 78 d9 98
|   d3 1b 3b 5e  f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62
|   b2 3e 0b 17  af 6c b8 31  08 d7 19 5a  7b c4 54 c2
|   13 47 98 c2  cc d2 16 29  75 6c 03 fb  1e 9c 9d 21
|   0c a1 e6 c2  f3 f2 49 2c  f6 06 73 c1  96 1e ce 58
|   81 01 1c cb  16 dc f9 fc  c7 93 08 75  58 16 57 71
|   69 96 66 b7  a9 81 7f f7  37 4d 7c 41  38 62 a6 39
|   00 81 ca 3d  1d fc f7 b5  08 38 d4 34  70 22 6c 21
|   d2 5b 20 a1  d2 ba 2a d1  89 f3 20 79  ce ac 1e c2
|   ec 7d ae 76  94 40 39 a0  29 00 00 14  20 98 9d 37
|   a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3  29 00 00 1c
|   00 00 40 04  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b
|   b0 95 3c 48  70 73 62 f1  2b 00 00 1c  00 00 40 05
|   cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2  00 00 00 10  4f 45 70 6c  75 74 6f 75
|   6e 69 74 30
|  processing version=2.0 packet with exchange type=ISAKMP_v2_SA_INIT (34), msgid: 00000000
| I am the IKE SA Responder
| I am this exchange's Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| considering state entry: 0
|   reject: received request, needs response message
| considering state entry: 1
|   reject: received request, needs response message
| considering state entry: 2
|   reject: received request, needs response message
| considering state entry: 3
| now proceed with state specific processing using state #3 responder-V2_init
| find_host_connection2 called from ikev2parent_inI1outR1, me=132.213.238.7:500 him=192.168.1.1:500 policy=IKEv2ALLOW/-
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 any-match
| find_host_pair: comparing to me=132.213.238.7:500 %address him=192.168.1.1:500
| find_host_pair: concluded with parker1--jj2
| found_host_pair_conn (find_host_connection2): 132.213.238.7:500 %address/192.168.1.1:500 -> hp:parker1--jj2
| searching for connection with policy = IKEv2ALLOW/-
| found policy = RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK (parker1--jj2)
| find_host_connection2 returns parker1--jj2 (ike=none/none)
./rekeyikev2-R1 tentatively considering connection: parker1--jj2
| creating state object #1 at Z
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #1 bucket: 28
| will not send/process a dcookie
| received a notify..
| processor 'responder-V2_init' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI1outR1: calculated ke+nonce, sending R1
| nat chunk  80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   c0 a8 01 01  01 f4
| processing v2N_NAT_DETECTION_SOURCE_IP
| received nat-t hash  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b  b0 95 3c 48
|   70 73 62 f1
| calculated nat-t  h  ea 59 1e 1b  30 a3 e0 94  4c dc 91 5b  b0 95 3c 48
|   70 73 62 f1
| nat-t payloads for v2N_NAT_DETECTION_SOURCE_IP match: no NAT
| nat chunk  80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   84 d5 ee 07  01 f4
| processing v2N_NAT_DETECTION_DESTINATION_IP
| received nat-t hash  cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2
| calculated nat-t  h  cd bc 1b 74  02 d7 5e 4c  da 5b cd 1c  a1 08 87 2b
|   f9 7d c4 c2
| nat-t payloads for v2N_NAT_DETECTION_DESTINATION_IP match: no NAT
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_SA_INIT
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 00
| ***emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_ike_add() ealg=12 aalg=12 prfalg_id=5 modp_id=14, cnt=1
| __alg_info_ike_add() ealg=18 aalg=12 prfalg_id=5 modp_id=14, cnt=2
| __alg_info_ike_add() ealg=12 aalg=2 prfalg_id=5 modp_id=14, cnt=3
| __alg_info_ike_add() ealg=18 aalg=2 prfalg_id=5 modp_id=14, cnt=4
| __alg_info_ike_add() ealg=12 aalg=12 prfalg_id=5 modp_id=5, cnt=5
| __alg_info_ike_add() ealg=18 aalg=12 prfalg_id=5 modp_id=5, cnt=6
| __alg_info_ike_add() ealg=12 aalg=2 prfalg_id=5 modp_id=5, cnt=7
| __alg_info_ike_add() ealg=18 aalg=2 prfalg_id=5 modp_id=5, cnt=8
| __alg_info_ike_add() ealg=12 aalg=12 prfalg_id=5 modp_id=15, cnt=9
| __alg_info_ike_add() ealg=18 aalg=12 prfalg_id=5 modp_id=15, cnt=10
| __alg_info_ike_add() ealg=12 aalg=2 prfalg_id=5 modp_id=15, cnt=11
| __alg_info_ike_add() ealg=18 aalg=2 prfalg_id=5 modp_id=15, cnt=12
| found algorithm: aes_cbc(12)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP2048(14)
| not including aes_gcm_8(18)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP2048(14 in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| found algorithm: aes_cbc(12)-hmac_sha1_96(2)-prfsha2_256(5)-MODP2048(14)
| not including aes_gcm_8(18)-hmac_sha1_96(2)-prfsha2_256(5)-MODP2048(14) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| found algorithm: aes_cbc(12)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP1536(5)
| not including aes_gcm_8(18)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP1536(5) in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| found algorithm: aes_cbc(12)-hmac_sha1_96(2)-prfsha2_256(5)-MODP1536(5)
| not including aes_gcm_8(18)-hmac_sha1_96(2)-prfsha2_256(5)-MODP1536(5) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| found algorithm: aes_cbc(12)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP3072(15)
| not including aes_gcm_8(18)-hmac_sha2_256_128(12)-prfsha2_256(5)-MODP3072(15 in policy, as algorithm missing(enc:0,integ:32,prf:1,group:1)
| found algorithm: aes_cbc(12)-hmac_sha1_96(2)-prfsha2_256(5)-MODP3072(15)
| not including aes_gcm_8(18)-hmac_sha1_96(2)-prfsha2_256(5)-MODP3072(15) in policy, as algorithm missing(enc:0,integ:20,prf:1,group:1)
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 1
|    transform ID: 12
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 2
|    transform ID: 5
| collect encr: 12<=1 integ: 0<=0 prf: 5<=1 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 3
|    transform ID: 12
| collect encr: 12<=1 integ: 12<=1 prf: 5<=1 dh: 0<=0
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 4
|    transform ID: 14
| collect encr: 12<=1 integ: 12<=1 prf: 5<=1 dh: 14<=1
| encr: 0<=1 integ: 0<=1 prf: 0<=1 dh: 0<=1
| selected proposal 1 encr=aes_cbc[-1] integ=hmac_sha2_256_128 prf=prf-hmac-sha2-256 modp=OAKLEY_GROUP_MODP2048
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 2
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| ****emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ******emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 2
|    transform ID: 5
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 4
|    transform ID: 14
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 44
| emitting length of IKEv2 Security Association Payload: 48
| DH public value received:
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|    next-payload: ISAKMP_NEXT_v2KE [@28=0x22]
| ***emit IKEv2 Key Exchange Payload:
|    critical bit: none
|    transform type: 14
| emitting 256 raw bytes of ikev2 g^x into IKEv2 Key Exchange Payload
| ikev2 g^x  bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
| emitting length of IKEv2 Key Exchange Payload: 264
|    next-payload: ISAKMP_NEXT_v2Ni [@76=0x28]
| ***emit IKEv2 Nonce Payload:
|    critical bit: none
| emitting 16 raw bytes of IKEv2 nonce into IKEv2 Nonce Payload
| IKEv2 nonce  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| emitting length of IKEv2 Nonce Payload: 20
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   84 d5 ee 07  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@340=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe
| emitting length of IKEv2 Notify Payload: 28
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   c0 a8 01 01  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@360=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  81 b5 74 15  c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab
|   25 31 bf 62
| emitting length of IKEv2 Notify Payload: 28
| Thinking about sending a certificate request (CERTREQ)
|   my policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   my next payload will not be a certificate request
| I did not send a certificate request (CERTREQ) because
|  has a preloaded a public for that end in st
|   no known CA for the other end
|   no CA certs available for validation
|    next-payload: ISAKMP_NEXT_v2V [@388=0x2b]
| ***emit ISAKMP Vendor ID Payload:
| emitting 12 raw bytes of Vendor ID into ISAKMP Vendor ID Payload
| Vendor ID  4f 45 ab ab  ab ab ab ab  ab ab ab ab
| emitting length of ISAKMP Vendor ID Payload: 16
| emitting length of ISAKMP Message: 432
| #1 complete v2 state transition with STF_OK
./rekeyikev2-R1 transition from state STATE_IKEv2_START to state STATE_PARENT_R1
| v2_state_transition: st is #1; pst is #0; transition_st is #1
./rekeyikev2-R1 STATE_PARENT_R1: received v2I1, sent v2R1 (msgid: 00000000/00000000)
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 432 bytes for STATE_IKEv2_START through eth0:500 [132.213.238.7:500] to 192.168.1.1:500 (using #1)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 01 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 0c  03 00 00 08
|   02 00 00 05  00 00 00 08  04 00 00 0e  28 00 01 08
|   00 0e 00 00  bd 48 18 9c  9e 03 70 f2  55 ce 45 22
|   9f c7 c9 48  43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3
|   06 43 f0 0a  e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e
|   f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17
|   af 6c b8 31  08 d7 19 5a  7b c4 54 c2  13 47 98 c2
|   cc d2 16 29  75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2
|   f3 f2 49 2c  f6 06 73 c1  96 1e ce 58  81 01 1c cb
|   16 dc f9 fc  c7 93 08 75  58 16 57 71  69 96 66 b7
|   a9 81 7f f7  37 4d 7c 41  38 62 a6 39  00 81 ca 3d
|   1d fc f7 b5  08 38 d4 34  70 22 6c 21  d2 5b 20 a1
|   d2 ba 2a d1  89 f3 20 79  ce ac 1e c2  ec 7d ae 76
|   94 40 39 a0  3d a6 6a 81  e2 92 09 be  18 4f a0 1e
|   5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53  5d 17 6a be
|   1b c5 70 ab  34 47 bc 09  14 7c aa 91  9c 8f 81 dc
|   1e f9 87 cd  6a ec fa f3  a5 9e 37 bc  ac 3d fd e1
|   32 8e e8 b3  fe d3 8b f4  7b 50 34 13  33 7a 93 ea
|   e9 3c 0e 8b  29 00 00 14  20 98 9d 37  a8 14 a6 4d
|   8f f0 7c 08  d3 20 e9 e3  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 ab ab  ab ab ab ab  ab ab ab ab
|   =========== input from pcap file ../lp12-parentR2/parentI2.pcap ========
| *received 464 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 01 d0  23 00 01 b4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   c6 2c 43 c6  ae 0f ec 1a  69 62 67 2e  9a c5 dd 37
|   12 23 a6 b7  de 53 97 61  34 05 0e 5c  b1 64 2c 98
|   e9 d9 a9 bc  39 23 84 2e  eb 15 07 fa  8b a9 6f 4c
|   b8 09 d0 ed  bd bb b3 10  5e f9 cb 1b  08 8c c3 e9
|   ae 83 3a 41  c5 c6 42 f7  a3 83 87 36  cf 53 1e b7
|   ef b6 46 fa  21 e6 56 f8  e0 02 03 41  6e d4 a5 c9
|   5f 0a 07 28  a3 c7 0d 34  05 18 a5 e0  92 10 8d 6a
|   20 0f c5 6a  9b f5 29 20  2a 3c 87 bd  49 8e 01 43
|   4b 41 ce 20  55 e2 26 20  0f f8 4b bf  ee 30 b4 ad
|   7f a3 bb dd  2e 12 6d 54  e8 2c 81 44  e5 da cd 62
|   59 f9 9f 21  d9 42 aa 59  c9 28 ef 49  86 a7 ab e1
|   32 06 d3 28  5d ad 51 24  8a da 15 fc  e9 31 7c f7
|   66 54 10 b7  7e 52 fc 43  3a f7 55 99  46 8a e2 9f
|   02 6d 36 d6  5d 78 99 44  fe 0a d4 00  67 d9 46 82
|   8e 90 a6 c6  6e b8 4b 21  a2 41 ba 80  5e cc 6f 3b
|   2e b1 65 2f  09 b9 21 6d  6a 2e af cc  48 d8 0d 2e
|   dc 05 49 c9  d6 83 28 d0  fd 8f 2d 04  45 b1 13 31
|   d7 f6 94 4d  b9 38 c7 ad  e8 49 d7 84  48 ba d9 b4
|   dd 5d 3e 0f  8e 17 54 1f  1a 3f 6a 6c  15 ad 50 6a
|   f6 b7 b0 aa  b5 e9 c9 04  0f 04 e3 4f  79 36 64 d3
|   c1 80 67 b8  b0 c6 68 fc  74 72 06 9c  76 1c 22 c0
|   9f a6 6b 7a  7a 7a 3c 81  d0 f8 1e b4  33 0c bb 37
|   bf ff b1 0c  f2 99 69 ef  63 48 f5 69  6e 77 cc 6e
|   30 de 2b 02  64 68 14 02  09 81 59 5f  1c 39 85 92
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35), msgid: 00000001
| I am the IKE SA Responder
| I am this exchange's Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 peer and cookies match on #1
| v2 state object #1 (parker1--jj2) found, in STATE_PARENT_R1
| state found and its state is:STATE_PARENT_R1 msgid: 00001
| considering state entry: 0
|   reject: received request, needs response message
| considering state entry: 1
|   reject: received request, needs response message
| considering state entry: 2
|   reject: received request, needs response message
| considering state entry: 3
|   reject:state unneeded and state available
| considering state entry: 4
| now proceed with state specific processing using state #4 responder-auth-process
| ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
| processor 'responder-auth-process' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI2outR2: calculating g^{xy}, sending R2
| ikev2 parent SA details
| ikev2 I 0x8001020304050607 0xdebc583a8f40d0cf sha256:0x4ea8e662b07cdd430f6944c6723e4b822e053c7e128712992e053c7e12871299 aes128:0x3f44bf47cafd8150591deb088199fcbf
| ikev2 R 0x8001020304050607 0xdebc583a8f40d0cf sha256:0x515b0bd22e6d76b34fdb760aa7bfad802e053c7e128712992e053c7e12871299 aes128:0xbedb67ec7dc3d00cccac42e70cd63bde
| decrypting as RESPONDER, using INITIATOR keys
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 01 d0  23 00 01 b4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   c6 2c 43 c6  ae 0f ec 1a  69 62 67 2e  9a c5 dd 37
|   12 23 a6 b7  de 53 97 61  34 05 0e 5c  b1 64 2c 98
|   e9 d9 a9 bc  39 23 84 2e  eb 15 07 fa  8b a9 6f 4c
|   b8 09 d0 ed  bd bb b3 10  5e f9 cb 1b  08 8c c3 e9
|   ae 83 3a 41  c5 c6 42 f7  a3 83 87 36  cf 53 1e b7
|   ef b6 46 fa  21 e6 56 f8  e0 02 03 41  6e d4 a5 c9
|   5f 0a 07 28  a3 c7 0d 34  05 18 a5 e0  92 10 8d 6a
|   20 0f c5 6a  9b f5 29 20  2a 3c 87 bd  49 8e 01 43
|   4b 41 ce 20  55 e2 26 20  0f f8 4b bf  ee 30 b4 ad
|   7f a3 bb dd  2e 12 6d 54  e8 2c 81 44  e5 da cd 62
|   59 f9 9f 21  d9 42 aa 59  c9 28 ef 49  86 a7 ab e1
|   32 06 d3 28  5d ad 51 24  8a da 15 fc  e9 31 7c f7
|   66 54 10 b7  7e 52 fc 43  3a f7 55 99  46 8a e2 9f
|   02 6d 36 d6  5d 78 99 44  fe 0a d4 00  67 d9 46 82
|   8e 90 a6 c6  6e b8 4b 21  a2 41 ba 80  5e cc 6f 3b
|   2e b1 65 2f  09 b9 21 6d  6a 2e af cc  48 d8 0d 2e
|   dc 05 49 c9  d6 83 28 d0  fd 8f 2d 04  45 b1 13 31
|   d7 f6 94 4d  b9 38 c7 ad  e8 49 d7 84  48 ba d9 b4
|   dd 5d 3e 0f  8e 17 54 1f  1a 3f 6a 6c  15 ad 50 6a
|   f6 b7 b0 aa  b5 e9 c9 04  0f 04 e3 4f  79 36 64 d3
|   c1 80 67 b8  b0 c6 68 fc  74 72 06 9c  76 1c 22 c0
|   9f a6 6b 7a  7a 7a 3c 81  d0 f8 1e b4  33 0c bb 37
|   bf ff b1 0c  f2 99 69 ef  63 48 f5 69  6e 77 cc 6e
| R2 calculated auth:  30 de 2b 02  64 68 14 02  09 81 59 5f  1c 39 85 92
| R2  provided  auth:  30 de 2b 02  64 68 14 02  09 81 59 5f  1c 39 85 92
| authenticator matched, np=35
| data before decryption:
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   c6 2c 43 c6  ae 0f ec 1a  69 62 67 2e  9a c5 dd 37
|   12 23 a6 b7  de 53 97 61  34 05 0e 5c  b1 64 2c 98
|   e9 d9 a9 bc  39 23 84 2e  eb 15 07 fa  8b a9 6f 4c
|   b8 09 d0 ed  bd bb b3 10  5e f9 cb 1b  08 8c c3 e9
|   ae 83 3a 41  c5 c6 42 f7  a3 83 87 36  cf 53 1e b7
|   ef b6 46 fa  21 e6 56 f8  e0 02 03 41  6e d4 a5 c9
|   5f 0a 07 28  a3 c7 0d 34  05 18 a5 e0  92 10 8d 6a
|   20 0f c5 6a  9b f5 29 20  2a 3c 87 bd  49 8e 01 43
|   4b 41 ce 20  55 e2 26 20  0f f8 4b bf  ee 30 b4 ad
|   7f a3 bb dd  2e 12 6d 54  e8 2c 81 44  e5 da cd 62
|   59 f9 9f 21  d9 42 aa 59  c9 28 ef 49  86 a7 ab e1
|   32 06 d3 28  5d ad 51 24  8a da 15 fc  e9 31 7c f7
|   66 54 10 b7  7e 52 fc 43  3a f7 55 99  46 8a e2 9f
|   02 6d 36 d6  5d 78 99 44  fe 0a d4 00  67 d9 46 82
|   8e 90 a6 c6  6e b8 4b 21  a2 41 ba 80  5e cc 6f 3b
|   2e b1 65 2f  09 b9 21 6d  6a 2e af cc  48 d8 0d 2e
|   dc 05 49 c9  d6 83 28 d0  fd 8f 2d 04  45 b1 13 31
|   d7 f6 94 4d  b9 38 c7 ad  e8 49 d7 84  48 ba d9 b4
|   dd 5d 3e 0f  8e 17 54 1f  1a 3f 6a 6c  15 ad 50 6a
|   f6 b7 b0 aa  b5 e9 c9 04  0f 04 e3 4f  79 36 64 d3
|   c1 80 67 b8  b0 c6 68 fc  74 72 06 9c  76 1c 22 c0
|   9f a6 6b 7a  7a 7a 3c 81  d0 f8 1e b4  33 0c bb 37
|   bf ff b1 0c  f2 99 69 ef  63 48 f5 69  6e 77 cc 6e
| decrypted payload:  27 00 00 22  02 00 00 00  70 61 72 6b  65 72 30 31
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67 21 00  00 c8 01 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 2c 00  00 44 02 00
|   00 20 01 03  04 02 12 34  56 78 03 00  00 08 01 00
|   00 0c 00 00  00 0c 03 00  00 0c 80 0e  00 80 00 00
|   00 20 02 03  04 02 12 34  56 78 03 00  00 08 01 00
|   00 0c 00 00  00 0c 03 00  00 02 80 0e  00 80 2d 00
|   00 30 01 00  00 00 08 00  00 28 00 00  ff ff fd 68
|   c9 f9 41 57  00 02 00 00  00 01 00 00  00 00 fd 68
|   c9 f9 41 57  00 02 00 00  00 01 ff ff  ff ff 00 00
|   00 30 01 00  00 00 08 00  00 28 00 00  ff ff fd 68
|   c9 f9 41 57  00 00 00 00  00 00 00 00  00 00 fd 68
|   c9 f9 41 57  00 00 ff ff  ff ff ff ff  ff ff 00 01
| striping 2 bytes as pad
| **parse IKEv2 Identification Payload:
|    critical bit: none
|    length: 34
|    id_type: ID_FQDN
| processing payload: ISAKMP_NEXT_v2IDi (len=34)
| **parse IKEv2 Authentication Payload:
|    critical bit: none
|    length: 200
|    auth method: v2_AUTH_RSA
| processing payload: ISAKMP_NEXT_v2AUTH (len=200)
| **parse IKEv2 Security Association Payload:
|    critical bit: none
|    length: 68
| processing payload: ISAKMP_NEXT_v2SA (len=68)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSi (len=48)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSr (len=48)
./rekeyikev2-R1 IKEv2 mode peer ID is ID_FQDN: '@parker01.emmjay.credil.org'
| find_ID_host_pair: looking for me=(none) him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|   concluded with parker1--jj2
| parent SA IDi pi verify
|   cc 07 97 44  b4 a3 4e 8a  0d 2f 27 8b  ee 06 6d 07
|   2e 05 3c 7e  12 87 12 99  2e 05 3c 7e  12 87 12 99
| parent SA I2 idhash verify
|   02 00 00 00  70 61 72 6b  65 72 30 31  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| ikev2 verify required CA is '%any'
| checking alg=1 == 1, keyid=@parker01.emmjay.credil.org same_id=1
| key issuer CA is '%any'
| PARENT SA now authenticated, building child and reply
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 01
|    next-payload: ISAKMP_NEXT_v2E [@16=0x2e]
| ***emit IKEv2 Encryption Payload:
|    critical bit: none
| emitting 16 zero bytes of iv into IKEv2 Encryption Payload
| IKEv2 thinking whether to send my certificate:
|  my policy has  RSASIG, the policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|  sendcert: CERT_SENDIFASKED and I did not get a certificate request
|  so do not send cert.
| I did not send a certificate because I do not have one.
|    next-payload: ISAKMP_NEXT_v2IDr [@-20=0x24]
| *****emit IKEv2 Identification Payload:
|    critical bit: none
|    id_type: ID_FQDN
| emitting 30 raw bytes of my identity into IKEv2 Identification Payload
| my identity  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| emitting length of IKEv2 Identification Payload: 38
| idhash calc pr  e9 00 11 7e  41 d4 31 62  40 b8 63 22  bf 06 9f bc
|   2e 05 3c 7e  12 87 12 99  2e 05 3c 7e  12 87 12 99
| idhash calc R2  02 00 00 00  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67
| assembled IDr payload -- CERT next
| CHILD SA proposals received
| going to assemble AUTH payload
|    next-payload: ISAKMP_NEXT_v2AUTH [@0=0x27]
| *****emit IKEv2 Authentication Payload:
|    critical bit: none
|    auth method: v2_AUTH_RSA
| emitting 192 zero bytes of fake rsa sig into IKEv2 Authentication Payload
| emitting length of IKEv2 Authentication Payload: 200
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| ikev2_child_ts_evaluate, evaluating base fit for parker1--jj2 against tsi=1,tsr=1 traffic selectors
|   ikev2_evaluate_connection_fit evaluating our I=parker1--jj2:fd68:c9f9:4157:2:0:1::/96:0/0 R=fd68:c9f9:4157::/64:0/0  to their:
|     tsi[0]=fd68:c9f9:4157:2:0:1::/fd68:c9f9:4157:2:0:1:ffff:ffff proto=0 portrange 0-65535
|     tsr[0]=fd68:c9f9:4157::/fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto=0 portrange 0-65535
| ei->port 0  tsi[tsi_ni].startport 0  tsi[tsi_ni].endport 65535
|       has ts_range1=32 maskbits1=96 ts_range2=64 maskbits2=64 fitbits=32896 <> -1
| bfit_n=ikev2_evaluate_connection_fit found better fit c parker1--jj2
|     evaluate_connection_port_fit tsi_n[1], best=-1
|    tsi[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0], range_i=65536 best=-1
|    tsr[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0] tsr_n[0], range=65536/65536 best=-1
|     best ports fit so far: tsi[0] fitrange_i 65536, tsr[0] fitrange_r 65536, matchiness 131072
|     port_fitness 131072
| ikev2_evaluate_connection_port_fit found better fit c parker1--jj2, tsi[0],tsr[0]
| ikev2_evaluate_connection_fit, concluded with parker1--jj2
| duplicating state object #1
| creating state object #2 at Z
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #2 bucket: 28
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157::
|   ip high: fd68:c9f9:4157:0:ffff:ffff:ffff:ffff
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157:2:0:1::
|   ip high: fd68:c9f9:4157:2:0:1:ffff:ffff
|    next-payload: ISAKMP_NEXT_v2SA [@38=0x21]
| *****emit IKEv2 Security Association Payload:
|    critical bit: none
| __alg_info_esp_add() ealg=12 aalg=12 cnt=1
| __alg_info_esp_add() ealg=12 aalg=2 cnt=2
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 32
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 2
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 1
|    transform ID: 12
| collect encr: 12<=1 integ: 0<=0 prf: 0<=0 dh: 0<=0
| ****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 3
|    transform ID: 12
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| collect encr: 12<=1 integ: 12<=1 prf: 0<=0 dh: 0<=0
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 32
|    prop #: 2
|    proto ID: 3
|    spi size: 4
|    # transforms: 2
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ******emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| emitting 4 raw bytes of our spi into IKEv2 Proposal Substructure Payload
| our spi  12 34 56 78
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ********emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 12
| emitting length of IKEv2 Transform Substructure Payload: 8
| *******emit IKEv2 Transform Substructure Payload:
|    transform type: 5
|    transform ID: 0
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 40
| emitting length of IKEv2 Security Association Payload: 44
|    next-payload: ISAKMP_NEXT_v2TSi [@238=0x2c]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
|    next-payload: ISAKMP_NEXT_v2TSr [@282=0x2d]
| *****emit IKEv2 Traffic Selector Payload:
|    critical bit: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 16 raw bytes of ipv6 low into IKEv2 Traffic Selector
| ipv6 low  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| emitting 16 raw bytes of ipv6 high into IKEv2 Traffic Selector
| ipv6 high  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 40
| emitting length of IKEv2 Traffic Selector Payload: 48
| ikev2_derive_child_keys: using prf-hmac-sha2-256 for prf+ (SA #2 cloned from #1)
| childsacalc.ni  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| childsacalc.nr  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08  d3 20 e9 e3
| ikev2_derive_child_keys: my role is RESPONDER
| prf+[1]:  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
|   78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
| prf+[2]:  fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
|   36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
| prf+[3]:  9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
| our  keymat  8a 19 a9 d4  0d 41 52 27  5e 5f c5 7c  38 9d 1a 41
|   78 9d 67 25  ba a5 bf 18  27 62 68 08  85 2d 47 12
|   fe 7f a4 85  4c 77 99 8e  bd 38 73 a0  58 50 d5 9d
| peer keymat  36 99 5c dd  82 37 91 bd  af 84 94 1e  fd 34 cd 52
|   9d e0 a0 3a  b4 f2 d5 8e  19 f2 45 f6  b8 a1 a1 70
|   ef 67 05 70  8f 1c e2 17  a6 b0 0e 1d  9d ce d1 13
| emitting 6 raw bytes of padding and length into cleartext
| padding and length  00 01 02 03  04 05
| emitting 16 zero bytes of length of truncated HMAC into IKEv2 Encryption Payload
| emitting length of IKEv2 Encryption Payload: 420
| emitting length of ISAKMP Message: 448
| encrypting as RESPONDER, parent SA #1
| data before encryption:
|   27 00 00 26  02 00 00 00  6a 61 6d 65  73 6a 6f 68
|   6e 73 6f 6e  2e 65 6d 6d  6a 61 79 2e  63 72 65 64
|   69 6c 2e 6f  72 67 21 00  00 c8 01 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 00 00
|   00 00 00 00  00 00 00 00  00 00 00 00  00 00 2c 00
|   00 2c 00 00  00 28 01 03  04 03 12 34  56 78 03 00
|   00 0c 01 00  00 0c 80 0e  00 80 03 00  00 08 03 00
|   00 0c 00 00  00 08 05 00  00 00 2d 00  00 30 01 00
|   00 00 08 00  00 28 00 00  ff ff fd 68  c9 f9 41 57
|   00 02 00 00  00 01 00 00  00 00 fd 68  c9 f9 41 57
|   00 02 00 00  00 01 ff ff  ff ff 00 00  00 30 01 00
|   00 00 08 00  00 28 00 00  ff ff fd 68  c9 f9 41 57
|   00 00 00 00  00 00 00 00  00 00 fd 68  c9 f9 41 57
|   00 00 ff ff  ff ff ff ff  ff ff 00 01  02 03 04 05
| data after encryption:
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   c1 fc 19 db  f7 a0 0a 58  95 e0 43 74  1f 5e e0 33
|   f2 06 29 c9  8d 3e 52 00  37 22 20 6c  47 af 94 1c
|   6a 93 b3 97  1f ff 5c 1b  70 b3 48 6a  c7 5f 27 b3
|   e4 bf e1 17  0e 15 c1 47  77 7b 53 88  6c 4a cb 12
|   d0 82 94 13  cf 66 cc 4c  d8 b2 8e c1  39 07 b9 a5
|   12 f6 e0 69  cb ad 11 c1  e9 58 33 21  a8 bb a9 ec
|   40 9e ba 01  5c 8d e8 04  ac b9 22 b2  c6 ce c8 a9
|   79 a2 02 52  da d8 f7 41  ae 9c 82 85  5f f2 f5 a3
|   3f f7 09 de  d6 e7 31 43  51 69 8f 8d  fa 0b 41 e6
|   d8 07 00 68  9e b7 92 3d  47 93 37 e6  14 e0 48 0d
|   bb 1d 13 08  66 5d 87 c4  86 8a 38 f3  05 57 97 5c
|   e1 dc 5c ac  36 b4 e1 93  68 57 da 98  6c 69 99 c3
|   2a b8 60 09  8f 1f d2 d0  27 0b e5 b8  bf 6b e2 83
|   5d af f9 88  7c 09 47 32  c7 c7 72 61  b0 29 20 0b
|   a1 79 22 95  8b 5f 46 ab  30 48 6c 4f  21 93 99 84
|   a4 de 9a eb  10 24 61 19  27 da 8a 9b  ff 3f 7f 85
|   a9 c0 18 f9  23 6d e0 32  33 ca 20 5b  5c dc 26 0c
|   66 92 c6 6b  e1 c9 ee ff  d8 d0 41 97  7e b6 6e be
|   af f6 9e 38  bd 3e 93 ae  c9 73 2e 3e  f5 ed 42 24
|   f6 4f a7 db  58 3f b9 80  2f 3a 1c 98  fc 1e 46 8c
|   dc 93 ee 6c  ec df 40 4d  3d 08 d7 ed  92 6b d5 f8
|   9f 6c f9 41  2f 99 27 d2  2e 5b a5 77  5a 93 b6 3f
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 01 c0  24 00 01 a4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   c1 fc 19 db  f7 a0 0a 58  95 e0 43 74  1f 5e e0 33
|   f2 06 29 c9  8d 3e 52 00  37 22 20 6c  47 af 94 1c
|   6a 93 b3 97  1f ff 5c 1b  70 b3 48 6a  c7 5f 27 b3
|   e4 bf e1 17  0e 15 c1 47  77 7b 53 88  6c 4a cb 12
|   d0 82 94 13  cf 66 cc 4c  d8 b2 8e c1  39 07 b9 a5
|   12 f6 e0 69  cb ad 11 c1  e9 58 33 21  a8 bb a9 ec
|   40 9e ba 01  5c 8d e8 04  ac b9 22 b2  c6 ce c8 a9
|   79 a2 02 52  da d8 f7 41  ae 9c 82 85  5f f2 f5 a3
|   3f f7 09 de  d6 e7 31 43  51 69 8f 8d  fa 0b 41 e6
|   d8 07 00 68  9e b7 92 3d  47 93 37 e6  14 e0 48 0d
|   bb 1d 13 08  66 5d 87 c4  86 8a 38 f3  05 57 97 5c
|   e1 dc 5c ac  36 b4 e1 93  68 57 da 98  6c 69 99 c3
|   2a b8 60 09  8f 1f d2 d0  27 0b e5 b8  bf 6b e2 83
|   5d af f9 88  7c 09 47 32  c7 c7 72 61  b0 29 20 0b
|   a1 79 22 95  8b 5f 46 ab  30 48 6c 4f  21 93 99 84
|   a4 de 9a eb  10 24 61 19  27 da 8a 9b  ff 3f 7f 85
|   a9 c0 18 f9  23 6d e0 32  33 ca 20 5b  5c dc 26 0c
|   66 92 c6 6b  e1 c9 ee ff  d8 d0 41 97  7e b6 6e be
|   af f6 9e 38  bd 3e 93 ae  c9 73 2e 3e  f5 ed 42 24
|   f6 4f a7 db  58 3f b9 80  2f 3a 1c 98  fc 1e 46 8c
|   dc 93 ee 6c  ec df 40 4d  3d 08 d7 ed  92 6b d5 f8
|   9f 6c f9 41  2f 99 27 d2  2e 5b a5 77  5a 93 b6 3f
| out calculated auth:
|   39 3f dc 12  df 61 2c c0  b9 76 87 e8  d1 3c 06 69
| #2 complete v2 state transition with STF_OK
./rekeyikev2-R1 transition from state STATE_PARENT_R1 to state STATE_PARENT_R2
| v2_state_transition: st is #2; pst is #1; transition_st is #1
./rekeyikev2-R1 STATE_PARENT_R2: received v2I2, PARENT SA established {auth=IKEv2 oursig=fakesig1 theirsig=fakecheck cipher=aes_128 integ=sha256_128 prf=prf-hmac-sha2-256 group=modp2048} (msgid: 00000001/00000001)
./rekeyikev2-R1 negotiated tunnel [fd68:c9f9:4157::,fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto:0 port:0-65535] -> [fd68:c9f9:4157:2:0:1::,fd68:c9f9:4157:2:0:1:ffff:ffff proto:0 port:0-65535]
./rekeyikev2-R1 STATE_CHILD_C1_KEYED: CHILD SA established tunnel mode {ESP=>0x12345678 <0x12345678 xfrm=aes_cbc_128-hmac_sha2_256_128 NATOA=none NATD=none DPD=none}
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 448 bytes for STATE_PARENT_R1 through eth0:500 [132.213.238.7:500] to 192.168.1.1:500 (using #2)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 20  00 00 00 01  00 00 01 c0  24 00 01 a4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   eb ff 97 78  70 72 7e b3  64 db c7 fe  e4 69 0f 92
|   2a dd bb d8  41 fc d0 3e  5c 5a 07 57  fd e7 7d 8a
|   c1 fc 19 db  f7 a0 0a 58  95 e0 43 74  1f 5e e0 33
|   f2 06 29 c9  8d 3e 52 00  37 22 20 6c  47 af 94 1c
|   6a 93 b3 97  1f ff 5c 1b  70 b3 48 6a  c7 5f 27 b3
|   e4 bf e1 17  0e 15 c1 47  77 7b 53 88  6c 4a cb 12
|   d0 82 94 13  cf 66 cc 4c  d8 b2 8e c1  39 07 b9 a5
|   12 f6 e0 69  cb ad 11 c1  e9 58 33 21  a8 bb a9 ec
|   40 9e ba 01  5c 8d e8 04  ac b9 22 b2  c6 ce c8 a9
|   79 a2 02 52  da d8 f7 41  ae 9c 82 85  5f f2 f5 a3
|   3f f7 09 de  d6 e7 31 43  51 69 8f 8d  fa 0b 41 e6
|   d8 07 00 68  9e b7 92 3d  47 93 37 e6  14 e0 48 0d
|   bb 1d 13 08  66 5d 87 c4  86 8a 38 f3  05 57 97 5c
|   e1 dc 5c ac  36 b4 e1 93  68 57 da 98  6c 69 99 c3
|   2a b8 60 09  8f 1f d2 d0  27 0b e5 b8  bf 6b e2 83
|   5d af f9 88  7c 09 47 32  c7 c7 72 61  b0 29 20 0b
|   a1 79 22 95  8b 5f 46 ab  30 48 6c 4f  21 93 99 84
|   a4 de 9a eb  10 24 61 19  27 da 8a 9b  ff 3f 7f 85
|   a9 c0 18 f9  23 6d e0 32  33 ca 20 5b  5c dc 26 0c
|   66 92 c6 6b  e1 c9 ee ff  d8 d0 41 97  7e b6 6e be
|   af f6 9e 38  bd 3e 93 ae  c9 73 2e 3e  f5 ed 42 24
|   f6 4f a7 db  58 3f b9 80  2f 3a 1c 98  fc 1e 46 8c
|   dc 93 ee 6c  ec df 40 4d  3d 08 d7 ed  92 6b d5 f8
|   9f 6c f9 41  2f 99 27 d2  2e 5b a5 77  5a 93 b6 3f
|   39 3f dc 12  df 61 2c c0  b9 76 87 e8  d1 3c 06 69
| releasing whack for #X (sock=Y)
| releasing whack for #X (sock=Y)
2: output to OUTPUT/rekeyikev2-R1.pcap
|   =========== input from pcap file rekeyCI1.pcap ========
| *received 512 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 24 09  00 00 00 02  00 00 02 00  22 00 01 e4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   73 8a 8f 42  ea 98 37 99  13 4b bb 29  ba 1d e2 de
|   2b 85 7a cc  55 e8 fc 4a  3f b2 be 15  1b fc a1 28
|   59 c7 83 3d  1d 3e 87 02  ce d7 61 79  4b 8d 4b c4
|   ff 36 93 7c  92 37 83 fc  5f 16 c2 35  0f 66 12 e2
|   ea 2b 36 dd  d4 8b 0c 3f  c6 f0 0d ac  ba 49 32 cb
|   e0 62 70 92  3b 70 79 bd  44 e6 29 ce  82 2a d6 3c
|   5e 73 62 3f  f7 0e 3e f6  90 67 13 19  70 22 b3 e5
|   da 1b d8 43  aa c4 78 d1  52 37 87 29  cc 15 58 bd
|   83 57 0c 0c  95 9f a0 ba  f2 81 6b 11  f9 4d 29 4f
|   76 df 64 86  21 6a ae 93  ff 31 af 1d  6a 4b b1 2e
|   41 b1 46 99  59 f4 1b ed  e7 65 2f 0d  2b 35 84 62
|   83 be 60 80  94 78 b1 77  6d dc fb 94  27 75 59 5a
|   e6 f1 e8 b0  9a 89 f4 b7  0a 23 17 1c  43 91 f0 6c
|   d7 5e 40 b8  2a 3c 54 57  c3 84 b3 25  28 12 d4 5c
|   53 c3 18 44  21 6b de 28  1d bb b7 23  af 5b 51 05
|   e0 7c 61 26  3a 4a 03 d4  33 57 d8 be  04 05 89 7f
|   7f 88 4e f5  55 23 4c 3c  0d 87 f0 8e  2e 39 cc ef
|   4b 49 b0 8b  be e4 88 cc  73 6b 6c fd  6f 11 10 3f
|   ff 5c 46 0c  47 61 5a 7e  70 25 61 77  96 e0 52 d8
|   9d 15 37 06  e6 51 42 a0  ce db 38 bf  df 45 82 a7
|   82 b6 d9 3b  37 e3 aa 74  54 5a 8c c8  84 5c 34 4c
|   ad 77 8c 9d  b8 ac 37 ad  70 e4 3c fc  cb 36 98 ce
|   8e 76 fb eb  06 07 0e 7b  4f 0f 6a 4f  06 f1 7e 02
|   ac c9 40 1c  a1 c2 e0 fa  da cd 45 e5  a4 19 1f 59
|   00 63 6e 77  96 fb 21 48  81 c6 99 38  67 a4 fb 7f
|   f7 22 d6 80  2d 64 fa 36  bd f5 66 8c  ea 9d fb dc
|   da 8f cb 61  aa 28 d7 6f  63 8f 3e 22  5e ae 26 07
|   05 ed 60 4b  fe 7b ba 76  76 c7 9a 2f  cf 25 a2 d3
|   b5 73 f8 db  94 08 4c b0  b2 6a b6 0e  d2 89 a5 b9
|  processing version=2.0 packet with exchange type=ISAKMP_v2_CHILD_SA (36), msgid: 00000002
| I am the IKE SA Responder
| I am this exchange's Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 peer and cookies match on #1
| v2 state object #1 (parker1--jj2) found, in STATE_PARENT_R2
| state found and its state is:STATE_PARENT_R2 msgid: 00002
| considering state entry: 0
|   reject: received request, needs response message
| considering state entry: 1
|   reject: received request, needs response message
| considering state entry: 2
|   reject: received request, needs response message
| considering state entry: 3
|   reject:state unneeded and state available
| considering state entry: 4
|   reject: in state: STATE_PARENT_R2, needs STATE_PARENT_R1
| considering state entry: 5
| considering state entry: 6
|   reject: received request, needs response message
| considering state entry: 7
| now proceed with state specific processing using state #7 rekey-child-SA-responder
| duplicating state object #1
| creating state object #3 at Z
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #3 bucket: 28
| decrypting payload as RESPONDER
| decrypting as RESPONDER, using INITIATOR keys
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 24 09  00 00 00 02  00 00 02 00  22 00 01 e4
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   73 8a 8f 42  ea 98 37 99  13 4b bb 29  ba 1d e2 de
|   2b 85 7a cc  55 e8 fc 4a  3f b2 be 15  1b fc a1 28
|   59 c7 83 3d  1d 3e 87 02  ce d7 61 79  4b 8d 4b c4
|   ff 36 93 7c  92 37 83 fc  5f 16 c2 35  0f 66 12 e2
|   ea 2b 36 dd  d4 8b 0c 3f  c6 f0 0d ac  ba 49 32 cb
|   e0 62 70 92  3b 70 79 bd  44 e6 29 ce  82 2a d6 3c
|   5e 73 62 3f  f7 0e 3e f6  90 67 13 19  70 22 b3 e5
|   da 1b d8 43  aa c4 78 d1  52 37 87 29  cc 15 58 bd
|   83 57 0c 0c  95 9f a0 ba  f2 81 6b 11  f9 4d 29 4f
|   76 df 64 86  21 6a ae 93  ff 31 af 1d  6a 4b b1 2e
|   41 b1 46 99  59 f4 1b ed  e7 65 2f 0d  2b 35 84 62
|   83 be 60 80  94 78 b1 77  6d dc fb 94  27 75 59 5a
|   e6 f1 e8 b0  9a 89 f4 b7  0a 23 17 1c  43 91 f0 6c
|   d7 5e 40 b8  2a 3c 54 57  c3 84 b3 25  28 12 d4 5c
|   53 c3 18 44  21 6b de 28  1d bb b7 23  af 5b 51 05
|   e0 7c 61 26  3a 4a 03 d4  33 57 d8 be  04 05 89 7f
|   7f 88 4e f5  55 23 4c 3c  0d 87 f0 8e  2e 39 cc ef
|   4b 49 b0 8b  be e4 88 cc  73 6b 6c fd  6f 11 10 3f
|   ff 5c 46 0c  47 61 5a 7e  70 25 61 77  96 e0 52 d8
|   9d 15 37 06  e6 51 42 a0  ce db 38 bf  df 45 82 a7
|   82 b6 d9 3b  37 e3 aa 74  54 5a 8c c8  84 5c 34 4c
|   ad 77 8c 9d  b8 ac 37 ad  70 e4 3c fc  cb 36 98 ce
|   8e 76 fb eb  06 07 0e 7b  4f 0f 6a 4f  06 f1 7e 02
|   ac c9 40 1c  a1 c2 e0 fa  da cd 45 e5  a4 19 1f 59
|   00 63 6e 77  96 fb 21 48  81 c6 99 38  67 a4 fb 7f
|   f7 22 d6 80  2d 64 fa 36  bd f5 66 8c  ea 9d fb dc
|   da 8f cb 61  aa 28 d7 6f  63 8f 3e 22  5e ae 26 07
|   05 ed 60 4b  fe 7b ba 76  76 c7 9a 2f  cf 25 a2 d3
| R2 calculated auth:  b5 73 f8 db  94 08 4c b0  b2 6a b6 0e  d2 89 a5 b9
| R2  provided  auth:  b5 73 f8 db  94 08 4c b0  b2 6a b6 0e  d2 89 a5 b9
| authenticator matched, np=34
| data before decryption:
|   73 8a 8f 42  ea 98 37 99  13 4b bb 29  ba 1d e2 de
|   2b 85 7a cc  55 e8 fc 4a  3f b2 be 15  1b fc a1 28
|   59 c7 83 3d  1d 3e 87 02  ce d7 61 79  4b 8d 4b c4
|   ff 36 93 7c  92 37 83 fc  5f 16 c2 35  0f 66 12 e2
|   ea 2b 36 dd  d4 8b 0c 3f  c6 f0 0d ac  ba 49 32 cb
|   e0 62 70 92  3b 70 79 bd  44 e6 29 ce  82 2a d6 3c
|   5e 73 62 3f  f7 0e 3e f6  90 67 13 19  70 22 b3 e5
|   da 1b d8 43  aa c4 78 d1  52 37 87 29  cc 15 58 bd
|   83 57 0c 0c  95 9f a0 ba  f2 81 6b 11  f9 4d 29 4f
|   76 df 64 86  21 6a ae 93  ff 31 af 1d  6a 4b b1 2e
|   41 b1 46 99  59 f4 1b ed  e7 65 2f 0d  2b 35 84 62
|   83 be 60 80  94 78 b1 77  6d dc fb 94  27 75 59 5a
|   e6 f1 e8 b0  9a 89 f4 b7  0a 23 17 1c  43 91 f0 6c
|   d7 5e 40 b8  2a 3c 54 57  c3 84 b3 25  28 12 d4 5c
|   53 c3 18 44  21 6b de 28  1d bb b7 23  af 5b 51 05
|   e0 7c 61 26  3a 4a 03 d4  33 57 d8 be  04 05 89 7f
|   7f 88 4e f5  55 23 4c 3c  0d 87 f0 8e  2e 39 cc ef
|   4b 49 b0 8b  be e4 88 cc  73 6b 6c fd  6f 11 10 3f
|   ff 5c 46 0c  47 61 5a 7e  70 25 61 77  96 e0 52 d8
|   9d 15 37 06  e6 51 42 a0  ce db 38 bf  df 45 82 a7
|   82 b6 d9 3b  37 e3 aa 74  54 5a 8c c8  84 5c 34 4c
|   ad 77 8c 9d  b8 ac 37 ad  70 e4 3c fc  cb 36 98 ce
|   8e 76 fb eb  06 07 0e 7b  4f 0f 6a 4f  06 f1 7e 02
|   ac c9 40 1c  a1 c2 e0 fa  da cd 45 e5  a4 19 1f 59
|   00 63 6e 77  96 fb 21 48  81 c6 99 38  67 a4 fb 7f
|   f7 22 d6 80  2d 64 fa 36  bd f5 66 8c  ea 9d fb dc
|   da 8f cb 61  aa 28 d7 6f  63 8f 3e 22  5e ae 26 07
|   05 ed 60 4b  fe 7b ba 76  76 c7 9a 2f  cf 25 a2 d3
| decrypted payload:  28 00 01 08  00 0e 00 00  3d a6 6a 81  e2 92 09 be
|   18 4f a0 1e  5c ed ea 7c  7d 7b 3a 21  3e 15 0d 53
|   5d 17 6a be  1b c5 70 ab  34 47 bc 09  14 7c aa 91
|   9c 8f 81 dc  1e f9 87 cd  6a ec fa f3  a5 9e 37 bc
|   ac 3d fd e1  32 8e e8 b3  fe d3 8b f4  7b 50 34 13
|   33 7a 93 ea  e9 3c 0e 8b  bd 48 18 9c  9e 03 70 f2
|   55 ce 45 22  9f c7 c9 48  43 a3 e2 64  b5 5d 43 38
|   c8 fe f1 d3  06 43 f0 0a  e8 6d 61 8c  60 78 d9 98
|   d3 1b 3b 5e  f5 a6 e8 2f  ef 56 ac b4  33 bd 1e 62
|   b2 3e 0b 17  af 6c b8 31  08 d7 19 5a  7b c4 54 c2
|   13 47 98 c2  cc d2 16 29  75 6c 03 fb  1e 9c 9d 21
|   0c a1 e6 c2  f3 f2 49 2c  f6 06 73 c1  96 1e ce 58
|   81 01 1c cb  16 dc f9 fc  c7 93 08 75  58 16 57 71
|   69 96 66 b7  a9 81 7f f7  37 4d 7c 41  38 62 a6 39
|   00 81 ca 3d  1d fc f7 b5  08 38 d4 34  70 22 6c 21
|   d2 5b 20 a1  d2 ba 2a d1  89 f3 20 79  ce ac 1e c2
|   ec 7d ae 76  94 40 39 a0  21 00 00 06  20 98 2c 00
|   00 44 02 00  00 20 01 03  04 02 34 56  78 12 03 00
|   00 08 01 00  00 0c 00 00  00 0c 03 00  00 0c 80 0e
|   00 80 00 00  00 20 02 03  04 02 34 56  78 12 03 00
|   00 08 01 00  00 0c 00 00  00 0c 03 00  00 02 80 0e
|   00 80 2d 00  00 30 01 00  00 00 08 00  00 28 00 00
|   ff ff fd 68  c9 f9 41 57  00 02 00 00  00 01 00 00
|   00 00 fd 68  c9 f9 41 57  00 02 00 00  00 01 ff ff
|   ff ff 00 00  00 30 01 00  00 00 08 00  00 28 00 00
|   ff ff fd 68  c9 f9 41 57  00 00 00 00  00 00 00 00
|   00 00 fd 68  c9 f9 41 57  00 00 ff ff  ff ff ff ff
|   ff ff 00 01  02 03 04 05  06 07 08 09  0a 0b 0c 0d
| striping 14 bytes as pad
| **parse IKEv2 Key Exchange Payload:
|    critical bit: none
|    length: 264
|    transform type: 14
| processing payload: ISAKMP_NEXT_v2KE (len=264)
| **parse IKEv2 Nonce Payload:
|    critical bit: none
|    length: 6
| processing payload: ISAKMP_NEXT_v2Ni (len=6)
| **parse IKEv2 Security Association Payload:
|    critical bit: none
|    length: 68
| processing payload: ISAKMP_NEXT_v2SA (len=68)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSi (len=48)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSr (len=48)
./rekeyikev2-R1 msgid=2 CHILD_SA PFS rekey message received from 192.168.1.1:500 on eth0 (port=500)
| processor 'rekey-child-SA-responder' returned STF_SUSPEND (2)
| #3 complete v2 state transition with STF_SUSPEND
| ikev2 child inCI1: calculated ke+nonce, calculating g^xy
| DH public value received:
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
./rekeyikev2-R1 Ni length not between 8 and 256
./rekeyikev2-R1 sending encrypted notification ISAKMP_v2_CHILD_SA/v2N_INVALID_SYNTAX to 192.168.1.1:500
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_CHILD_SA
|    flags: ISAKMP_FLAG_ENCRYPTION+ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 02
|    next-payload: ISAKMP_NEXT_v2E [@16=0x2e]
| ***emit IKEv2 Encryption Payload:
|    critical bit: none
| emitting 16 zero bytes of iv into IKEv2 Encryption Payload
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@-20=0x29]
| *****emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_ISAKMP
|    SPI size: 0
|    Notify Message Type: v2N_INVALID_SYNTAX
| emitting length of IKEv2 Notify Payload: 8
| emitting 8 raw bytes of padding and length into cleartext
| padding and length  00 01 02 03  04 05 06 07
| emitting 16 zero bytes of length of truncated HMAC into IKEv2 Encryption Payload
| emitting length of IKEv2 Encryption Payload: 52
| emitting length of ISAKMP Message: 80
| encrypting as RESPONDER, parent SA #1
| data before encryption:
|   00 00 00 08  01 00 00 07  00 01 02 03  04 05 06 07
| data after encryption:
|   84 0d 7d 75  0a da 96 ea  49 99 22 1f  ef 87 22 f6
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 24 21  00 00 00 02  00 00 00 50  29 00 00 34
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   84 0d 7d 75  0a da 96 ea  49 99 22 1f  ef 87 22 f6
| out calculated auth:
|   5b ad ea 33  e9 19 24 b5  65 9d 59 75  82 97 26 79
sending 80 bytes for send_v2_notification_enc through eth0:500 [132.213.238.7:500] to 192.168.1.1:500 (using #3)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 24 21  00 00 00 02  00 00 00 50  29 00 00 34
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   84 0d 7d 75  0a da 96 ea  49 99 22 1f  ef 87 22 f6
|   5b ad ea 33  e9 19 24 b5  65 9d 59 75  82 97 26 79
./rekeyikev2-R1 no valid Nonce payload found
./rekeyikev2-R1 deleting state #3 (STATE_CHILD_C1_REKEY)
| received request to delete child state
| removing state object #3
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
should have found a continuation, but none was found
| freeing state object #1
./rekeyikev2-R1 leak: encrypted notification packet, item size: X
./rekeyikev2-R1 leak: Gi, item size: X
./rekeyikev2-R1 leak: long term secret, item size: X
./rekeyikev2-R1 leak: saved gi value, item size: X
./rekeyikev2-R1 leak: initiator nonce, item size: X
./rekeyikev2-R1 leak: ikev2child_inCI1 KE, item size: X
./rekeyikev2-R1 leak: st_ni in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_pr in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_pi in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_er in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_ei in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_ar in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_ai in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_d in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skeyseed in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_enc_key in duplicate_state, item size: X
./rekeyikev2-R1 leak: struct state in new_state(), item size: X
./rekeyikev2-R1 leak: message buffer in comm_handle(), item size: X
./rekeyikev2-R1 leak: reply packet, item size: X
./rekeyikev2-R1 leak: skeyseed_t1, item size: X
./rekeyikev2-R1 leak: responder keys, item size: X
./rekeyikev2-R1 leak: initiator keys, item size: X
./rekeyikev2-R1 leak: alg_info_esp, item size: X
./rekeyikev2-R1 leak: db_context->attrs, item size: X
./rekeyikev2-R1 leak: db_context->trans, item size: X
./rekeyikev2-R1 leak: 2 * db_context->conj, item size: X
./rekeyikev2-R1 leak: v2 policy database, item size: X
./rekeyikev2-R1 leak: st_nr in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_ni in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_pr in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_pi in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_er in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_ei in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_ar in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_ai in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skey_d in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_skeyseed in duplicate_state, item size: X
./rekeyikev2-R1 leak: st_enc_key in duplicate_state, item size: X
./rekeyikev2-R1 leak: struct state in new_state(), item size: X
./rekeyikev2-R1 leak: ikev2_inI2outR2 KE, item size: X
./rekeyikev2-R1 leak: alg_info_ike, item size: X
./rekeyikev2-R1 leak: ikev2_inI1outR1 KE, item size: X
./rekeyikev2-R1 leak: msg_digest, item size: X
./rekeyikev2-R1 leak: 2 * keep id name, item size: X
./rekeyikev2-R1 leak: ID host_pair, item size: X
./rekeyikev2-R1 leak: host_pair, item size: X
./rekeyikev2-R1 leak: host ip, item size: X
./rekeyikev2-R1 leak: keep id name, item size: X
./rekeyikev2-R1 leak: host ip, item size: X
./rekeyikev2-R1 leak: keep id name, item size: X
./rekeyikev2-R1 leak: connection name, item size: X
./rekeyikev2-R1 leak: struct connection, item size: X
./rekeyikev2-R1 leak: keep id name, item size: X
./rekeyikev2-R1 leak: pubkey entry, item size: X
./rekeyikev2-R1 leak: rfc3110 format of public key, item size: X
./rekeyikev2-R1 leak: pubkey, item size: X
./rekeyikev2-R1 leak: keep id name, item size: X
./rekeyikev2-R1 leak: pubkey entry, item size: X
./rekeyikev2-R1 leak: rfc3110 format of public key, item size: X
./rekeyikev2-R1 leak: pubkey, item size: X
./rekeyikev2-R1 leak: 2 * id list, item size: X
./rekeyikev2-R1 leak: rfc3110 format of public key [created], item size: X
./rekeyikev2-R1 leak: pubkey, item size: X
./rekeyikev2-R1 leak: secret, item size: X
./rekeyikev2-R1 leak: 4 * hasher name, item size: X
./rekeyikev2-R1 leak: 10 * group description, item size: X
./rekeyikev2-R1 leak: policies path, item size: X
./rekeyikev2-R1 leak: ocspcerts path, item size: X
./rekeyikev2-R1 leak: aacerts path, item size: X
./rekeyikev2-R1 leak: certs path, item size: X
./rekeyikev2-R1 leak: private path, item size: X
./rekeyikev2-R1 leak: crls path, item size: X
./rekeyikev2-R1 leak: cacert path, item size: X
./rekeyikev2-R1 leak: acert path, item size: X
./rekeyikev2-R1 leak: default conf var_dir, item size: X
./rekeyikev2-R1 leak: default conf conffile, item size: X
./rekeyikev2-R1 leak: default conf ipsecd_dir, item size: X
./rekeyikev2-R1 leak: default conf ipsec_conf_dir, item size: X
./rekeyikev2-R1 leak detective found Z leaks, total size X
Pre-amble (offset: X): #!-pluto-whack-file- recorded on FOO
