parentXY-test
================

    lp02-parentI1   ----I1-->
                              lp08-parentR1
                              lp06-parentR1notchosen
                    <--R1----
    lp11-parentI2dup
    lp10-parentI2   ----I1-->
                                 lp12-parentR2
                                 lp06-msg1noproopchosen
                    <--R2----
    lp13-parentI3

These test cases do IKEv2 with RSA keys, using whatever the built-in, default policy is.
Almost all subsequent tests are built upon these tests.

Status: working.

lp11-parentI2dup
----------------
This test determines what happens if the R1 message is duplicated for some
reason.

lp06-parentR1nochosen
---------------------
This test determines what happens when the responder has no matching policy.

lp72-msg1nopropchosen
---------------------
This test determines what happens when the responder chooses no proposal,
but the initiator sends some additional messages.

initiateself
============

A key part of Opportunistic Encryption and other uses is that the policy
allow a remote entity to create a policy for itself only.  That is, IPv4 /32,
or IPv6/128.


    lp14-initiateself   ----I1-->
                                 lp15-respondself
                        <--R1----
    lp16-initiateselfI2 ----I1-->
                                 lp17-childselfpolicy
                        <--R2----

certificateself
===============

This series of tests uses a certificate with a policy for /32.  This requires
that the general policy (a template) be instantiated into a specific policy.


    lp18-certificateselfI1 ----I1-->
                                      lp19-certreplyselfR1
                           <---R1---
    lp20-certificateselfI2 ----I2-->
