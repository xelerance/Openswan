./cryptoR2 ike_alg_register_enc(): Activating OAKLEY_AES_CBC: Ok (ret=0)
./cryptoR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_512: Ok (ret=0)
./cryptoR2 ike_alg_register_prf(): Activating prf-hmac-sha2-512: Ok (ret=0)
./cryptoR2 ike_alg_register_hash(): Activating OAKLEY_SHA2_256: Ok (ret=0)
./cryptoR2 ike_alg_register_prf(): Activating prf-hmac-sha2-256: Ok (ret=0)
./cryptoR2 ike_alg_register_hash(): Activating OAKLEY_SHA1: Ok (ret=0)
./cryptoR2 ike_alg_register_prf(): Activating prf-hmac-sha1: Ok (ret=0)
./cryptoR2 ike_alg_register_prf(): Activating prf-hmac-md5: Ok (ret=0)
./cryptoR2 ike_alg_register_hash(): Activating OAKLEY_MD5: Ok (ret=0)
./cryptoR2 loading secrets from "../../libpluto/samples/jj.secrets"
./cryptoR2 loaded private key for keyid: PPK_RSA:AQOg5H7A4/2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
./cryptoR2 registed kernel encr algorithm aes_cbc [12, 128<=key<=512]
./cryptoR2 registed kernel encr algorithm 3des [3, 192<=key<=192]
./cryptoR2 registed kernel integ algorithm auth-hmac-sha1-96 [2, 160<=key<=160]
./cryptoR2 registed kernel integ algorithm auth-hmac-md5-96 [1, 128<=key<=128]
| processing whack message of size: A
| processing whack message of size: A
processing whack msg time: X size: Y
./cryptoR2 loaded key: 2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701
| processing whack message of size: A
processing whack msg time: X size: Y
./cryptoR2 loaded key: 66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9
| processing whack message of size: A
processing whack msg time: X size: Y
| Added new connection parker1--jj2 with policy RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
./cryptoR2 use keyid: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 / 2:<>
| counting wild cards for @jamesjohnson.emmjay.credil.org is 0
./cryptoR2 use keyid: 1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 / 2:<>
| counting wild cards for @parker01.emmjay.credil.org is 0
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 exact-match
| find_host_pair: concluded with <none>
| connect_to_host_pair: 132.213.238.7:500 %address 192.168.1.1:500 -> hp:none
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (exact)
|   concluded with <none>
./cryptoR2 adding connection: "parker1--jj2"
| fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96
| ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
RC=0 "parker1--jj2": fd68:c9f9:4157::/64===132.213.238.7[@jamesjohnson.emmjay.credil.org]...192.168.1.1[@parker01.emmjay.credil.org]===fd68:c9f9:4157:2:0:1::/96; unrouted; eroute owner: #0
RC=0 "parker1--jj2":     myip=unset; hisip=unset;
RC=0 "parker1--jj2":   keys: 1:2A3A 92D4 E0FA 5CD7 8DE1 D133 0C62 6985 2B6E D701 2:none...
RC=0 "parker1--jj2":        ....1:66A6 7046 BBAB E28F 310E C6C0 80EC 790E F556 2AB9 2:none
RC=0 "parker1--jj2":   ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0
RC=0 "parker1--jj2":   policy: RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK; prio: 64,96; interface: eth0; kind=CK_PERMANENT
0: input from parentI1.pcap
|   =========== input from pcap file parentI1.pcap ========
| *received 836 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 03 44  22 00 01 fc
|   02 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 02  03 00 00 08
|   02 00 00 02  00 00 00 08  04 00 00 0e  02 00 00 2c
|   02 01 00 04  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  02 00 00 28  03 01 00 04
|   03 00 00 08  01 00 00 03  03 00 00 08  03 00 00 02
|   03 00 00 08  02 00 00 02  00 00 00 08  04 00 00 0e
|   02 00 00 28  04 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  02 00 00 2c  05 01 00 04
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 08
|   03 00 00 02  03 00 00 08  02 00 00 02  00 00 00 08
|   04 00 00 05  02 00 00 2c  06 01 00 04  03 00 00 0c
|   01 00 00 0c  80 0e 00 80  03 00 00 08  03 00 00 01
|   03 00 00 08  02 00 00 01  00 00 00 08  04 00 00 05
|   02 00 00 28  07 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 02  03 00 00 08  02 00 00 02
|   00 00 00 08  04 00 00 05  02 00 00 28  08 01 00 04
|   03 00 00 08  01 00 00 03  03 00 00 08  03 00 00 01
|   03 00 00 08  02 00 00 01  00 00 00 08  04 00 00 05
|   02 00 00 28  09 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 02  03 00 00 08  02 00 00 02
|   00 00 00 08  04 00 00 02  02 00 00 28  0a 01 00 04
|   03 00 00 08  01 00 00 03  03 00 00 08  03 00 00 01
|   03 00 00 08  02 00 00 01  00 00 00 08  04 00 00 02
|   02 00 00 2c  0b 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 02  03 00 00 08
|   02 00 00 02  00 00 00 08  04 00 00 02  00 00 00 2c
|   0c 01 00 04  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 02  28 00 01 08  00 0e 00 00
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|   2b 00 00 14  20 98 9d 37  a8 14 a6 4d  8f f0 7c 08
|   d3 20 e9 e3  00 00 00 10  4f 45 70 6c  75 74 6f 75
|   6e 69 74 30
|  processing version=2.0 packet with exchange type=ISAKMP_v2_SA_INIT (34), msgid: 00000000
| I am IKE SA Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 4
| v2 state object not found
| considering state entry: 0
|   reject:state needed and state unavailable
| considering state entry: 1
|   reject:state needed and state unavailable
| considering state entry: 2
|   reject:state needed and state unavailable
| considering state entry: 3
| now proceed with state specific processing using state #3 responder-V2_init
| find_host_connection2 called from ikev2parent_inI1outR1, me=132.213.238.7:500 him=192.168.1.1:500 policy=IKEv2ALLOW/-
| find_host_pair: looking for me=132.213.238.7:500 %address him=192.168.1.1:500 any-match
| find_host_pair: comparing to me=132.213.238.7:500 %address him=192.168.1.1:500
| find_host_pair: concluded with parker1--jj2
| found_host_pair_conn (find_host_connection2): 132.213.238.7:500 %address/192.168.1.1:500 -> hp:parker1--jj2
| searching for connection with policy = IKEv2ALLOW/-
| found policy = RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK (parker1--jj2)
| find_host_connection2 returns parker1--jj2 (ike=none/none)
./cryptoR2 tentatively considering connection: parker1--jj2
| creating state object #1 at Z
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:4500)
| orient parker1--jj2 checking against if: eth0 (AF_INET:132.213.238.7:500)
|     orient matched on IP
|   orient parker1--jj2 finished with: 1 [132.213.238.7]
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #1 bucket: 28
| will not send/process a dcookie
| processor 'responder-V2_init' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI1outR1: calculated ke+nonce, sending R1
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_SA_INIT
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 00
| ***emit IKEv2 Security Association Payload:
|    critical bit: none
| no IKE algorithms for this connection
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 44
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 1
|    transform ID: 12
| ******parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 3
|    transform ID: 2
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 2
|    transform ID: 2
| *****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 4
|    transform ID: 14
| selected proposal 1 encr=aes_cbc[128] integ=auth-hmac-sha1-96 prf=prf-hmac-sha1 modp=OAKLEY_GROUP_MODP2048
| ****parse IKEv2 Proposal Substructure Payload:
|    length: 44
|    prop #: 2
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| ****emit IKEv2 Proposal Substructure Payload:
|    prop #: 1
|    proto ID: 1
|    spi size: 0
|    # transforms: 4
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 1
|    transform ID: 12
| ******emit IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 3
|    transform ID: 2
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 2
|    transform ID: 2
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    transform type: 4
|    transform ID: 14
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 44
| emitting length of IKEv2 Security Association Payload: 48
| DH public value received:
|   3d a6 6a 81  e2 92 09 be  18 4f a0 1e  5c ed ea 7c
|   7d 7b 3a 21  3e 15 0d 53  5d 17 6a be  1b c5 70 ab
|   34 47 bc 09  14 7c aa 91  9c 8f 81 dc  1e f9 87 cd
|   6a ec fa f3  a5 9e 37 bc  ac 3d fd e1  32 8e e8 b3
|   fe d3 8b f4  7b 50 34 13  33 7a 93 ea  e9 3c 0e 8b
|   bd 48 18 9c  9e 03 70 f2  55 ce 45 22  9f c7 c9 48
|   43 a3 e2 64  b5 5d 43 38  c8 fe f1 d3  06 43 f0 0a
|   e8 6d 61 8c  60 78 d9 98  d3 1b 3b 5e  f5 a6 e8 2f
|   ef 56 ac b4  33 bd 1e 62  b2 3e 0b 17  af 6c b8 31
|   08 d7 19 5a  7b c4 54 c2  13 47 98 c2  cc d2 16 29
|   75 6c 03 fb  1e 9c 9d 21  0c a1 e6 c2  f3 f2 49 2c
|   f6 06 73 c1  96 1e ce 58  81 01 1c cb  16 dc f9 fc
|   c7 93 08 75  58 16 57 71  69 96 66 b7  a9 81 7f f7
|   37 4d 7c 41  38 62 a6 39  00 81 ca 3d  1d fc f7 b5
|   08 38 d4 34  70 22 6c 21  d2 5b 20 a1  d2 ba 2a d1
|   89 f3 20 79  ce ac 1e c2  ec 7d ae 76  94 40 39 a0
|    next-payload: ISAKMP_NEXT_v2KE [@28=0x22]
| ***emit IKEv2 Key Exchange Payload:
|    critical bit: none
|    transform type: 14
| emitting 256 raw bytes of ikev2 g^x into IKEv2 Key Exchange Payload
| ikev2 g^x  a5 9a 13 6c  b8 87 48 57  e1 22 6e a0  b8 55 c2 00
|   31 15 65 84  8b f9 dc a4  5f 49 d4 c5  f0 98 8e 9b
|   31 85 6e 27  5a c2 75 09  07 37 05 b5  b1 53 18 07
|   81 e8 1d 07  c6 19 1c de  dc 1f 2c 26  d2 0b 59 f9
|   67 6a ee 3c  e5 fa 72 3f  54 96 1e 7d  8e d0 30 08
|   0b ed 95 b0  65 2f 5c a6  36 7e 92 2d  da cb 88 54
|   e3 97 fa 16  6f 9e 7c a6  0c 43 2f 29  be 2c a4 55
|   68 01 45 bc  56 a9 84 b9  2b 1b bf 9a  fc 84 67 5f
|   d3 04 79 90  b7 fa 89 5b  04 06 d5 9a  50 92 16 4b
|   d6 33 40 be  2a 44 94 74  33 a7 a5 c1  1f 88 5b eb
|   4e d2 bb 94  b9 22 db e3  b6 5a 8c f9  d6 43 5d 5e
|   5d c9 19 b8  c8 81 53 01  95 09 02 7b  c0 2a b0 c8
|   5d 2c 69 78  6c e8 f6 5d  e4 90 43 83  fd f7 98 5e
|   cc 92 5c 79  7b 62 ae 98  db 4f 7f e0  68 7c cd 29
|   69 0a ad a3  e8 37 d7 41  b4 79 b3 a5  38 a2 8d a0
|   69 ff bd aa  ba d5 54 70  40 ab b5 fc  26 6d ae ce
| emitting length of IKEv2 Key Exchange Payload: 264
|    next-payload: ISAKMP_NEXT_v2Ni [@76=0x28]
| ***emit IKEv2 Nonce Payload:
|    critical bit: none
| emitting 16 raw bytes of IKEv2 nonce into IKEv2 Nonce Payload
| IKEv2 nonce  c6 ba 31 9f  88 5b e7 b7  a2 93 85 dc  bb c6 15 84
| emitting length of IKEv2 Nonce Payload: 20
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   84 d5 ee 07  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@340=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe
| emitting length of IKEv2 Notify Payload: 28
| nat chunk  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   c0 a8 01 01  01 f4
| Adding a v2N Payload
|    next-payload: ISAKMP_NEXT_v2N [@360=0x29]
| ***emit IKEv2 Notify Payload:
|    critical bit: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  81 b5 74 15  c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab
|   25 31 bf 62
| emitting length of IKEv2 Notify Payload: 28
| Thinking about sending a certificate request (CERTREQ)
|   my policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|   my next payload will not be a certificate request
| I did not send a certificate request (CERTREQ) because
|  has a preloaded a public for that end in st
|   no known CA for the other end
|   no CA certs available for validation
|    next-payload: ISAKMP_NEXT_v2V [@388=0x2b]
| ***emit ISAKMP Vendor ID Payload:
| emitting 12 raw bytes of Vendor ID into ISAKMP Vendor ID Payload
| Vendor ID  4f 45 70 6c  75 74 6f 75  6e 69 74 30
| emitting length of ISAKMP Vendor ID Payload: 16
| emitting length of ISAKMP Message: 432
| #1 complete v2 state transition with STF_OK
./cryptoR2 transition from state STATE_IKEv2_START to state STATE_PARENT_R1
| v2_state_transition: st is #1; pst is #0; transition_st is #1
./cryptoR2 STATE_PARENT_R1: received v2I1, sent v2R1 (msgid: 00000000/00000000)
| sending reply packet to 192.168.1.1:500 (from port 500)
sending 432 bytes for STATE_IKEv2_START through eth0:500 [132.213.238.7:500] to 192.168.1.1:500 (using #1)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   21 20 22 20  00 00 00 00  00 00 01 b0  22 00 00 30
|   00 00 00 2c  01 01 00 04  03 00 00 0c  01 00 00 0c
|   80 0e 00 80  03 00 00 08  03 00 00 02  03 00 00 08
|   02 00 00 02  00 00 00 08  04 00 00 0e  28 00 01 08
|   00 0e 00 00  a5 9a 13 6c  b8 87 48 57  e1 22 6e a0
|   b8 55 c2 00  31 15 65 84  8b f9 dc a4  5f 49 d4 c5
|   f0 98 8e 9b  31 85 6e 27  5a c2 75 09  07 37 05 b5
|   b1 53 18 07  81 e8 1d 07  c6 19 1c de  dc 1f 2c 26
|   d2 0b 59 f9  67 6a ee 3c  e5 fa 72 3f  54 96 1e 7d
|   8e d0 30 08  0b ed 95 b0  65 2f 5c a6  36 7e 92 2d
|   da cb 88 54  e3 97 fa 16  6f 9e 7c a6  0c 43 2f 29
|   be 2c a4 55  68 01 45 bc  56 a9 84 b9  2b 1b bf 9a
|   fc 84 67 5f  d3 04 79 90  b7 fa 89 5b  04 06 d5 9a
|   50 92 16 4b  d6 33 40 be  2a 44 94 74  33 a7 a5 c1
|   1f 88 5b eb  4e d2 bb 94  b9 22 db e3  b6 5a 8c f9
|   d6 43 5d 5e  5d c9 19 b8  c8 81 53 01  95 09 02 7b
|   c0 2a b0 c8  5d 2c 69 78  6c e8 f6 5d  e4 90 43 83
|   fd f7 98 5e  cc 92 5c 79  7b 62 ae 98  db 4f 7f e0
|   68 7c cd 29  69 0a ad a3  e8 37 d7 41  b4 79 b3 a5
|   38 a2 8d a0  69 ff bd aa  ba d5 54 70  40 ab b5 fc
|   26 6d ae ce  29 00 00 14  c6 ba 31 9f  88 5b e7 b7
|   a2 93 85 dc  bb c6 15 84  29 00 00 1c  00 00 40 04
|   1d 77 eb e3  db b6 db 7c  4b b5 ef 4b  57 c6 f1 b8
|   ec 7e 9b fe  2b 00 00 1c  00 00 40 05  81 b5 74 15
|   c4 1e 64 b8  4c 1a 4e 9c  14 92 f7 ab  25 31 bf 62
|   00 00 00 10  4f 45 70 6c  75 74 6f 75  6e 69 74 30
1: output to OUTPUT/cryptoR2.pcap
1: input from parentI2.pcap
|   =========== input from pcap file parentI2.pcap ========
| *received 620 bytes from 192.168.1.1:500 on eth0 (port=500)
|   80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 6c  23 00 02 50
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   7b ce 93 40  23 78 df d9  21 f3 17 88  da 5d 92 88
|   69 d0 a6 7b  19 39 af 0b  68 5b c2 11  fe 3e 13 60
|   1b 68 3a 6b  58 61 06 49  46 f2 e7 3e  3b 4e 9f 30
|   0f 2d 6a 10  82 d1 af 04  0a 56 3e 4c  b5 dd c8 08
|   17 e4 83 2d  a7 d4 8e a4  3a b8 7a b7  ab 84 12 10
|   9a 37 e4 7e  cd d7 1c 57  be 29 d4 11  19 e8 c1 df
|   0f 2f bd c3  e5 78 22 67  93 de 0c ab  16 59 f0 df
|   dd 7c 98 e7  ba 4e 32 e5  7b ec 3d 18  ae 1f c2 fa
|   80 5e 91 fe  13 6e 96 8f  6e 13 54 68  02 46 61 ea
|   bc 4b a1 56  47 1f 7f 0c  5a b6 75 d2  ee 77 f8 3e
|   9f 9c aa 30  ac 65 07 ec  92 5e fa c5  a6 90 e6 e5
|   57 0b 06 20  d7 e8 76 88  ab ce 84 fe  51 46 fb 19
|   22 69 01 09  2e 3d 6b 4c  a8 66 18 03  84 72 a1 18
|   3d 56 0d f3  57 ad 0d e2  c6 48 bd ce  62 40 8b 64
|   86 e2 2a d2  be 8c 68 d2  e7 48 e6 22  e4 d4 58 01
|   a7 28 48 a5  8f 2f 64 34  b8 84 c1 6b  f3 af c5 b2
|   53 8e 6d 97  4b 39 8b 16  3d 15 84 49  83 3a 8b 9f
|   6b 26 6f 56  e0 5b 0b 1a  cf f4 2e bb  9e 17 14 ec
|   9e 3b 6e f2  a8 01 f9 a8  aa 91 a8 14  8a 5c 4a 0f
|   e3 2f fc 62  75 3c 14 5b  e0 41 fc a5  9a 7e 4e f0
|   6a 37 4a 25  75 35 b7 b9  e0 37 9d ee  4f 5b 85 1f
|   46 5f 48 92  f7 9f 57 49  ce 14 bf 04  ea 62 d9 7a
|   1f 4b d9 41  13 4d ba 0c  b2 c6 30 3a  75 02 e7 1c
|   76 78 59 f1  66 f3 54 4a  9f 9e 5f 79  91 cb 2d 44
|   6d 66 55 2d  4f 20 89 ae  00 75 34 2c  48 ff aa 30
|   35 77 cf a2  e4 2c 22 cb  80 1e 48 51  62 cc 6f 8f
|   d8 a6 65 ad  0d 62 b0 86  0e 67 a6 2b  c1 54 da 3c
|   39 73 5e be  f1 6e 17 21  68 69 b5 9e  f9 4f 2a c6
|   28 e4 ba b7  f3 07 89 92  e9 07 da 2e  2d af 1c df
|   72 5a 8e cc  3f 1b e0 a8  de e2 dc c7  d0 6e 57 a2
|   5e a4 b4 db  7a 7c a8 10  3b f1 25 56  20 a0 c0 89
|   a0 f7 e6 2c  92 d0 ed 0d  e8 74 1f 43  18 df 29 a2
|   96 fc 3e 1d  1f 3a 79 17  96 31 82 c8  d3 ad 44 b1
|   e4 73 6a c9  8c 95 57 f8  e5 30 cc ec
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35), msgid: 00000001
| I am IKE SA Responder
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 state object not found
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| v2 peer and cookies match on #1
| v2 state object #1 (parker1--jj2) found, in STATE_PARENT_R1
| state found and its state is:STATE_PARENT_R1 msgid: 00001
| considering state entry: 0
|   reject: in state: STATE_PARENT_R1, needs STATE_PARENT_I1
| considering state entry: 1
|   reject: in state: STATE_PARENT_R1, needs STATE_PARENT_I1
| considering state entry: 2
|   reject: in state: STATE_PARENT_R1, needs STATE_CHILD_C0_KEYING
| considering state entry: 3
|   reject:state unneeded and state available
| considering state entry: 4
| now proceed with state specific processing using state #4 responder-auth-process
| ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
| processor 'responder-auth-process' returned STF_SUSPEND (2)
| #1 complete v2 state transition with STF_SUSPEND
| ikev2 parent inI2outR2: calculating g^{xy}, sending R2
| ikev2 parent SA details
| ikev2 I 0x8001020304050607 0xdebc583a8f40d0cf sha1:0x4ea8e662b07cdd430f6944c6723e4b82d5722418 aes128:0x3f44bf47cafd8150591deb088199fcbf
| ikev2 R 0x8001020304050607 0xdebc583a8f40d0cf sha1:0x515b0bd22e6d76b34fdb760aa7bfad80b109b75d aes128:0xbedb67ec7dc3d00cccac42e70cd63bde
| decrypting as RESPONDER, using INITIATOR keys
| data being hmac:  80 01 02 03  04 05 06 07  de bc 58 3a  8f 40 d0 cf
|   2e 20 23 08  00 00 00 01  00 00 02 6c  23 00 02 50
|   80 01 02 03  04 05 06 07  08 09 0a 0b  0c 0d 0e 0f
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   7b ce 93 40  23 78 df d9  21 f3 17 88  da 5d 92 88
|   69 d0 a6 7b  19 39 af 0b  68 5b c2 11  fe 3e 13 60
|   1b 68 3a 6b  58 61 06 49  46 f2 e7 3e  3b 4e 9f 30
|   0f 2d 6a 10  82 d1 af 04  0a 56 3e 4c  b5 dd c8 08
|   17 e4 83 2d  a7 d4 8e a4  3a b8 7a b7  ab 84 12 10
|   9a 37 e4 7e  cd d7 1c 57  be 29 d4 11  19 e8 c1 df
|   0f 2f bd c3  e5 78 22 67  93 de 0c ab  16 59 f0 df
|   dd 7c 98 e7  ba 4e 32 e5  7b ec 3d 18  ae 1f c2 fa
|   80 5e 91 fe  13 6e 96 8f  6e 13 54 68  02 46 61 ea
|   bc 4b a1 56  47 1f 7f 0c  5a b6 75 d2  ee 77 f8 3e
|   9f 9c aa 30  ac 65 07 ec  92 5e fa c5  a6 90 e6 e5
|   57 0b 06 20  d7 e8 76 88  ab ce 84 fe  51 46 fb 19
|   22 69 01 09  2e 3d 6b 4c  a8 66 18 03  84 72 a1 18
|   3d 56 0d f3  57 ad 0d e2  c6 48 bd ce  62 40 8b 64
|   86 e2 2a d2  be 8c 68 d2  e7 48 e6 22  e4 d4 58 01
|   a7 28 48 a5  8f 2f 64 34  b8 84 c1 6b  f3 af c5 b2
|   53 8e 6d 97  4b 39 8b 16  3d 15 84 49  83 3a 8b 9f
|   6b 26 6f 56  e0 5b 0b 1a  cf f4 2e bb  9e 17 14 ec
|   9e 3b 6e f2  a8 01 f9 a8  aa 91 a8 14  8a 5c 4a 0f
|   e3 2f fc 62  75 3c 14 5b  e0 41 fc a5  9a 7e 4e f0
|   6a 37 4a 25  75 35 b7 b9  e0 37 9d ee  4f 5b 85 1f
|   46 5f 48 92  f7 9f 57 49  ce 14 bf 04  ea 62 d9 7a
|   1f 4b d9 41  13 4d ba 0c  b2 c6 30 3a  75 02 e7 1c
|   76 78 59 f1  66 f3 54 4a  9f 9e 5f 79  91 cb 2d 44
|   6d 66 55 2d  4f 20 89 ae  00 75 34 2c  48 ff aa 30
|   35 77 cf a2  e4 2c 22 cb  80 1e 48 51  62 cc 6f 8f
|   d8 a6 65 ad  0d 62 b0 86  0e 67 a6 2b  c1 54 da 3c
|   39 73 5e be  f1 6e 17 21  68 69 b5 9e  f9 4f 2a c6
|   28 e4 ba b7  f3 07 89 92  e9 07 da 2e  2d af 1c df
|   72 5a 8e cc  3f 1b e0 a8  de e2 dc c7  d0 6e 57 a2
|   5e a4 b4 db  7a 7c a8 10  3b f1 25 56  20 a0 c0 89
|   a0 f7 e6 2c  92 d0 ed 0d  e8 74 1f 43  18 df 29 a2
|   96 fc 3e 1d  1f 3a 79 17  96 31 82 c8  d3 ad 44 b1
| R2 calculated auth:  e4 73 6a c9  8c 95 57 f8  e5 30 cc ec
| R2  provided  auth:  e4 73 6a c9  8c 95 57 f8  e5 30 cc ec
| authenticator matched, np=35
| data before decryption:
|   bc 35 37 b7  f3 29 8d 7f  0e 4a 2b b3  5d 29 2d b7
|   23 65 2e b5  89 be 6c b5  1e a6 e8 51  7b 82 bc 62
|   7b ce 93 40  23 78 df d9  21 f3 17 88  da 5d 92 88
|   69 d0 a6 7b  19 39 af 0b  68 5b c2 11  fe 3e 13 60
|   1b 68 3a 6b  58 61 06 49  46 f2 e7 3e  3b 4e 9f 30
|   0f 2d 6a 10  82 d1 af 04  0a 56 3e 4c  b5 dd c8 08
|   17 e4 83 2d  a7 d4 8e a4  3a b8 7a b7  ab 84 12 10
|   9a 37 e4 7e  cd d7 1c 57  be 29 d4 11  19 e8 c1 df
|   0f 2f bd c3  e5 78 22 67  93 de 0c ab  16 59 f0 df
|   dd 7c 98 e7  ba 4e 32 e5  7b ec 3d 18  ae 1f c2 fa
|   80 5e 91 fe  13 6e 96 8f  6e 13 54 68  02 46 61 ea
|   bc 4b a1 56  47 1f 7f 0c  5a b6 75 d2  ee 77 f8 3e
|   9f 9c aa 30  ac 65 07 ec  92 5e fa c5  a6 90 e6 e5
|   57 0b 06 20  d7 e8 76 88  ab ce 84 fe  51 46 fb 19
|   22 69 01 09  2e 3d 6b 4c  a8 66 18 03  84 72 a1 18
|   3d 56 0d f3  57 ad 0d e2  c6 48 bd ce  62 40 8b 64
|   86 e2 2a d2  be 8c 68 d2  e7 48 e6 22  e4 d4 58 01
|   a7 28 48 a5  8f 2f 64 34  b8 84 c1 6b  f3 af c5 b2
|   53 8e 6d 97  4b 39 8b 16  3d 15 84 49  83 3a 8b 9f
|   6b 26 6f 56  e0 5b 0b 1a  cf f4 2e bb  9e 17 14 ec
|   9e 3b 6e f2  a8 01 f9 a8  aa 91 a8 14  8a 5c 4a 0f
|   e3 2f fc 62  75 3c 14 5b  e0 41 fc a5  9a 7e 4e f0
|   6a 37 4a 25  75 35 b7 b9  e0 37 9d ee  4f 5b 85 1f
|   46 5f 48 92  f7 9f 57 49  ce 14 bf 04  ea 62 d9 7a
|   1f 4b d9 41  13 4d ba 0c  b2 c6 30 3a  75 02 e7 1c
|   76 78 59 f1  66 f3 54 4a  9f 9e 5f 79  91 cb 2d 44
|   6d 66 55 2d  4f 20 89 ae  00 75 34 2c  48 ff aa 30
|   35 77 cf a2  e4 2c 22 cb  80 1e 48 51  62 cc 6f 8f
|   d8 a6 65 ad  0d 62 b0 86  0e 67 a6 2b  c1 54 da 3c
|   39 73 5e be  f1 6e 17 21  68 69 b5 9e  f9 4f 2a c6
|   28 e4 ba b7  f3 07 89 92  e9 07 da 2e  2d af 1c df
|   72 5a 8e cc  3f 1b e0 a8  de e2 dc c7  d0 6e 57 a2
|   5e a4 b4 db  7a 7c a8 10  3b f1 25 56  20 a0 c0 89
|   a0 f7 e6 2c  92 d0 ed 0d  e8 74 1f 43  18 df 29 a2
|   96 fc 3e 1d  1f 3a 79 17  96 31 82 c8  d3 ad 44 b1
| decrypted payload:  27 00 00 22  02 00 00 00  70 61 72 6b  65 72 30 31
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67 21 00  01 08 01 00  00 00 05 0c  9e 55 84 27
|   89 f8 83 8f  2d 07 cf 4f  1a 4e 58 6e  43 d1 58 60
|   8b b0 d5 6b  ce a9 5f 58  7e e3 4f 1b  74 a4 60 a7
|   bc 35 b9 3c  76 ee a5 4f  8b bf d4 dd  c9 a5 9d a7
|   7a 26 57 b7  4a 54 a0 c4  17 fb 80 15  f3 e8 57 9d
|   5b 23 0b c7  0f 86 84 03  24 14 f3 36  99 57 e0 16
|   81 43 d9 2f  6a 44 a2 5d  8f 62 2d c7  5b 88 c3 27
|   28 65 db 5d  c6 96 8d 11  ef 8e 44 94  c5 67 e1 63
|   df 6e 26 27  67 9b eb d9  0c 15 9c f5  80 11 a0 04
|   bf a3 bb 2b  1a 45 e4 d9  09 2f ff 20  f3 db d5 f3
|   ff a1 c6 b2  c3 48 25 f3  0b ec b9 86  f9 d9 db 20
|   b8 63 04 ea  e2 21 0a de  96 15 d5 e3  80 ec 96 ea
|   b2 32 ba d8  c4 e3 d8 15  fb 00 a2 74  09 7c 23 e6
|   d8 db 5e 99  0c 48 6e ba  2f 69 c8 c7  7a 7f 96 86
|   9a 66 67 11  ad 84 99 04  30 1e 73 89  a8 f3 58 a7
|   69 3a ed 3a  e8 c6 57 10  4a 06 31 0c  55 d6 9c 4d
|   26 0a 31 54  c6 c9 83 39  9b 65 2c 00  00 9c 02 00
|   00 28 01 03  04 03 12 34  56 78 03 00  00 0c 01 00
|   00 0c 80 0e  00 80 03 00  00 08 03 00  00 02 00 00
|   00 08 05 00  00 00 02 00  00 28 02 03  04 03 12 34
|   56 78 03 00  00 0c 01 00  00 0c 80 0e  00 80 03 00
|   00 08 03 00  00 01 00 00  00 08 05 00  00 00 02 00
|   00 24 03 03  04 03 12 34  56 78 03 00  00 08 01 00
|   00 03 03 00  00 08 03 00  00 02 00 00  00 08 05 00
|   00 00 00 00  00 24 04 03  04 03 12 34  56 78 03 00
|   00 08 01 00  00 03 03 00  00 08 03 00  00 01 00 00
|   00 08 05 00  00 00 2d 00  00 30 01 00  00 00 08 00
|   00 28 00 00  ff ff fd 68  c9 f9 41 57  00 02 00 00
|   00 01 00 00  00 00 fd 68  c9 f9 41 57  00 02 00 00
|   00 01 ff ff  ff ff 00 00  00 30 01 00  00 00 08 00
|   00 28 00 00  ff ff fd 68  c9 f9 41 57  00 00 00 00
|   00 00 00 00  00 00 fd 68  c9 f9 41 57  00 00 ff ff
|   ff ff ff ff  ff ff 00 01  02 03 04 05  06 07 08 09
| striping 10 bytes as pad
| **parse IKEv2 Identification Payload:
|    critical bit: none
|    length: 34
|    id_type: ID_FQDN
| processing payload: ISAKMP_NEXT_v2IDi (len=34)
| **parse IKEv2 Authentication Payload:
|    critical bit: none
|    length: 264
|    auth method: v2_AUTH_RSA
| processing payload: ISAKMP_NEXT_v2AUTH (len=264)
| **parse IKEv2 Security Association Payload:
|    critical bit: none
|    length: 156
| processing payload: ISAKMP_NEXT_v2SA (len=156)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSi (len=48)
| **parse IKEv2 Traffic Selector Payload:
|    critical bit: none
|    length: 48
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSr (len=48)
./cryptoR2 IKEv2 mode peer ID is ID_FQDN: '@parker01.emmjay.credil.org'
| find_ID_host_pair: looking for me=(none) him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|   concluded with parker1--jj2
| idhash verify pi  cc 07 97 44  b4 a3 4e 8a  0d 2f 27 8b  ee 06 6d 07
|   a5 a5 75 2e
| idhash verify I2  02 00 00 00  70 61 72 6b  65 72 30 31  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| ikev2 verify required CA is '%any'
| checking alg=1 == 1, keyid=@parker01.emmjay.credil.org same_id=1
| key issuer CA is '%any'
| PARENT SA now authenticated, building child and reply
| **emit ISAKMP Message:
|    initiator cookie:
|   80 01 02 03  04 05 06 07
|    responder cookie:
|   de bc 58 3a  8f 40 d0 cf
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_RESPONSE
|    message ID:  00 00 00 01
|    next-payload: ISAKMP_NEXT_v2E [@16=0x2e]
| ***emit IKEv2 Encryption Payload:
|    critical bit: none
| emitting 16 zero bytes of iv into IKEv2 Encryption Payload
| IKEv2 thinking whether to send my certificate:
|  my policy has  RSASIG, the policy is : RSASIG+ENCRYPT+TUNNEL+PFS+IKEv2ALLOW+IKEv2Init+SAREFTRACK
|  sendcert: CERT_SENDIFASKED and I did not get a certificate request
|  so do not send cert.
| I did not send a certificate because I do not have one.
|    next-payload: ISAKMP_NEXT_v2IDr [@-20=0x24]
| *****emit IKEv2 Identification Payload:
|    critical bit: none
|    id_type: ID_FQDN
| emitting 30 raw bytes of my identity into IKEv2 Identification Payload
| my identity  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e  2e 65 6d 6d
|   6a 61 79 2e  63 72 65 64  69 6c 2e 6f  72 67
| emitting length of IKEv2 Identification Payload: 38
| idhash calc pr  e9 00 11 7e  41 d4 31 62  40 b8 63 22  bf 06 9f bc
|   eb 81 58 e7
| idhash calc R2  02 00 00 00  6a 61 6d 65  73 6a 6f 68  6e 73 6f 6e
|   2e 65 6d 6d  6a 61 79 2e  63 72 65 64  69 6c 2e 6f
|   72 67
| assembled IDr payload -- CERT next
| CHILD SA proposals received
| going to assemble AUTH payload
|    next-payload: ISAKMP_NEXT_v2AUTH [@0=0x27]
| *****emit IKEv2 Authentication Payload:
|    critical bit: none
|    auth method: v2_AUTH_RSA
| emitting 192 zero bytes of fake rsa sig into IKEv2 Authentication Payload
| emitting length of IKEv2 Authentication Payload: 200
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 02  00 00 00 01  ff ff ff ff
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV6_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 40
|    start port: 0
|    end port: 65535
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  00 00 00 00  00 00 00 00
| parsing 16 raw bytes of IKEv2 Traffic Selector into ipv6 ts
| ipv6 ts  fd 68 c9 f9  41 57 00 00  ff ff ff ff  ff ff ff ff
| ikev2_evaluate_connection_fit, evaluating base fit for parker1--jj2
|   ikev2_evaluate_connection_fit evaluating our I=parker1--jj2:fd68:c9f9:4157:2:0:1::/96:0/0 R=fd68:c9f9:4157::/64:0/0  to their:
|     tsi[0]=fd68:c9f9:4157:2:0:1::/fd68:c9f9:4157:2:0:1:ffff:ffff proto=0 portrange 0-65535, tsr[0]=fd68:c9f9:4157::/fd68:c9f9:4157:0:ffff:ffff:ffff:ffff proto=0 portrange 0-65535
| ei->port 0  tsi[tsi_ni].startport 0  tsi[tsi_ni].endport 65535
|       has ts_range1=32 maskbits1=96 ts_range2=64 maskbits2=64 fitbits=32896 <> -1
| bfit_n=ikev2_evaluate_connection_fit found better fit c parker1--jj2
|     evaluate_connection_port_fit tsi_n[1], best=-1
|    tsi[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0], range_i=65536 best=-1
|    tsr[0] 0-65535: exact port match with 0.  fitness 65536
|       evaluating_connection_port_fit tsi_n[0] tsr_n[0], range=65536/65536 best=-1
|     best ports fit so far: tsi[0] fitrange_i 65536, tsr[0] fitrange_r 65536, matchiness 131072
|     port_fitness 131072
| ikev2_evaluate_connection_port_fit found better fit c parker1--jj2, tsi[0],tsr[0]
| find_ID_host_pair: looking for me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (wildcard)
|                   comparing to me=@jamesjohnson.emmjay.credil.org him=@parker01.emmjay.credil.org (parker1--jj2)
|   concluded with parker1--jj2
|   checking hostpair fd68:c9f9:4157::/64 -> fd68:c9f9:4157:2:0:1::/96 is found
| ikev2_evaluate_connection_fit, concluded with parker1--jj2
| duplicating state object #1
| creating state object #2 at Z
| ICOOKIE:  80 01 02 03  04 05 06 07
| RCOOKIE:  de bc 58 3a  8f 40 d0 cf
| state hash entry 28
| inserting state object #2 bucket: 28
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157::
|   ip high: fd68:c9f9:4157:0:ffff:ffff:ffff:ffff
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV6_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: fd68:c9f9:4157:2:0:1::
|   ip high: fd68:c9f9:4157:2:0:1:ffff:ffff
|    next-payload: ISAKMP_NEXT_v2SA [@38=0x21]
| *****emit IKEv2 Security Association Payload:
|    critical bit: none
| empty esp_info, returning defaults
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 1
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
| ****parse IKEv2 Transform Substructure Payload:
|    length: 12
|    transform type: 1
|    transform ID: 12
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: KEY_LENGTH
|    length/value: 128
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 3
|    transform ID: 2
| ****parse IKEv2 Transform Substructure Payload:
|    length: 8
|    transform type: 5
|    transform ID: 0
| ***parse IKEv2 Proposal Substructure Payload:
|    length: 40
|    prop #: 2
|    proto ID: 3
|    spi size: 4
|    # transforms: 3
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  12 34 56 78
| SPI received: 12345678
./cryptoR2 ASSERTION FAILED at /osw/t7257-build1/programs/pluto/spdb_v2_struct.c:1387: ta.encrypter != NULL
Pre-amble (offset: X): #!-pluto-whack-file- recorded on FOO
