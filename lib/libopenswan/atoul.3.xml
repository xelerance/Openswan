<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry>
<refmeta>
<refentrytitle>IPSEC_ATOUL</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class='date'>11 June 2001</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>ipsec atoul</refname>
<refname>ipsec ultoa</refname>
<refpurpose>convert unsigned-long numbers to and from ASCII</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;freeswan.h&gt;

</funcsynopsisinfo>
<funcprototype>
<funcdef>const char *<function>atoul</function></funcdef>
    <paramdef>const char * <parameter>src</parameter></paramdef>
    <paramdef>size_t <parameter>srclen</parameter></paramdef>
    <paramdef>int <parameter>base</parameter></paramdef>
    <paramdef>unsigned long * <parameter>n</parameter></paramdef>
</funcprototype>
<funcsynopsisinfo>

</funcsynopsisinfo>
<funcprototype>
<funcdef>size_t <function>ultoa</function></funcdef>
    <paramdef>unsigned long <parameter>n</parameter></paramdef>
    <paramdef>int <parameter>base</parameter></paramdef>
    <paramdef>char * <parameter>dst</parameter></paramdef>
    <paramdef>size_t <parameter>dstlen</parameter></paramdef>
</funcprototype>
</funcsynopsis>
</refsynopsisdiv>


<refsect1 id='description'><title>DESCRIPTION</title>
<para>These functions are obsolete; see
<citerefentry><refentrytitle>ipsec_ttoul</refentrytitle><manvolnum>3</manvolnum></citerefentry>
for their replacements.</para>

<para><emphasis remap='I'>Atoul</emphasis>
converts an ASCII number into a binary
<emphasis remap='B'>unsigned long</emphasis>
value.
<emphasis remap='I'>Ultoa</emphasis>
does the reverse conversion, back to an ASCII version.</para>

<para>Numbers are specified in ASCII as
decimal (e.g.
<literal>123</literal>),
octal with a leading zero (e.g.
<literal>012</literal>,
which has value 10),
or hexadecimal with a leading
<emphasis remap='B'>0x</emphasis>
(e.g.
<emphasis remap='B'>0x1f</emphasis>,
which has value 31)
in either upper or lower case.</para>

<para>The
<varname role='parameter'>srclen</varname>
parameter of
<function>atoul</function>
specifies the length of the ASCII string pointed to by
<varname role='parameter'>src</varname>;
it is an error for there to be anything else
(e.g., a terminating NUL) within that length.
As a convenience for cases where an entire NUL-terminated string is
to be converted,
a
<varname role='parameter'>srclen</varname>
value of
<literal>0</literal>
is taken to mean
<emphasis remap='B'>strlen(src)</emphasis>.</para>

<para>The
<varname role='parameter'>base</varname>
parameter of
<function>atoul</function>
can be
<literal>8</literal>,
<literal>10</literal>,
or
<literal>16</literal>,
in which case the number supplied is assumed to be of that form
(and in the case of
<literal>16</literal>,
to lack any
<emphasis remap='B'>0x</emphasis>
prefix).
It can also be
<literal>0</literal>,
in which case the number is examined for a leading zero
or a leading
<emphasis remap='B'>0x</emphasis>
to determine its base,
or
<literal>13</literal>
(halfway between 10 and 16),
which has the same effect as
<literal>0</literal>
except that a non-hexadecimal
number is considered decimal regardless of any leading zero.</para>

<para>The
<varname role='parameter'>dstlen</varname>
parameter of
<function>ultoa</function>
specifies the size of the
<varname role='parameter'>dst</varname>
parameter;
under no circumstances are more than
<varname role='parameter'>dstlen</varname>
bytes written to
<varname role='parameter'>dst</varname>.
A result which will not fit is truncated.
<emphasis remap='I'>Dstlen</emphasis>
can be zero, in which case
<varname role='parameter'>dst</varname>
need not be valid and no result is written,
but the return value is unaffected;
in all other cases, the (possibly truncated) result is NUL-terminated.</para>

<para>The
<varname role='parameter'>base</varname>
parameter of
<function>ultoa</function>
must be
<literal>8</literal>,
<literal>10</literal>,
or
<literal>16</literal>.</para>

<para><emphasis remap='I'>Atoul</emphasis>
returns NULL for success and
a pointer to a string-literal error message for failure;
see DIAGNOSTICS.
<emphasis remap='I'>Ultoa</emphasis>
returns the size of buffer which would
be needed to
accommodate the full conversion result, including terminating NUL;
it is the caller's responsibility to check this against the size of
the provided buffer to determine whether truncation has occurred.</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para><citerefentry><refentrytitle>atol</refentrytitle><manvolnum>3</manvolnum></citerefentry>, <citerefentry><refentrytitle>strtoul</refentrytitle><manvolnum>3</manvolnum></citerefentry></para>
</refsect1>

<refsect1 id='diagnostics'><title>DIAGNOSTICS</title>
<para>Fatal errors in
<function>atoul</function>
are:
empty input;
unknown
<varname role='parameter'>base</varname>;
non-digit character found;
number too large for an
<emphasis remap='B'>unsigned long</emphasis>.</para>
</refsect1>

<refsect1 id='history'><title>HISTORY</title>
<para>Written for the FreeS/WAN project by Henry Spencer.</para>
</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para>There is no provision for reporting an invalid
<varname role='parameter'>base</varname>
parameter given to
<function>ultoa</function>.</para>

<para>The restriction of error reports to literal strings
(so that callers don't need to worry about freeing them or copying them)
does limit the precision of error reporting.</para>

<para>The error-reporting convention lends itself to slightly obscure code,
because many readers will not think of NULL as signifying success.
A good way to make it clearer is to write something like:</para>

<!-- .RS -->
<literallayout remap='.nf'>
<emphasis remap='B'>const char *error;</emphasis>

<emphasis remap='B'>error = atoul( /* ... */ );</emphasis>
<emphasis remap='B'>if (error != NULL) {</emphasis>
<emphasis remap='B'>        /* something went wrong */</emphasis>
</literallayout> <!-- .fi -->
</refsect1>
</refentry>

